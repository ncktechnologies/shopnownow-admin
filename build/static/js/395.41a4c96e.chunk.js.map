{"version":3,"file":"static/js/395.41a4c96e.chunk.js","mappings":"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","sources":["pages/ServiceProviders/ServiceProvidersTable.js","pages/ServiceProviders/ServiceProviders.js"],"sourcesContent":["import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport { UserOutlined } from '@ant-design/icons'\nimport MenuDivider from 'antd/lib/menu/MenuDivider'\n\nconst ServiceProvidersTable = ({\n  data,\n  loading,\n  setSingleData,\n  setUpdate,\n  handleVisible,\n  handleDelete,\n  deleteLoading,\n}) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Image',\n      key: 'serviceProvider',\n      align: 'center',\n      render: (serviceProvider) => (\n        <div>\n          {serviceProvider?.profile_photo_url ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={serviceProvider?.profile_photo_url}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </div>\n      ),\n    },\n    {\n      title: 'First Name',\n      dataIndex: 'first_name',\n      key: 'first_name',\n      width: 150,\n      ...getColumnSearchProps({\n        dataIndex: 'first_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Last Name',\n      dataIndex: 'last_name',\n      key: 'last_name',\n      width: 150,\n      ...getColumnSearchProps({\n        dataIndex: 'last_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      render: (email) => (\n        <a style={{ color: 'blue', textDecoration: 'none' }} href={`mailto:${email}`}>\n          {email}\n        </a>\n      ),\n    },\n\n    {\n      title: 'Phone',\n      dataIndex: 'phone_number',\n      key: 'phone_number',\n      render: (phone_number) =>\n        phone_number ? (\n          <a style={{ color: 'blue', textDecoration: 'none' }} href={`tel:${phone_number}`}>\n            {phone_number}\n          </a>\n        ) : (\n          'Null'\n        ),\n    },\n    {\n      title: 'Address',\n      dataIndex: 'location',\n      key: 'location',\n      render: (location) => location || 'Null',\n    },\n    {\n      title: 'Services',\n      dataIndex: 'my_service',\n      key: 'my_service',\n      render: (my_service) => (Array.isArray(my_service) && my_service.length) || 0,\n    },\n    // {\n    //   title: 'Description',\n    //   dataIndex: 'description',\n    //   key: 'description',\n    //   render: (description) => description || 'Null',\n    // },\n    // {\n    //   title: 'Earnings',\n    //   dataIndex: 'earnings',\n    //   key: 'earnings',\n    //   render: (earnings) => `â‚¦${Number(earnings).toLocaleString()}` || 'Null',\n    // },\n    {\n      title: 'Reviews',\n      dataIndex: 'provider_ratings_count',\n      key: 'provider_ratings_count',\n    },\n    {\n      title: 'Rating',\n      dataIndex: 'ratings',\n      key: 'ratings',\n      render: (ratings) => ratings || 'Null',\n    },\n    {\n      title: 'Date Created',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      width: 150,\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      width: 200,\n      render: (category) => (\n        <div>\n             <Button style={{ marginRight: '5px' }} title='View service provider details'>\n              <Link to={`/service-provider/${category?.id}`}>{'View'}</Link>\n            </Button>\n        </div>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default ServiceProvidersTable\n","import { PageHeader } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllServiceProviders } from '../../redux/serviceProviderSlice'\nimport ServiceProvidersTable from './ServiceProvidersTable'\n\nconst ServiceProviders = () => {\n  const { serviceProviders } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllServiceProviders())\n  }, [])\n\n  return (\n    <div>\n      <PageHeader title='Service Providers' />\n      <ServiceProvidersTable\n        parent={'service-category'}\n        data={serviceProviders?.data}\n        loading={serviceProviders?.loading}\n      />\n    </div>\n  )\n}\n\nexport default ServiceProviders\n"],"names":["data","loading","setSingleData","setUpdate","handleVisible","handleDelete","deleteLoading","useState","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","useRef","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","columns","title","key","align","render","serviceProvider","profile_photo_url","style","width","height","borderRadius","objectFit","src","alt","backgroundColor","icon","UserOutlined","size","getColumnSearchProps","email","color","textDecoration","href","phone_number","location","my_service","Array","isArray","length","ratings","created_at","whiteSpace","moment","format","category","marginRight","to","id","pagination","dataSource","rowKey","scroll","x","serviceProviders","useSelector","state","dispatch","useDispatch","useEffect","getAllServiceProviders","parent"],"sourceRoot":""}