{"version":3,"file":"static/js/820.efcb574a.chunk.js","mappings":"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","sources":["components/AppHeader.js","components/AppSider.js","layout/DashboardLayout.js","routes/ProtectedRoutes.js","layout/AuthLayout.js","routes/AuthRoutes.js","pages/ErrorPages/NotFoundPage.js","theme/index.js","pages/Auth/ForgotPassword.js","pages/Auth/ResetPassword.js","pages/Dashboard/index.js","pages/Bookings/index.js","pages/Clients/index.js","pages/ServiceProviders/index.js","pages/PaymentMethods/index.js","pages/Transactions/index.js","pages/Settings/index.js","ToastMessages/Messages.js","pages/ServiceCategory/CreateCategoryModal.js","pages/ServiceCategory/UpdateCategoryModal.js","pages/ServiceCategory/CategoryDatatable.js","pages/ServiceCategory/ProductCategories.js","pages/Product/CreateProduct.js","pages/Product/EditProduct.js","pages/Product/ProductTable.js","pages/Product/Products.js","pages/Product/ProductImages.js","pages/Product/ProductTabs.js","pages/Product/ProductDetails.js","pages/VarietyBox/VarietyBoxTable.js","pages/VarietyBox/VarietyBoxes.js","pages/VarietyBox/CreateVarietyBox.js","pages/VarietyBox/VarietyBoxTabs.js","pages/VarietyBox/VarietyBoxDetails.js","pages/VarietyBox/EditVarietyBox.js","pages/Groups/CountdownTimer.js","pages/Groups/GroupTable.js","pages/Groups/Groups.js","pages/Groups/Members.js","pages/Groups/GroupTab.js","pages/Groups/GroupDetail.js","pages/Customers/CustomerTable.js","pages/Customers/Customers.js","pages/Orders/OrderTable.js","pages/Orders/AboutHolder.js","pages/Customers/CustomerTabs.js","pages/Customers/AddIndividualActivity.js","pages/Customers/CustomerDetail.js","pages/Activity/UpdateGlobalActivity.js","pages/Activity/ActivityTable.js","pages/Activity/CreateGlobalActivity.js","pages/Activity/Activities.js","pages/Activity/ActivityDetails.js","pages/Subjects/UpdateSubject.js","pages/Subjects/SubjectTable.js","pages/Subjects/CreateSubject.js","pages/Subjects/Subjects.js","pages/Learnerclasses/CreatelearnerClass.js","pages/Learnerclasses/UpdateLearnerClass.js","pages/Learnerclasses/LearnerClassTable.js","pages/Learnerclasses/Learnerclasses.js","pages/LearnerAges/CreatelearnerAge.js","pages/LearnerAges/UpdateLearnerAge.js","pages/LearnerAges/LearnerAgeTable.js","pages/LearnerAges/LearnerAges.js","pages/course/CourseTable.js","pages/course/Courses.js","pages/course/CreateCourse.js","pages/course/CourseTabs.js","pages/course/CourseDetail.js","pages/Category/CreateCategory.js","pages/Category/UpdateCategory.js","pages/Category/CategoryTable.js","pages/Category/Categories.js","pages/Company/CreateCompany.js","pages/Company/UpdateCompany.js","pages/Company/CompanyTable.js","pages/Company/Companies.js","pages/Insurance/CreateInsurance.js","pages/Insurance/UpdateInsurance.js","pages/Insurance/InsuranceTable.js","pages/Insurance/CategoryTabs.js","pages/Insurance/Insurances.js","pages/Lesson/UpdateLesson.js","pages/Lesson/LessonTable.js","pages/Insurance/InsuranceRatings.js","pages/Insurance/InsuranceTabs.js","pages/Insurance/InsuranceDetail.js","pages/Company/CompanyRatings.js","pages/Company/CompanyTabs.js","pages/Company/CompanyDetails.js","pages/Lesson/CreateLesson.js","pages/Lesson/Lessons.js","pages/Lesson/LessonDetails.js","utils/Commons.js","pages/Claim/ClaimTable.js","pages/Claim/StatusTabs.js","pages/Claim/Claims.js","pages/Claim/Proofs.js","pages/Claim/UpdateClaimStatus.js","pages/Claim/ClaimTabs.js","pages/Claim/ClaimDetails.js","pages/Users/UserTable.js","components/DownloadCSVButton.js","pages/Users/ListUsers.js","pages/Users/UserInfo.js","pages/Users/UserInfoTabs.js","pages/Users/UserDetails.js","pages/Orders/ListOrders.js","pages/Orders/ItemTable.js","pages/Orders/OrderInfoTabs.js","pages/Orders/OrderDetails.js","pages/Payments/PaymentTable.js","pages/Payments/ListPayments.js","pages/Payments/PaymentDetails.js","pages/ContactSupport/ContactsTable.js","pages/ContactSupport/ListContacts.js","pages/Notification/SendToOneUser.js","pages/Notification/SendToMultipleUsers.js","pages/Notification/SendToAllUsers.js","pages/Notification/Notifications.js","pages/ContactSupport/SupportDetails.js","pages/TopUp/TopupTable.js","pages/TopUp/ListTopup.js","pages/TopUp/TopupDetails.js","pages/Jobs/UpdateJob.js","pages/Jobs/JobTable.js","pages/Jobs/Jobs.js","pages/Jobs/JobDetails.js","pages/Wallet/index.js","pages/Wallet/WalletDetails.js","pages/SubAdmin/AdminTable.js","pages/SubAdmin/CreateAdmin.js","pages/SubAdmin/Admins.js","pages/Riders/RiderTable.js","pages/Riders/CreateRider.js","pages/Riders/ListRiders.js","pages/Riders/RiderDocuments.js","pages/Riders/MoreDetails.js","pages/Riders/RiderID.js","pages/Riders/RiderChatTable.js","pages/Riders/RiderInfoTabs.js","pages/Riders/RiderInfo.js","pages/Riders/RiderDetails.js","pages/PickupCharges.js/CreatePickupCharge.js","pages/PickupCharges.js/UpdatePickupCharge.js","pages/PickupCharges.js/PickupChargeTable.js","pages/PickupCharges.js/ListPickupCharges.js","pages/Locations/CreateLocation.js","pages/Locations/UpdateLocation.js","pages/Locations/LocationTable.js","pages/Locations/ListLocations.js","pages/PricingParameters/UpdatePricingParameter.js","pages/PricingParameters/PricingParametersTable.js","pages/PricingParameters/ListPricingParameters.js","pages/Chats/ChatTable.js","pages/Chats/Chats.js","pages/Notification/NotficationDetails.js","pages/Category/CategoryDetails.js","pages/Bands/CreateBand.js","pages/Bands/UpdateBand.js","pages/Bands/BandTable.js","pages/Bands/Bands.js","pages/Bands/BandDetails.js","pages/Coupons/CreateCoupon.js","pages/Coupons/UpdateCoupon.js","pages/Coupons/CouponTable.js","pages/Coupons/Coupons.js","pages/Coupons/CouponDetails.js","pages/DeliveryLocation/CreateDeliveryLocation.js","pages/DeliveryLocation/UpdateDeliveryLocation.js","pages/DeliveryLocation/DeliveryLocationTable.js","pages/DeliveryLocation/DeliveryLocations.js","pages/DeliveryLocation/DeliveryLocationDetails.js","pages/SpecialRequests/SpecialRequestTable.js","pages/SpecialRequests/ListSpecialRequests.js","pages/SpecialRequests/SpecialRequestDetails.js","pages/TimeSlot/CreateTimeSlot.js","pages/TimeSlot/UpdateTimeSlot.js","pages/TimeSlot/TimeSlotTable.js","pages/TimeSlot/TimeSlots.js","pages/TimeSlot/TimeSlotDetails.js","pages/SiteData/UpdateSiteData.js","pages/SiteData/SiteData.js","pages/QuickGuide/CreateQuickGuide.js","pages/QuickGuide/UpdateQuickGuide.js","pages/QuickGuide/QuickGuideTable.js","pages/QuickGuide/QuickGuides.js","pages/Setting/CreateSetting.js","pages/Setting/UpdateSettings.js","pages/Setting/SettingsTable.js","pages/Setting/Setting.js","App.js","components/RowDetails.js","utils/tableColSearch.js"],"sourcesContent":["import { Button } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { toggleCollapseSider, toggleSiderHidden } from '../redux/appSlice'\nimport { logout } from '../redux/authSlice'\nimport { RiUserLine, RiUserHeartLine, RiSettings2Line } from 'react-icons/ri'\nimport { BiUserPlus,} from 'react-icons/bi'\nimport {\n  NotificationOutlined,\n} from '@ant-design/icons'\n\n\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const [deviceWidth, setDeviceWidth] = useState(window.innerWidth)\n  const { siderHidden, siderCollapsed } = useSelector((state) => state.app)\n\n  useEffect(() => {\n    function handleResize() {\n      setDeviceWidth(window.innerWidth)\n    }\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n\n  }, [])\n\n  const adminInfo = localStorage.getItem('user')\n  const adminName = JSON.parse(adminInfo)\n\n\n  useEffect(\n    () => {\n      // if (deviceWidth <= 640 && siderHidden === false) {\n      //   dispatch(toggleSiderHidden())\n      // }\n      if (deviceWidth < 1024 && deviceWidth > 640 && siderHidden) {\n        dispatch(toggleSiderHidden(false))\n        dispatch(toggleCollapseSider(true))\n      }\n      if (deviceWidth < 1024 && !siderCollapsed) {\n        dispatch(toggleCollapseSider(true))\n      }\n      if (deviceWidth >= 1024 && siderCollapsed === true) {\n        dispatch(toggleCollapseSider(false))\n      }\n    },\n    // eslint-disable-next-line\n    [deviceWidth],\n  )\n\n  const navigate = useNavigate()\n\n  return (\n    <header\n      className='site-layout-background'\n      style={{\n        display: 'flex',\n        padding: 0,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}\n    >\n      <div className='hello'>Hello, {adminName?.value?.admin?.name}</div>\n      <div>\n      <Button style={{color: '#ff0303', backgroundColor:'#fff', marginRight: '10px', border: '1px solid #ff0303'}}>\n        <Link to=\"notifications\" style={{color: '#ff0303'}}>\n       Notifications <NotificationOutlined />\n        </Link>\n      </Button>\n      <Button style={{color: '#ff0303', backgroundColor:'#fff', marginRight: '10px', border: '1px solid #ff0303'}}>\n        <Link to=\"admins\" style={{color: '#ff0303'}}>\n       Admins <BiUserPlus size={16} />\n        </Link>\n      </Button>\n\n      <Button style={{color: '#ff0303', backgroundColor:'#fff', marginRight: '10px', border: '1px solid #ff0303'}}>\n        <Link to=\"setting\" style={{color: '#ff0303'}}>\n       Settings <RiSettings2Line size={16} />\n        </Link>\n      </Button>\n      <Button style={{color: '#fff', backgroundColor:'#FF0303'}} onClick={() => dispatch(logout())}>\n        Logout\n      </Button>\n      </div>\n     \n    </header>\n  )\n}\n\nexport default AppHeader\n","import { UploadOutlined, UserOutlined } from '@ant-design/icons'\nimport { Button, Menu, Typography } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { GrDocumentTime } from 'react-icons/gr'\nimport { RiUserLine, RiUserHeartLine, RiSettings2Line } from 'react-icons/ri'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Logo from '../assets/logo.png'\nimport Logosmall from '../assets/logo.png'\n\nimport { toggleCollapseSider } from '../redux/appSlice'\nimport { AiOutlineLeft } from 'react-icons/ai'\nimport { BsCreditCard } from 'react-icons/bs'\nimport { BiCategory, BiCreditCard, BiUserPlus, BiWallet, BiBriefcase, BiBook, BiTime, BiData, BiArrowFromLeft, BiLocationPlus, BiBox } from 'react-icons/bi'\nimport { CgNotes } from 'react-icons/cg'\nimport {\n  DashboardOutlined,\n  UnorderedListOutlined,\n  ContactsOutlined,\n  BorderRightOutlined,\n  CommentOutlined,\n  SyncOutlined,\n  BranchesOutlined,\n  BarcodeOutlined,\n  NotificationOutlined,\n  \n} from '@ant-design/icons'\n\nconst AppSider = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const [currentPage, setCurrentPage] = useState(null)\n  const { app } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    items.reduce((acc, curr) => {\n      if (location.pathname.includes(curr.key)) {\n        setCurrentPage(curr.key)\n      }\n      return acc\n    }, 'appointments')\n  }, [location.pathname])\n\n  const toggleSiderCollapse = () => {\n    dispatch(toggleCollapseSider())\n  }\n\n  function getItem(label, key, icon, children) {\n    return {\n      key,\n      icon,\n      children,\n      label,\n    }\n  }\n\n  const items = [\n    getItem('Dashboard', 'dashboard', <DashboardOutlined />),\n    getItem('Categories', 'categories', <BiCategory />),\n    getItem('Users', 'users', <BiUserPlus size={20} />),\n    getItem('Bands', 'bands', <BiBook size={20} />),\n    getItem('Discount Coupons', 'coupons', <BarcodeOutlined size={20} />),\n\n\n    getItem('Products', 'products', <BiBox size={20} />),\n    getItem('Orders', 'orders', <UnorderedListOutlined />),\n\n    getItem('Payments', 'payments', <BiWallet size={16} />),\n    getItem('Delivery Locations', 'delivery', <BiLocationPlus />),\n    getItem('Special Requests', 'special-requests', <CgNotes />),\n    getItem('Locations', 'locations', <BiLocationPlus />),\n    getItem('Delivery Timeslots', 'time-slots', <BiTime size={16} />),\n    getItem('Site Data', 'sitedata', <BiData size={16} />),\n    getItem('Quick Guide', 'quickguide', <BiArrowFromLeft size={16} />),\n  ]\n\n\n  const handleMenuClick = (values) => {\n    navigate(`/${values.key}`);\n    setCurrentPage(values.key); // Update the selected item\n  };\n\n  return (\n    <>\n      <StyledLogo className='logo'>\n        {!app.siderCollapsed ? (\n          <img style={{ padding: '5px', width: 'auto', height: '80px'}} src={Logo} alt='whoosh' />\n        ) : (\n          <img style={{ padding: '5px', width: 'auto', height: '80px' }} src={Logosmall} alt='whoosh' />\n        )}\n  \n      </StyledLogo>\n      <Menu\n        theme='light'\n        mode='inline'\n        selectedKeys={currentPage ? [currentPage] : []}\n        style={{ backgroundColor: '#fff', fontFamily: 'Inter', height: \"calc(100vh - 95px)\"}}\n        onClick={handleMenuClick}\n      >\n        {items.map((item) => (\n          <Menu.Item\n            key={item.key}\n            icon={item.icon}\n            style={{\n              backgroundColor: currentPage === item.key ? '#FF0303' : 'transparent',\n              color: currentPage === item.key ? '#fff' : '#ff0303',\n              borderRight: currentPage === item.key ? '#FF0303' : 'transparent',\n\n            }}\n          >\n            {item.label}\n          </Menu.Item>\n        ))}\n      </Menu>\n      <Button\n        style={{\n          position: 'absolute',\n          bottom: '0',\n          left: '0',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px',\n          justifyContent: 'center',\n          color: '#FF0303',\n          backgroundColor:'white',\n          border: '1px solid #ff0303'\n        }}\n        icon={\n          <AiOutlineLeft\n            style={{ transform: app.siderCollapsed && 'rotate(180deg)' }}\n            size={18}\n            fill='#FF0303'\n            color='#FF0303'\n          />\n        }\n        block\n        onClick={toggleSiderCollapse}\n      >\n        {!app.siderCollapsed && 'Collapse'}\n      </Button>\n    </>\n  )\n}\n\nexport default AppSider\n// background-color: #2e338a;\n\nconst StyledLogo = styled.div`\n  display: flex;\n  color: white;\n  align-content: center;\n  align-items: flex-end;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  background-color: #fff;\n  h5 {\n    color: white;\n  }\n`\n","import React from 'react'\nimport { Layout } from 'antd'\n\nimport AppHeader from '../components/AppHeader'\nimport AppSider from '../components/AppSider'\n// import AppFooter from \"../components/AppFooter\";\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nconst { Header, Sider, Content } = Layout\n\nconst DashboardLayout = (props) => {\n  const { app } = useSelector((state) => state)\n  return (\n    <Layout className='h-100'>\n      <Sider\n        collapsed={app.siderCollapsed}\n        style={{ display: app.siderHidden ? 'none' : 'block', height: '100vh' }}\n        className='app-sidebar'\n      >\n        <AppSider />\n      </Sider>\n      <Layout>\n        <Header className='app-header'>\n          <AppHeader />\n        </Header>\n        <Layout>\n          <ContentStyle>{props.children}</ContentStyle>\n          {/* <Footer className='app-footer'>\n            <AppFooter />\n          </Footer> */}\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default DashboardLayout\n\nconst ContentStyle = styled(Content)`\n  padding: 0.5rem;\n  transition: all 0.3s;\n  max-height: calc(100vh - 4.2rem);\n  overflow-y: scroll;\n\n  /* Small devices (landscape phones, 576px and up) */\n  @media (min-width: 576px) {\n    padding: 1rem;\n  }\n\n  /* Medium devices (tablets, 768px and up) */\n  @media (min-width: 768px) {\n    padding: 1.5rem;\n  }\n\n  /* Large devices (desktops, 992px and up) */\n  @media (min-width: 992px) {\n    padding: 2.5rem;\n  }\n\n  /* Extra large devices (large desktops, 1200px and up) */\n  @media (min-width: 1200px) {\n    padding: 3rem;\n  }\n`\n\n// 576px for portrait phones.\n// 768px for tablets.\n// 992px for laptops.\n// 1200px for large devices.\n","import { Spin } from \"antd\";\nimport { Suspense } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\n\nimport DashboardLayout from \"../layout/DashboardLayout\";\n\nconst ProtectedRoutes = ({ ...rest }) => {\n  const location = useLocation();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const Loading = () => {\n    return (\n      <div className=\"section-spin\">\n        <Spin />\n      </div>\n    );\n  };\n\n  return isLoggedIn ? (\n    <DashboardLayout>\n      <Suspense fallback={<Loading />}>\n        <Outlet />\n      </Suspense>\n    </DashboardLayout>\n  ) : (\n    <Navigate to=\"/login\" replace state={{ from: location }} />\n  );\n};\n\nexport default ProtectedRoutes;\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nimport AppSider from \"../components/AppSider\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst { Sider, Content } = Layout;\n\nconst AuthLayout = (props) => {\n  const { app } = useSelector((state) => state);\n  return (\n    <Layout className=\"h-100\">\n      <Layout>\n        <Content style={{ height: \"100vh\" }}>\n          <FullPageContainer>{props.children}</FullPageContainer>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default AuthLayout;\n\nconst FullPageContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem 2rem; ;\n`;\n","import { Spin } from \"antd\";\nimport { Suspense, useEffect } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport ExpirySession from \"../utils/expirySession\";\n\nimport AuthLayout from \"../layout/AuthLayout\";\nimport { useSelector } from \"react-redux\";\n\nconst AuthRoutes = ({ ...rest }) => {\n  const navigate = useNavigate();\n  const { isLoggedIn } = useSelector((state) => state?.auth);\n\n  useEffect(() => {\n    isLoggedIn && navigate(\"/dashboard\");\n    !isLoggedIn && navigate(\"/login\");\n  }, []);\n\n  const Loading = () => {\n    return (\n      <div className=\"section-spin\">\n        <Spin />\n      </div>\n    );\n  };\n\n  return (\n    <AuthLayout>\n      <Suspense fallback={<Loading />}>\n        <Outlet />\n      </Suspense>\n    </AuthLayout>\n  );\n};\n\nexport default AuthRoutes;\n","import React from 'react'\nimport { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst NotFoundPage = () => {\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    navigate(-1)\n  }, [])\n\n  return <div>NotFoundPage</div>\n}\n\nexport default NotFoundPage\n","import { ConfigProvider } from 'antd'\n\nconst Theme = () =>\n  ConfigProvider.config({\n    theme: {\n      // primaryColor: '#FAA32C',\n      primaryColor: '#004AAD',\n    },\n  })\n\nexport default Theme\n","import { Form, Input, Button, Typography, Row, Col, Space, Avatar, notification } from 'antd'\nimport React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Logo192 from '../../assets/logo.png'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { sendOTP } from '../../redux/authSlice'\n\nconst ForgotPassword = () => {\n  const [form] = Form.useForm()\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(false)\n  const navigate = useNavigate()\n  const { auth } = useSelector((state) => state)\n\n  const onFinish = (value) => {\n    setLoading(true)\n    dispatch(sendOTP(value)).then((response) => {\n      if (response.type === 'auth/sendOTP/fulfilled') {\n        localStorage.setItem('admin_email', response?.payload)\n        notification.success({ message: 'OTP successfully sent to your email' })\n        navigate('/reset-confirmation')\n        setLoading(false)\n      } else {\n        notification.error({ message: 'Error sending OTP, Please try again later' })\n        setLoading(false)\n      }\n    })\n  }\n  return (\n    <LoginContainer>\n      <div className='logo'>\n      <picture>       \n          <img style={{ padding: '5px', width: 'auto', height: '60px' }} src={Logo192} alt='helpa' />\n        </picture>\n        <Typography.Title style={{ textAlign: 'center' }} level={4}>\n          {' '}\n        </Typography.Title>\n        <Typography.Title level={2}>Forgot Password?</Typography.Title>\n        <Typography.Paragraph>\n          Enter the email address you used when you joined and we’ll send you instructions to reset\n          your password.\n        </Typography.Paragraph>\n        <br />\n      </div>\n      <Form\n        requiredMark='optional'\n        form={form}\n        onFinish={onFinish}\n        name='multi-form'\n        layout='vertical'\n        autoComplete='false'\n      >\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: 'Please enter your email address',\n            },\n            {\n              type: 'email',\n              message: 'Please enter a valid email',\n            },\n          ]}\n          label='Email '\n          name='email'\n        >\n          <Input size='large' placeholder='Email' autoComplete={'off'} />\n        </Form.Item>\n        <Form.Item>\n          <Button loading={loading} size='large' htmlType='submit' style={{color: '#fff', backgroundColor:'#FEAE0D'}} block>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <div className='no-account'>\n        <Typography.Text className='forgot-password' type='secondary'>\n          Return to{' '}\n          <Typography.Text strong type='link'>\n            <Link className='create-account' to='/login' style={{color: '#FEAE0D'}}>\n              Login\n            </Link>\n          </Typography.Text>\n        </Typography.Text>\n      </div>\n    </LoginContainer>\n  )\n}\n\nexport default ForgotPassword\n\nconst LoginContainer = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n  padding: 2rem;\n  width: 100%;\n\n  background-color: white;\n  border-radius: 0.5rem;\n\n  .logo img {\n    display: flex;\n    justify-content: center;\n    overflow: hidden;\n    width: 150px;\n    height:80px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: 600px) {\n    padding: 3rem;\n    width: 500px;\n  }\n\n  a .forgot-password {\n    color: red;\n    font-size: 0.75rem;\n  }\n\n  .no-account {\n    display: flex;\n    justify-content: center;\n    margin-top: 3rem;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.2rem;\n\n    a .create-account {\n      font-size: 1rem;\n      white-space: nowrap;\n    }\n  }\n`\n","import { Form, Input, Button, Typography, Row, Col, Space, Avatar, notification } from 'antd'\n\nimport React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Logo192 from '../../assets/logo.png'\nimport { useDispatch } from 'react-redux'\nimport { resetPassword, sendOTP } from '../../redux/authSlice'\n\nconst ResetPassword = () => {\n  const [form] = Form.useForm()\n  const dispatch = useDispatch()\n  const [error, setError] = useState('null')\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = (value) => {\n    dispatch(resetPassword(value)).then((response) => {\n      if (response.type === 'auth/resetPassword/fulfilled') {\n        notification.success({ message: 'Password reset successfully' })\n        navigate('/login')\n      } else if (response.type === 'auth/resetPassword/rejected') {\n        setError(response?.payload?.message)\n      } else {\n        notification.error({ message: 'Error resetting password, please try again later' })\n      }\n    })\n  }\n\n  const resendOTP = (e) => {\n    e.preventDefault()\n    const email = localStorage.getItem('admin_email')\n    const values = { email: email }\n    setLoading(true)\n    dispatch(sendOTP(values)).then((response) => {\n      if (response.type === 'auth/sendOTP/fulfilled') {\n        notification.success({ message: 'We have sent another OTP to your email' })\n        setLoading(false)\n      } else {\n        notification.error({ message: 'Error sending OTP, Please try again later' })\n        setLoading(false)\n      }\n    })\n  }\n  return (\n    <LoginContainer>\n      <div className='logo'>\n      <picture>       \n          <img style={{ padding: '5px', width: 'auto', height: '60px' }} src={Logo192} alt='helpa' />\n        </picture>\n        <Typography.Title style={{ textAlign: 'center' }} level={4}></Typography.Title>\n        <Typography.Title level={2}>Reset Password</Typography.Title>\n      </div>\n      {error && <Typography.Text type='danger'>{error}</Typography.Text>}\n      <br />\n      <br />\n      <Form\n        requiredMark='optional'\n        form={form}\n        onFinish={onFinish}\n        name='multi-form'\n        layout='vertical'\n        autoComplete='false'\n        onFieldsChange={() => setError(null)}\n      >\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: 'Please enter the OTP sent to your email address',\n            },\n            {\n              pattern: '^[0-9]+$',\n              message: 'OTP must be a number',\n            },\n          ]}\n          label='OTP '\n          name='otp'\n        >\n          <Input size='large' placeholder='OTP' autoComplete={'off'} />\n        </Form.Item>\n        <Typography.Text type='secondary'>\n          {loading ? (\n            <span className='mb-50' style={{ fontSize: '16', margin: '120px' }}>\n              sending OTP....\n            </span>\n          ) : (\n            <span\n              className='mb-50'\n              style={{ cursor: 'pointer', fontSize: '16', margin: '100px' }}\n              onClick={(e) => resendOTP(e)}\n            >\n              Didn't get the OTP? Resend\n            </span>\n          )}\n        </Typography.Text>\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: 'Please enter your password',\n            },\n          ]}\n          label='Password '\n          name='password'\n        >\n          <Input autoComplete='off' size='large' type='password' />\n        </Form.Item>\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: 'Please enter retype your password',\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve()\n                }\n                return Promise.reject(new Error('The two passwords that you entered do not match!'))\n              },\n            }),\n          ]}\n          label='Confirm Password  '\n          name='password_confirmation'\n        >\n          <Input autoComplete='off' size='large' type='password' />\n        </Form.Item>\n\n        <Form.Item>\n          <Button size='large' htmlType='submit' style={{color: '#fff', backgroundColor:'#FEAE0D'}} block>\n            Reset Password\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <div className='no-account'>\n        <Typography.Text type='secondary'>\n          Go Back to\n          <Link className='forgot-password' to='/Login'  style={{color: '#FEAE0D'}}>\n            {' '}\n            Login\n          </Link>\n        </Typography.Text>\n        {/* <Typography.Text className='forgot-password' type='secondary'>\n          Don&#39;t have an account?{' '}\n          <Typography.Text strong type='link'>\n            <Link className='create-account' to='/create-account'>\n              Create Account\n            </Link>\n          </Typography.Text>\n        </Typography.Text> */}\n      </div>\n    </LoginContainer>\n  )\n}\n\nexport default ResetPassword\n\nconst LoginContainer = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n  padding: 2rem;\n  width: 100%;\n\n  background-color: white;\n  border-radius: 0.5rem;\n\n  .logo img {\n    display: flex;\n    justify-content: center;\n    overflow: hidden;\n    width: 150px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: 600px) {\n    padding: 3rem;\n    width: 500px;\n  }\n\n  a .forgot-password {\n    color: red;\n    font-size: 0.75rem;\n  }\n\n  .no-account {\n    display: flex;\n    justify-content: center;\n    margin-top: 3rem;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.2rem;\n\n    a .create-account {\n      font-size: 1rem;\n      white-space: nowrap;\n    }\n  }\n`\n","import { lazy } from \"react\";\n\nconst Dashboard = lazy(() => import(\"./Dashboard\"));\n\nexport default Dashboard;\n","import { lazy } from 'react'\n\nconst Bookings = lazy(() => import('./Bookings'))\nconst BookingInfo = lazy(() => import('./BookingInfo.js'))\n\nexport default Bookings\nexport { BookingInfo }\n","import { lazy } from \"react\";\n\nconst Clients = lazy(() => import(\"./Clients\"));\nexport const ClientInfo = lazy(() => import(\"./ClientInfo\"));\n\nexport default Clients;\n","import { lazy } from 'react'\n\nconst ServiceProviders = lazy(() => import('./ServiceProviders'))\nexport const ServiceProviderInfo = lazy(() => import('./ServiceProviderInfo'))\n\nexport default ServiceProviders\n","import { lazy } from \"react\";\n\nconst PaymentMethods = lazy(() => import(\"./PaymentMethods\"));\n\nexport default PaymentMethods;\n","import { lazy } from \"react\";\n\nconst Transactions = lazy(() => import(\"./Transactions\"));\n\nexport default Transactions;\n","import { lazy } from \"react\";\n\nconst Settings = lazy(() => import(\"./Settings\"));\n\nexport default Settings;\n","/* eslint-disable */\nimport React from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nclass Messages {\n  successMessage(message, displayPosition) {\n    return toast.success(message, {\n      position: displayPosition,\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    })\n  }\n\n  errorMessage(message, displayPosition) {\n    return toast.error(message, {\n      position: displayPosition,\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    })\n  }\n\n  warningMessage(message, displayPosition) {\n    return toast.warning(message, {\n      position: displayPosition,\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    })\n  }\n}\nexport default new Messages()\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport { createServiceCategory, getAllServiceCategory } from '../../redux/serviceCategorySlice'\nimport Messages from '../../ToastMessages/Messages'\n\nconst initialFormState = {\n  name: '',\n  description: '',\n}\n\nfunction CreateCategoryModal() {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [categoryFormData, setCategoryFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setCategoryFormData({\n      ...categoryFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setCategoryFormData({\n      name: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleCreateCategory = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', categoryFormData.name)\n    formData.append('image', image)\n    formData.append('description', categoryFormData.description)\n    console.log('formvalues', formData)\n\n    setConfirmLoading(true)\n    dispatch(createServiceCategory(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'serviceCategory/create/fulfilled') {\n          dispatch(getAllServiceCategory())\n          handleClose()\n          clearFormData()\n          Messages.successMessage('category created successfully', 'top-right')\n        } else if (response.type === 'serviceCategory/create/rejected') {\n          console.log('error notification', 'Error creating service category, please try again')\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notification', 'Error creating service category, please try again')\n      })\n  }\n\n  return (\n    <>\n      <Button variant='default' onClick={handleShow} style={{color: '#fff', backgroundColor:'#FEAE0D'}}>\n        Create Service Category\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Category</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateCategory}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name{categoryFormData.name}</Form.Label>\n              <Form.Control\n                type='text'\n                name='name'\n                placeholder='Enter category name'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description {categoryFormData.description}</Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='file'\n                onChange={(evnt) => onChangeImage(evnt)}\n                placeholder='Password'\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreateCategoryModal\n","import React, { useState, useEffect } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { editServiceCategory, getAllServiceCategory } from '../../redux/serviceCategorySlice'\nimport Messages from '../../ToastMessages/Messages'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst initialFormState = {\n  name: '',\n  description: '',\n}\n\nfunction UpdateCategoryModal({ category }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [categoryFormData, setCategoryFormData] = useState(initialFormState)\n  const { serviceCategory } = useSelector((state) => state)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    setCategoryFormData({\n      name: category.name,\n      description: category.description,\n    })\n    console.log('category', category)\n  }, [category])\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setCategoryFormData({\n      ...categoryFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setCategoryFormData({\n      name: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleUpdateCategory = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', categoryFormData.name)\n    formData.append('image', image)\n    formData.append('description', categoryFormData.description)\n    formData.append('category_id', category?.id)\n\n    // return\n    setConfirmLoading(true)\n    dispatch(editServiceCategory(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'serviceCategory/edit/fulfilled') {\n          dispatch(getAllServiceCategory())\n          handleClose()\n          clearFormData()\n          Messages.successMessage('category updated successfully', 'top-right')\n        } else if (response.type === 'serviceCategory/edit/rejected') {\n          console.log('error notificatom', 'Error updating service category, please try again')\n          Messages.errorMessage('Error updating category', 'top-right')\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error editing service category, please try again')\n      })\n  }\n\n  return (\n    <>\n      <Button variant='default' onClick={handleShow}>\n        Edit\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Update Category</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleUpdateCategory}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='name'\n                defaultValue={category.name}\n                placeholder='Enter category name'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                defaultValue={category.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='file'\n                onChange={(evnt) => onChangeImage(evnt)}\n                placeholder='Password'\n              />\n              <span>\n                <img src={category?.image} alt='horse' style={{ with: '70px', height: '70px' }} />\n              </span>\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateCategoryModal\n","import React, { useEffect, useState } from 'react'\n\nimport { CDBCard, CDBCardBody, CDBDataTable, CDBContainer } from 'cdbreact'\nimport { Button, Table } from 'antd'\nimport moment from 'moment'\n\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery/dist/jquery.min.js'\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables'\nimport 'datatables.net-dt/css/jquery.dataTables.min.css'\nimport $ from 'jquery'\nimport { Link } from 'react-router-dom'\nimport UpdateCategoryModal from './UpdateCategoryModal'\n\nconst CategoryDatatable = ({ categories, handleDelete }) => {\n  useEffect(() => {\n    $(document).ready(function () {\n      $('#datatable').DataTable()\n    })\n  }, [categories])\n\n  const listCategories =\n    categories &&\n    categories.map((category, key) => {\n      return (\n        <React.Fragment key={key}>\n          <tr>\n            {/* <td>{key + 1}</td> */}\n            <td>{category.name}</td>\n            <td>{category.description}</td>\n            <td>{moment(category.created_at).format('DD MMM YYYY')}</td>\n\n            <td>\n              <Button danger onClick={() => handleDelete(category)}>\n                {/* <Link to={`/catgory/${category.id}`}>{'delete'}</Link> */}\n                delete\n              </Button>\n              &nbsp;\n              {/* <Link to={`/catgory/${category.id}`}>{'Edit'}</Link> */}\n              <UpdateCategoryModal category={category} />\n            </td>\n          </tr>\n        </React.Fragment>\n      )\n    })\n\n  return (\n    <CDBContainer>\n      <CDBCard>\n        <CDBCardBody>\n          <div className='row table-responsive'>\n            <table id='datatable' className='display'>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Description</th>\n                  <th>Created</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n\n              <tbody>{listCategories}</tbody>\n            </table>\n          </div>\n        </CDBCardBody>\n      </CDBCard>\n    </CDBContainer>\n  )\n}\n\nexport default CategoryDatatable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteServiceCategory, getAllServiceCategory } from '../../redux/serviceCategorySlice'\nimport CreateCategoryModal from './CreateCategoryModal'\nimport CategoryDatatable from './CategoryDatatable'\n\nconst ProductCategories = () => {\n  const { serviceCategory } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected category?')) {\n      return\n    }\n\n    dispatch(deleteServiceCategory(id))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'serviceCategory/delete/fulfilled') {\n          dispatch(getAllServiceCategory())\n          notification.success({\n            message: ' Category deleted successfully',\n          })\n        } else if (response.type === 'serviceCategory/delete/rejected') {\n          notification.error({\n            message:\n              response?.payload?.message || 'Error deleting service category, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        notification.error({\n          message: 'Error deleting service category, please try again later',\n        })\n      })\n  }\n\n  useEffect(() => {\n    dispatch(getAllServiceCategory())\n  }, [])\n\n  return (\n    <div>\n      <PageHeader extra={[<CreateCategoryModal key='createModal' />]} title='Service Categories' />\n      <CategoryDatatable categories={serviceCategory?.data} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default ProductCategories\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createProduct, getAllProducts } from \"../../redux/productSlice\";\nimport { getAllCategories } from \"../../redux/categorySlice\";\nimport { notification } from \"antd\";\n\n\nconst initialFormState = {\n  name: \"\",\n  category_id: \"\",\n  price: \"\",\n  thumbnail: \"\",\n  unit_of_measurement: \"\"\n};\n\nfunction CreateProduct() {\n  const [show, setShow] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [productFormData, setProductFormData] = useState(initialFormState);\n\n  const { categories } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllCategories())\n  }, [])\n  \n  const categories_list =\n  categories?.data &&\n  categories?.data?.map((category, key) => {\n    return (\n      <option value={category?.id} key={key}>\n        {category?.name}\n      </option>\n    );\n  });\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n\n\n \n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setProductFormData({\n      ...productFormData,\n      [name]: value,\n    });\n  };\n\n  const handleCategoryChange = (event) => {\n    const selectedValue = event.target.value;\n    setProductFormData({\n      ...productFormData,\n      category_id: selectedValue,\n    });\n  };\n\n  const clearFormData = () => {\n    setProductFormData({\n      name: \"\",\n      category_id: \"\",\n      price: \"\",\n      thumbnail: \"\",\n      unit_of_measurement: \"\"\n    });\n    setImage(\"\");\n  };\n\n  const handlecreateproduct = (e) => {\n    e.preventDefault();\n\n    var formData = new FormData()\n\n    formData.append(\"category_id\", productFormData.category_id);\n    formData.append(\"name\", productFormData.name);\n    formData.append(\"price\", productFormData.price);\n    formData.append(\"unit_of_measurement\", productFormData.unit_of_measurement);\n    formData.append(\"thumbnail\", image);\n    \n    \n\n    setConfirmLoading(true);\n    dispatch(createProduct(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n\n        if (response.type === \"product/create/fulfilled\") {\n          dispatch(getAllProducts());\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"product created successfully\",\n          });\n        } else if (response.type === \"product/create/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error creating product, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error creating product, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create product</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create product</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handlecreateproduct}>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicText\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter product name\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            {categories?.data && (<Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select category</Form.Label>\n              <Form.Select\n                name=\"category_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleCategoryChange}\n                value={productFormData.category_id}\n              >\n               <option>Select category</option>\n                    {categories_list}\n              </Form.Select>\n            </Form.Group>)}\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicText\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"price\"\n                placeholder=\"Enter price\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicText\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Unit of Measurement</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"unit_of_measurement\"\n                placeholder=\"Enter product unit of measurement\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>image</Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"thumbnail\"\n                onChange={(evnt) => onChangeImage(evnt)}\n              />\n            </Form.Group>\n\n            <Button\n              style={{ marginTop: '10px', color: \"#fff\", backgroundColor: \"#ff0303\", border: 'none' }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default CreateProduct;","import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editProduct, getAllProducts } from \"../../redux/productSlice\";\nimport { getAllCategories } from \"../../redux/categorySlice\";\nimport { notification } from \"antd\";\n\n\nconst initialFormState = {\n  name: \"\",\n  category_id: \"\",\n  price: \"\",\n  thumbnail: \"\",\n  unit_of_measurement: \"\"\n};\n\nfunction EditProduct({data}) {\n  const [show, setShow] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [productFormData, setProductFormData] = useState(initialFormState);\n\n  const { categories } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllCategories())\n  }, [])\n  \n  const categories_list =\n  categories?.data &&\n  categories?.data?.map((category, key) => {\n    return (\n      <option value={category?.id} key={key}>\n        {category?.name}\n      </option>\n    );\n  });\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n\n\n \n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setProductFormData({\n      ...productFormData,\n      [name]: value,\n    });\n  };\n\n  const handleCategoryChange = (event) => {\n    const selectedValue = event.target.value;\n    setProductFormData({\n      ...productFormData,\n      category_id: selectedValue,\n    });\n  };\n\n  const clearFormData = () => {\n    setProductFormData({\n      name: \"\",\n      category_id: \"\",\n      price: \"\",\n      thumbnail: \"\",\n      unit_of_measurement: \"\"\n    });\n    setImage(\"\");\n  };\n\n  const handlecreateproduct = (e) => {\n    e.preventDefault();\n\n    var formData = new FormData()\n\n    formData.append(\"category_id\", productFormData.category_id);\n    formData.append(\"name\", productFormData.name);\n    formData.append(\"price\", productFormData.price);\n    formData.append(\"unit_of_measurement\", productFormData.unit_of_measurement);\n    formData.append(\"thumbnail\", image);\n    formData.append(\"product_id\", data.id);\n\n    \n    \n\n    setConfirmLoading(true);\n    dispatch(editProduct(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n\n        if (response.type === \"product/edit/fulfilled\") {\n          dispatch(getAllProducts());\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"product updated successfully\",\n          });\n        } else if (response.type === \"product/edit/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error updating product, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error updating product, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit product</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handlecreateproduct}>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicText\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter product name\"\n                defaultValue={data?.name}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            {categories?.data && (<Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select category</Form.Label>\n              <Form.Select\n                name=\"category_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleCategoryChange}\n                value={productFormData.category_id}\n                defaultValue={data?.category_id}\n\n              >\n               <option>Select category</option>\n                    {categories_list}\n              </Form.Select>\n            </Form.Group>)}\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicText\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"price\"\n                placeholder=\"Enter price\"\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={data?.price}\n\n              />\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicText\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Unit of Measurement</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"unit_of_measurement\"\n                placeholder=\"Enter product unit of measurement\"\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={data?.unit_of_measurement}\n\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>image</Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"thumbnail\"\n                onChange={(evnt) => onChangeImage(evnt)}\n\n              />\n            </Form.Group>\n\n            <Button\n              style={{ marginTop: '10px', color: \"#fff\", backgroundColor: \"#ff0303\", border: 'none' }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default EditProduct;","import { Avatar, Button, Table, Switch } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\nimport EditProduct from \"./EditProduct\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport { NumericFormat } from \"react-number-format\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst ProductTable = ({ data, loading, hideShowProduct }) => {\n  const [minPrice, setMinPrice] = useState(\"\");\n  const [maxPrice, setMaxPrice] = useState(\"\");\n  const [filteredData, setFilteredData] = useState(null); // New state for filtered data\n  const [shouldRenderTable, setShouldRenderTable] = useState(false); // Flag to trigger re-render\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handlePriceFilter = () => {\n    // Filter the data based on minPrice and maxPrice\n    const filteredResults = data.data.filter((item) => {\n      const price = parseFloat(item.price);\n      return (\n        isNaN(price) ||\n        (price >= parseFloat(minPrice) && price <= parseFloat(maxPrice))\n      );\n    });\n\n    setFilteredData(filteredResults);\n    setShouldRenderTable(true);\n  };\n\n  useEffect(() => {\n    if (shouldRenderTable) {\n      setShouldRenderTable(false);\n    }\n  }, [minPrice, maxPrice]);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      ...getColumnSearchProps({\n        dataIndex: \"name\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: \"Available\",\n      dataIndex: \"availability\",\n      key: \"availability\",\n      ...getColumnSearchProps({\n        dataIndex: \"availability\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n\n      render: (availability) => (availability === 1 ? \"Yes\" : \"No\"),\n    },\n    {\n      title: \"Measurement Unit\",\n      dataIndex: \"unit_of_measurement\",\n      key: \"unit_of_measurement\",\n      ...getColumnSearchProps({\n        dataIndex: \"unit_of_measurement\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\",\n      filterIcon: <FilterOutlined />, // Replace with your custom filter icon\n      filterDropdown: ({ confirm }) => (\n        <div style={{ padding: 8 }}>\n          {/* Your custom filter components for minimum and maximum price */}\n          <input\n            placeholder=\"Min Price\"\n            value={minPrice}\n            onChange={(e) => setMinPrice(e.target.value)}\n            style={{ marginBottom: 8, display: \"block\" }}\n          />\n          <input\n            placeholder=\"Max Price\"\n            value={maxPrice}\n            onChange={(e) => setMaxPrice(e.target.value)}\n            style={{ marginBottom: 8, display: \"block\" }}\n          />\n          <Button\n            type=\"primary\"\n            style={{\n              color: \"#fff\",\n              backgroundColor: \"#ff0303\",\n              border: \"none\",\n            }}\n            onClick={() => {\n              handlePriceFilter();\n              confirm();\n            }}\n          >\n            Filter\n          </Button>\n        </div>\n      ),\n\n      render: (price) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          <NumericFormat\n            value={price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"₦\"}\n          />\n        </span>\n      ),\n    },\n\n    {\n      title: \"Image\",\n      key: \"id\",\n      align: \"center\",\n      render: (singleData) => (\n        <Link to={`${singleData?.id}`}>\n          {singleData?.thumbnail_url ? (\n            <img\n              style={{\n                width: \"60px\",\n                height: \"60px\",\n                borderRadius: \"50%\",\n                objectFit: \"cover\",\n              }}\n              src={singleData?.thumbnail_url}\n              height={60}\n              width={60}\n              alt=\"avatar\"\n            />\n          ) : (\n            <Avatar\n              style={{ backgroundColor: \"#3f8bcaa1\" }}\n              icon={<UserOutlined />}\n              size={50}\n            />\n          )}\n        </Link>\n      ),\n    },\n\n    {\n      title: \"Date Created\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      render: (created_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(created_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Date Updated\",\n      dataIndex: \"updated_at\",\n      key: \"updated_at\",\n      render: (updated_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(updated_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Actions\",\n      key: \"id\",\n      align: \"center\",\n      render: (singleData) => (\n        <>\n          {(admin?.level === 0 || admin?.level === 1) && (\n            <div>\n              {\" \"}\n              <Button style={{ marginRight: \"5px\" }} title=\"Edit product\">\n                <EditProduct data={singleData} />\n              </Button>\n              <Switch\n                style={{ backgroundColor: \"#ff0303\", marginLeft: \"10px\" }}\n                checked={singleData?.availability === 1}\n                onChange={() => hideShowProduct(singleData?.id)}\n              />\n            </div>\n          )}\n\n          {(admin?.level === 2 || admin?.level === 3) && (\n            <div>\n            N/a\n            </div>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={shouldRenderTable ? filteredData : data?.data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default ProductTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader, Pagination } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CreateProduct from \"./CreateProduct\";\nimport {\n  getAllProducts,\n  deleteProduct,\n  hideShowProduct,\n} from \"../../redux/productSlice\";\nimport { Link } from \"react-router-dom\";\nimport ProductTable from \"./ProductTable\";\nimport styled from \"styled-components\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst Products = (props) => {\n  const { products } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [loading, setLoading] = useState(products?.loading);\n\n  useEffect(() => {\n    const fetchData = () => {\n      try {\n        console.log(\"Fetching products for page:\", currentPage);\n        dispatch(getAllProducts(currentPage));\n        console.log(\"Products fetched successfully\");\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n\n    fetchData();\n  }, [currentPage, dispatch]);\n\n  const handleDelete = ({ id }) => {\n    if (\n      !window.confirm(\"Do You want to permanently delete the selected product?\")\n    ) {\n      return;\n    }\n\n    dispatch(deleteProduct(id))\n      .then((response) => {\n        if (response.type === \"product/delete/fulfilled\") {\n          dispatch(getAllProducts());\n          notification.success({\n            message: \" Product deleted successfully\",\n          });\n        } else if (response.type === \"product/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting product, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting service category, please try again later\",\n        });\n      });\n  };\n\n  const handleGetProducts = (i) => {\n    setLoading(true);\n\n    dispatch(getAllProducts(i))\n      .then((response) => {\n        if (response.type === \"product/getAll/fulfilled\") {\n          setLoading(false);\n          setCurrentPage(i);\n          console.log(products);\n        } else if (response.type === \"product/getAll/rejected\") {\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        notification.error({\n          message: \"Error getting products, please try again later\",\n        });\n      });\n  };\n\n  const [isChecked, setIsChecked] = useState();\n\n  const handleHideShowProduct = (id) => {\n    dispatch(hideShowProduct(id))\n      .then((response) => {\n        if (response.type === \"product/hideShowProduct/fulfilled\") {\n          setIsChecked(!isChecked);\n          dispatch(getAllProducts());\n          notification.success({\n            message: \" product updated successfully\",\n          });\n        } else if (response.type === \"product/hideShowProduct/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error updating product, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting category, please try again later\",\n        });\n      });\n  };\n  const { admin } = ExpirySession.get(\"user\");\n\n  const linkArray = products?.data?.links?.slice(1, -1);\n\n  console.log(linkArray);\n\n  return (\n    <div>\n      {admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? (\n        <PageHeader\n          extra={[\n            <Button\n              key=\"CreateProduct\"\n              style={{ color: \"#ff0303\", border: \"1px solid #ff0303\" }}\n            >\n              <CreateProduct />\n            </Button>,\n          ]}\n          title=\"Products\"\n        />\n      ) : (\n        <PageHeader extra={[]} title=\"Products\" />\n      )}\n\n      {products?.data && (\n        <ProductTable\n          data={products?.data}\n          loading={loading}\n          handleDelete={handleDelete}\n          hideShowProduct={handleHideShowProduct}\n        />\n      )}\n      {linkArray && (\n        <StyledDiv>\n          {linkArray?.map((link, i) => (\n            <Button\n              onClick={() => handleGetProducts(link.label)}\n              key={i}\n              style={{\n                color: currentPage == link?.label ? \"white\" : \"black\",\n                background: currentPage == link?.label ? \"#ff0303\" : \"white\",\n                border: \"#ff0303\",\n              }}\n            >\n              {link.label}\n            </Button>\n          ))}\n        </StyledDiv>\n      )}\n    </div>\n  );\n};\n\nexport default Products;\n\nconst StyledDiv = styled.div`\n  margin-top: 1rem;\n  padding: 0 0.5rem;\n`;\n","import React from 'react'\n\nexport default function ProductImages({ images }) {\n  const productImages =\n    images &&\n    images.map((image, key) => {\n      return <img src={image.image_url} alt='horse' width='{40}' height='{40}' key={key} />\n    })\n  return <div>{productImages != '' ? productImages : 'No other images found'}</div>\n}\n","import { notification } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport { deleteProduct, getAllProducts } from '../../redux/productSlice'\nimport ProductDatatable from './ProductDatatable'\nimport { useDispatch } from 'react-redux'\n\nimport ProductImages from './ProductImages'\nimport ProductTable from './ProductTable'\n\nfunction ProductTabs({ product_Images, products }) {\n  const dispatch = useDispatch()\n\n  const handleDelete = ({ id }) => {\n    // alert('id', id)\n    // return\n    if (!window.confirm('Do You want to permanently delete the selected product?')) {\n      return\n    }\n\n    dispatch(deleteProduct(id))\n      .then((response) => {\n        if (response.type === 'product/delete/fulfilled') {\n          dispatch(getAllProducts())\n          notification.success({\n            message: ' Product deleted successfully',\n          })\n        } else if (response.type === 'product/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting product, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting service category, please try again later',\n        })\n      })\n  }\n  return (\n    <Tabs defaultActiveKey='image' id='uncontrolled-tab-example' className='mb-3'>\n      <Tab eventKey='image' title='Other Images'>\n        <ProductImages images={product_Images} />\n      </Tab>\n\n      <Tab eventKey='related_products' title='Related products'>\n        {products ? (\n          // <ProductDatatable products={products} handleDelete={handleDelete} />\n          <ProductTable data={products} loading={products.loading} handleDelete={handleDelete} />\n        ) : (\n          'No related products found'\n        )}\n      </Tab>\n    </Tabs>\n  )\n}\n\nexport default ProductTabs\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport ProductTabs from './ProductTabs'\nimport { Button } from 'antd'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { getOneProduct } from '../../redux/productSlice'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport moment from 'moment'\nimport { BsArrowLeft } from 'react-icons/bs'\n\nexport default function ProductDetails() {\n  const { singleData } = useSelector((state) => state.products)\n  const { id, refkey } = useParams()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const relatedproducts = singleData?.related_products?.map((prod, key) => {\n    return prod?.product\n  })\n\n  useEffect(() => {\n    dispatch(getOneProduct(id))\n    // console.log('relatedproducts', singleData?.related_products)\n  }, [id])\n\n  return (\n    <div>\n      <Card>\n        <Card.Header>\n          <div className='pull-left'>Product Details</div>\n          <Button className='float-end'>\n            <Link to='/product/create' className='float-end'>\n              Create Product{' '}\n            </Link>\n          </Button>\n          <Button className='float-end'>\n            <Link to={`/product/edit/${singleData?.id}/${singleData?.sku}`}>{'Edit Product'}</Link>\n          </Button>\n          {/* <Link to='/products'>Back to list </Link> */}\n          <div className={` flex, justify-end. float-end`} onClick={() => navigate(-1)}>\n            <div to='#' className='userInfo__back  '>\n              <Button\n                icon={<BsArrowLeft />}\n                type='link'\n                className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n              >\n                Back\n              </Button>\n            </div>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col>\n              <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '65px' }}>RefId:</strong> {singleData?.sku}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '65px' }}>Name:</strong> {singleData?.name}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '5px' }}>Individual Price:</strong>{' '}\n                      {singleData?.individual_price}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Group Price:</strong>{' '}\n                      {singleData?.group_price}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '10px' }}>Quantity in-stock:</strong>{' '}\n                      {singleData?.quantity_instock}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Product size:</strong>{' '}\n                      {singleData?.product_size}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Category:</strong>{' '}\n                      {singleData?.category?.name}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Created at:</strong>{' '}\n                      {moment(singleData?.created_at).format('DD MMM YYYY')}\n                      {/* <CountdownTimer enddate={+new Date(singleData?.created_at)} /> */}\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col>\n              <h2>Featured Image</h2>\n              <img\n                src={singleData?.featured_image}\n                alt='horse'\n                width='{40}'\n                height='{40}'\n                key='{key}'\n              />\n            </Col>\n          </Row>\n\n          <ProductTabs product_Images={singleData?.images} products={relatedproducts} />\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst VarietyBoxTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Ref. Id',\n      dataIndex: 'sku',\n      key: 'sku',\n      ...getColumnSearchProps({\n        dataIndex: 'sku',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps({\n        dataIndex: 'name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Individual Price',\n      dataIndex: 'individual_price',\n      key: 'individual_price',\n      render: (individual_price) => `₦${Number(individual_price).toLocaleString()}` || 'Null',\n    },\n    {\n      title: 'Group Price',\n      dataIndex: 'group_price',\n      key: 'group_price',\n      render: (group_price) => `₦${Number(group_price).toLocaleString()}` || 'Null',\n    },\n\n    {\n      title: 'Date Created',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n    {\n      title: 'Image',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <Link to={`${singleData?.id}`}>\n          {singleData?.featured_image ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={singleData?.featured_image}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <Button style={{ marginRight: '5px' }} title='View product details'>\n            <Link to={`/variety-box/details/${singleData?.id}/${singleData?.sku}`}>{'View'}</Link>\n          </Button>\n          <Button style={{ marginRight: '5px' }} title='Edit product'>\n            <Link to={`/variety-box/edit/${singleData?.id}/${singleData?.sku}`}>Edit</Link>\n          </Button>\n          <Button danger onClick={() => handleDelete(singleData)} title='Temporarily delete VB'>\n            delete\n          </Button>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default VarietyBoxTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteProduct } from '../../redux/productSlice'\nimport { Link } from 'react-router-dom'\nimport VarietyBoxTable from './VarietyBoxTable'\nimport { getAllVarietyBoxes } from '../../redux/varietyBoxSlice'\n\nconst VarietyBoxes = () => {\n  const { varietyBoxes } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected variety box?')) {\n      return\n    }\n\n    dispatch(deleteProduct(id))\n      .then((response) => {\n        if (response.type === 'product/delete/fulfilled') {\n          dispatch(getAllVarietyBoxes())\n          notification.success({\n            message: ' Variety box deleted successfully',\n          })\n        } else if (response.type === 'product/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting Variety box, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting Variety box, please try again later',\n        })\n      })\n  }\n\n  useEffect(() => {\n    dispatch(getAllVarietyBoxes())\n  }, [])\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='createVariety'>\n            <Link to='/variety-Box/create'>Create Variety Box </Link>\n          </Button>,\n        ]}\n        title='Varitey boxes'\n      />\n      <VarietyBoxTable\n        data={varietyBoxes.data}\n        loading={varietyBoxes.loading}\n        handleDelete={handleDelete}\n      />\n    </div>\n  )\n}\n\nexport default VarietyBoxes\n","import React, { useState, useEffect } from 'react'\nimport { PageHeader } from 'antd'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createProduct, createRelatedProduct, getAllProducts } from '../../redux/productSlice'\nimport Messages from '../../ToastMessages/Messages'\nimport { getAllServiceCategory } from '../../redux/serviceCategorySlice'\nimport {\n  createVarietyBox,\n  addItemsToVarietyBox,\n  getVarietyBoxCategory,\n} from '../../redux/varietyBoxSlice'\n\nconst initialFormState = {\n  name: '',\n  category_id: '',\n  quantity_instock: '',\n  individual_price: '',\n  group_price: '',\n  featured_image: '',\n  description: '',\n  variety_box_size: '',\n}\n\nfunction CreateVarietyBox() {\n  const [image, setImage] = useState('')\n  const [productFormData, setProductFormData] = useState(initialFormState)\n  const { serviceCategory } = useSelector((state) => state)\n  const { products } = useSelector((state) => state)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n  const [categories, setCategories] = useState(serviceCategory?.data)\n  const [relatedProducts, setSelatedProducts] = useState(products?.data)\n  const navigate = useNavigate()\n  const [varietyBoxItem, setVarietyBoxItem] = useState([{ product_id: '', quantity: '' }])\n  const [validated, setValidated] = useState(false)\n  const [variety_box_category, setVarietyBoxCategory] = useState({ id: '', name: '' })\n\n  useEffect(() => {\n    dispatch(getAllServiceCategory())\n  }, [])\n\n  useEffect(() => {\n    dispatch(getAllProducts())\n    showVarietyboxCategory()\n  }, [])\n\n  const showVarietyboxCategory = () => {\n    dispatch(getVarietyBoxCategory())\n      .then((response) => {\n        if (response.type === 'varietyBox/getCategory/fulfilled') {\n          console.log('varity category success response', response?.payload)\n          setVarietyBoxCategory({ id: response?.payload?.id, name: response?.payload?.name })\n        } else if ('varietyBox/getCategory/rejected') {\n          console.log('varity category error response', response)\n        }\n      })\n      .catch((error) => {\n        console.log('variety box category', error)\n      })\n  }\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setProductFormData({\n      ...productFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setProductFormData({\n      name: '',\n      category_id: '',\n      quantity_instock: '',\n      individual_price: '',\n      group_price: '',\n      featured_image: '',\n      description: '',\n      variety_box_size: '',\n    })\n    setImage('')\n    setVarietyBoxItem([{ product_id: '', quantity: '' }])\n  }\n\n  const handleCreateVarietyBox = (e) => {\n    e.preventDefault()\n    const form = e.currentTarget\n    if (form.checkValidity() === false) {\n      e.preventDefault()\n      e.stopPropagation()\n      return\n    }\n\n    setValidated(true)\n    var formData = new FormData()\n    formData.append('name', productFormData.name)\n    formData.append('image', image)\n    formData.append('category_id', variety_box_category?.id)\n    formData.append('individual_price', productFormData.individual_price)\n    formData.append('group_price', productFormData.group_price)\n    formData.append('variety_box_size', productFormData.variety_box_size)\n    formData.append('description', productFormData.description)\n    formData.append('quantity_instock', productFormData.quantity_instock)\n\n    setConfirmLoading(true)\n    dispatch(createVarietyBox(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'varietyBox/create/fulfilled') {\n          var varietyBoxdata = {\n            variety_box_id: response?.payload?.id,\n            products: varietyBoxItem,\n          }\n          console.log('varietyBoxdata', varietyBoxdata)\n          if (varietyBoxdata?.products.length >= 1) {\n            dispatch(addItemsToVarietyBox(varietyBoxdata))\n          }\n          dispatch(getAllProducts())\n          console.log('new varietyBox', response)\n          clearFormData()\n          document.getElementById('create-varietybox-form').reset()\n          Messages.successMessage('varietyBox created successfully', 'top-right')\n        } else if (response.type === 'varietyBox/create/rejected') {\n          console.log('error notificatom', 'Error creating varietyBox, please try again')\n          Messages.errorMessage('Error creating varietyBox, please try again', 'top-right')\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating varietyBox, please try again')\n        Messages.errorMessage('Error creating varietyBox, please try again', 'top-right')\n      })\n  }\n  const category_list =\n    categories &&\n    categories.map((category, key) => {\n      return (\n        <option value={category.id} key={key}>\n          {category.name}\n        </option>\n      )\n    })\n\n  const related_products_list =\n    relatedProducts &&\n    relatedProducts.map((product, key) => {\n      return (\n        <option value={product.id} key={key}>\n          {product.name}\n        </option>\n      )\n    })\n\n  let handleChange = (i, e) => {\n    if (!isNaN(e.target.value)) {\n      let newvarietyBoxItem = [...varietyBoxItem]\n      newvarietyBoxItem[i][e.target.name] = e.target.value\n      setVarietyBoxItem(newvarietyBoxItem)\n\n      console.log(' varietyBoxItem values', newvarietyBoxItem)\n    } else {\n      let newvarietyBoxItem = [...varietyBoxItem]\n      newvarietyBoxItem[i][e.target.name] = ''\n      setVarietyBoxItem(newvarietyBoxItem)\n    }\n  }\n\n  let addFormFields = () => {\n    if (varietyBoxItem && varietyBoxItem.length == 5) {\n      alert(\"You can't add more than 5 items\")\n      return\n    }\n    setVarietyBoxItem([...varietyBoxItem, { product_id: '', quantity: '' }])\n    console.log('multi related products', varietyBoxItem)\n  }\n\n  let removeFormFields = (i) => {\n    let newvarietyBoxItem = [...varietyBoxItem]\n    newvarietyBoxItem.splice(i, 1)\n    setVarietyBoxItem(newvarietyBoxItem)\n    console.log('remove multi related products', newvarietyBoxItem)\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='varietybox' variant='light'>\n            <Link to='/variety-boxes'>Back to list </Link>\n          </Button>,\n        ]}\n        title='Create Varietybox'\n      />\n\n      <Card>\n        <Card.Header>\n          <small>\n            Fields marked with an asterisk (<span style={{ color: 'red' }}>*</span>) are required\n          </small>\n        </Card.Header>\n        <Card.Body>\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={handleCreateVarietyBox}\n            id='create-varietybox-form'\n          >\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicEmail'>\n                  <Form.Label>\n                    Name <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='text'\n                    required\n                    name='name'\n                    placeholder='Name'\n                    onChange={(evt) => handleInputChange(evt)}\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The product name is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Category <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select name='category_id' aria-label='Default select example' required>\n                    <option value={variety_box_category?.id}>{variety_box_category?.name}</option>\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Individual price <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='number'\n                    name='individual_price'\n                    onChange={(evt) => handleInputChange(evt)}\n                    placeholder='Individual price'\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The group price field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Group price <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='number'\n                    name='group_price'\n                    onChange={(evt) => handleInputChange(evt)}\n                    placeholder='Group price'\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The individual price field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Quantity in-stock <span style={{ color: 'red' }}>*</span>{' '}\n                  </Form.Label>\n                  <Form.Control\n                    type='text'\n                    name='quantity_instock'\n                    placeholder='Quantity in-stock'\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The quantity in-stock field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Variety box size <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='variety_box_size'\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  >\n                    <option>Select size</option>\n                    <option value='small'>Small</option>\n                    <option value='medium'>medium</option>\n                    <option value='large'>Large</option>\n                  </Form.Select>\n                  <Form.Control.Feedback type='invalid'>\n                    The variety box size field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Image <span style={{ color: 'red' }}>*</span> ('jpg,jpeg and png')\n                  </Form.Label>\n                  <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n                  <Form.Control.Feedback type='invalid'>\n                    The Image field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>Description {productFormData.description}</Form.Label>\n                  <Form.Control\n                    as='textarea'\n                    placeholder='Leave a comment here'\n                    style={{ height: '100px' }}\n                    name='description'\n                    onChange={(evt) => handleInputChange(evt)}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <h6>\n                  <strong>Add products (items) to variety box</strong>\n                </h6>\n\n                {varietyBoxItem.map((element, index) => (\n                  <div className='form-inline' key={index}>\n                    <InputGroup>\n                      <Form.Group className='mb-3' controlId='formBasicPassword'>\n                        <Form.Label>Product </Form.Label>\n\n                        <Form.Select\n                          name='product_id'\n                          value={element.product_id || ''}\n                          onChange={(e) => handleChange(index, e)}\n                          aria-label='Default select example'\n                          required\n                        >\n                          <option>Select product</option>\n                          {related_products_list}\n                        </Form.Select>\n                        <Form.Control.Feedback type='invalid'>\n                          The product field is required.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      &nbsp;\n                      <Form.Group className='mb-3' controlId='formBasicPassword'>\n                        <Form.Label>\n                          {' '}\n                          Quantity\n                          <span style={{ color: 'gray', marginLeft: '50px' }}>\n                            Item {index + 1}\n                          </span>\n                        </Form.Label>\n                        <Form.Control\n                          type='number'\n                          name='quantity'\n                          placeholder='Quantity'\n                          value={element.quantity || ''}\n                          onChange={(e) => handleChange(index, e)}\n                          required\n                        />\n                        <Form.Control.Feedback type='invalid'>\n                          The quantity field is required.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      {index ? (\n                        <span\n                          className='button remove'\n                          onClick={() => removeFormFields(index)}\n                          style={{ color: 'red', cursor: 'pointer' }}\n                          title='Delete from list'\n                        >\n                          Remove\n                        </span>\n                      ) : null}\n                    </InputGroup>\n                  </div>\n                ))}\n                <div className='button-section'>\n                  <button\n                    className='button add mb-3 float-centre'\n                    type='button'\n                    onClick={() => addFormFields()}\n                  >\n                    Add More\n                  </button>\n                </div>\n              </Col>\n            </Row>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Card.Body>\n        <ToastContainer />\n      </Card>\n    </div>\n  )\n}\nexport default CreateVarietyBox\n","import { notification } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport { deleteProduct, getAllProducts } from '../../redux/productSlice'\nimport { useDispatch } from 'react-redux'\n\nimport VarietyBoxTable from './VarietyBoxTable'\nimport ProductTable from '../Product/ProductTable'\n\nfunction VarietyBoxTabs({ products }) {\n  const dispatch = useDispatch()\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected product?')) {\n      return\n    }\n\n    dispatch(deleteProduct(id))\n      .then((response) => {\n        if (response.type === 'product/delete/fulfilled') {\n          dispatch(getAllProducts())\n          notification.success({\n            message: ' Product deleted successfully',\n          })\n        } else if (response.type === 'product/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting product, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting service category, please try again later',\n        })\n      })\n  }\n  return (\n    <Tabs defaultActiveKey='products' id='uncontrolled-tab-example' className='mb-3'>\n      <Tab eventKey='products' title='Products'>\n        {products ? (\n          <ProductTable data={products} loading={products.loading} handleDelete={handleDelete} />\n        ) : (\n          'No related products found'\n        )}\n      </Tab>\n    </Tabs>\n  )\n}\n\nexport default VarietyBoxTabs\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport ProductTabs from './VarietyBoxTabs'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { getOneProduct } from '../../redux/productSlice'\nimport { Link, useParams } from 'react-router-dom'\nimport moment from 'moment'\nimport { getOneVarietyBox } from '../../redux/varietyBoxSlice'\n\nexport default function VarietyBoxDetails() {\n  const { singleData } = useSelector((state) => state.varietyBoxes)\n  const { id, refkey } = useParams()\n  const dispatch = useDispatch()\n\n  const varietyboxproducts = singleData?.variety_products?.map((prod, key) => {\n    return prod?.product\n  })\n\n  useEffect(() => {\n    dispatch(getOneVarietyBox(id))\n  }, [id])\n\n  return (\n    <div>\n      <Card>\n        <Card.Header>\n          <div className='pull-left'>Variety Box Details</div>\n          <Button className='float-end' variant='light'>\n            <Link to='/variety-box/create'>Create Variety Box </Link>\n          </Button>\n          <Button className='float-end' variant='light'>\n            <Link to={`/variety-box/edit/${singleData?.id}/${singleData?.sku}`}>{'Edit VB'}</Link>\n          </Button>\n          <Button className='float-end' variant='light'>\n            <Link to='/variety-boxes'>Back to list </Link>\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col>\n              <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '65px' }}>RefId:</strong> {singleData?.sku}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '65px' }}>Name:</strong> {singleData?.name}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '5px' }}>Individual Price:</strong>{' '}\n                      {singleData?.individual_price}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Group Price:</strong>{' '}\n                      {singleData?.group_price}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '10px' }}>Quantity in-stock:</strong>{' '}\n                      {singleData?.quantity_instock}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Product size:</strong>{' '}\n                      {singleData?.variety_box_size}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Category:</strong>{' '}\n                      {singleData?.category?.name}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Created at:</strong>{' '}\n                      {moment(singleData?.created_at).format('DD MMM YYYY')}\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col>\n              <h2>Featured Image</h2>\n              <img\n                src={singleData?.featured_image}\n                alt='horse'\n                width='{40}'\n                height='{40}'\n                key='{key}'\n              />\n            </Col>\n          </Row>\n\n          <ProductTabs product_Images={singleData?.images} products={varietyboxproducts} />\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { PageHeader } from 'antd'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createProduct, createRelatedProduct, getAllProducts } from '../../redux/productSlice'\nimport Messages from '../../ToastMessages/Messages'\nimport { getAllServiceCategory } from '../../redux/serviceCategorySlice'\nimport {\n  createVarietyBox,\n  addItemsToVarietyBox,\n  getVarietyBoxCategory,\n  getAllVarietyBoxes,\n  editVarietyBox,\n} from '../../redux/varietyBoxSlice'\nimport { varietyBoxService } from '../../services/VarietyBoxService'\n\nconst initialFormState = {\n  name: '',\n  category_id: '',\n  quantity_instock: '',\n  individual_price: '',\n  group_price: '',\n  featured_image: '',\n  description: '',\n  variety_box_size: '',\n  varietyBoxId: '',\n}\n\nfunction EditVarietyBox() {\n  const [image, setImage] = useState('')\n  const [productFormData, setProductFormData] = useState(initialFormState)\n  const { serviceCategory } = useSelector((state) => state)\n  const { products } = useSelector((state) => state)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n  const [categories, setCategories] = useState(serviceCategory?.data)\n  const [relatedProducts, setSelatedProducts] = useState(products?.data)\n  const navigate = useNavigate()\n  const [varietyBoxItem, setVarietyBoxItem] = useState([{ product_id: '', quantity: '' }])\n  const [validated, setValidated] = useState(false)\n  const [variety_box_category, setVarietyBoxCategory] = useState({ id: '', name: '' })\n  const [vb, setVb] = useState('')\n  const { id } = useParams()\n  useEffect(() => {\n    dispatch(getAllServiceCategory())\n  }, [])\n\n  useEffect(() => {\n    dispatch(getAllProducts())\n    showVarietyboxCategory()\n  }, [])\n\n  useEffect(() => {\n    refreshVB(id)\n  }, [id])\n\n  const refreshVB = (id) => {\n    varietyBoxService\n      .getOne(id)\n      .then((response) => {\n        console.log('VB resfreshed suceess', response?.data)\n        setVb(response?.data)\n        setProductFormData({\n          name: response?.data?.name,\n          category_id: response?.data?.category_id,\n          quantity_instock: response?.data?.quantity_instock,\n          individual_price: response?.data?.individual_price,\n          group_price: response?.data?.group_price,\n          featured_image: response?.data?.featured_image,\n          description: response?.data?.description,\n          variety_box_size: response?.data?.variety_box_size,\n          varietyBoxId: response?.data?.id,\n        })\n      })\n      .catch((error) => {\n        console.log('VB resfreshed error', error)\n      })\n  }\n\n  const showVarietyboxCategory = () => {\n    dispatch(getVarietyBoxCategory())\n      .then((response) => {\n        if (response.type === 'varietyBox/getCategory/fulfilled') {\n          console.log('varity category success response', response?.payload)\n          setVarietyBoxCategory({ id: response?.payload?.id, name: response?.payload?.name })\n        } else if ('varietyBox/getCategory/rejected') {\n          console.log('varity category error response', response)\n        }\n      })\n      .catch((error) => {\n        console.log('variety box category', error)\n      })\n  }\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setProductFormData({\n      ...productFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setProductFormData({\n      name: '',\n      category_id: '',\n      quantity_instock: '',\n      individual_price: '',\n      group_price: '',\n      featured_image: '',\n      description: '',\n      variety_box_size: '',\n    })\n    setImage('')\n    setVarietyBoxItem([{ product_id: '', quantity: '' }])\n  }\n\n  const handleEditVarietyBox = (e) => {\n    e.preventDefault()\n    const form = e.currentTarget\n    if (form.checkValidity() === false) {\n      e.preventDefault()\n      e.stopPropagation()\n      return\n    }\n\n    setValidated(true)\n    var formData = new FormData()\n    formData.append('name', productFormData.name)\n    formData.append('image', image)\n    formData.append('category_id', variety_box_category?.id)\n    formData.append('individual_price', productFormData.individual_price)\n    formData.append('group_price', productFormData.group_price)\n    formData.append('variety_box_size', productFormData.variety_box_size)\n    formData.append('description', productFormData.description)\n    formData.append('quantity_instock', productFormData.quantity_instock)\n    formData.append('varietyBoxId', productFormData.varietyBoxId)\n\n    setConfirmLoading(true)\n    dispatch(editVarietyBox(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'varietyBox/edit/fulfilled') {\n          var varietyBoxdata = {\n            variety_box_id: response?.payload?.id,\n            products: varietyBoxItem,\n          }\n          console.log('varietyBoxdata', varietyBoxdata)\n          if (varietyBoxdata?.products.length >= 1) {\n            dispatch(addItemsToVarietyBox(varietyBoxdata))\n          }\n          dispatch(getAllProducts())\n          Messages.successMessage('Variety Box created successfully', 'top-right')\n        } else if (response.type === 'varietyBox/edit/rejected') {\n          console.log('error notificatom', 'Error editing varietyBox, please try again')\n          Messages.errorMessage('Error editing varietyBox, please try again', 'top-right')\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error editing varietyBox, please try again')\n        Messages.errorMessage('Error editing varietyBox, please try again', 'top-right')\n      })\n  }\n  const category_list =\n    categories &&\n    categories.map((category, key) => {\n      return (\n        <option value={category.id} key={key}>\n          {category.name}\n        </option>\n      )\n    })\n\n  const related_products_list =\n    relatedProducts &&\n    relatedProducts.map((product, key) => {\n      return (\n        <option value={product.id} key={key}>\n          {product.name}\n        </option>\n      )\n    })\n\n  let handleChange = (i, e) => {\n    if (!isNaN(e.target.value)) {\n      let newvarietyBoxItem = [...varietyBoxItem]\n      newvarietyBoxItem[i][e.target.name] = e.target.value\n      setVarietyBoxItem(newvarietyBoxItem)\n\n      console.log(' varietyBoxItem values', newvarietyBoxItem)\n    } else {\n      let newvarietyBoxItem = [...varietyBoxItem]\n      newvarietyBoxItem[i][e.target.name] = ''\n      setVarietyBoxItem(newvarietyBoxItem)\n    }\n  }\n\n  let addFormFields = () => {\n    if (varietyBoxItem && varietyBoxItem.length == 5) {\n      alert(\"You can't add more than 5 items\")\n      return\n    }\n    setVarietyBoxItem([...varietyBoxItem, { product_id: '', quantity: '' }])\n    console.log('multi related products', varietyBoxItem)\n  }\n\n  let removeFormFields = (i) => {\n    let newvarietyBoxItem = [...varietyBoxItem]\n    newvarietyBoxItem.splice(i, 1)\n    setVarietyBoxItem(newvarietyBoxItem)\n    console.log('remove multi related products', newvarietyBoxItem)\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='varietybox' variant='light'>\n            <Link to='/variety-boxes'>Back to list </Link>\n          </Button>,\n        ]}\n        title='Edit Variety Box'\n      />\n\n      <Card>\n        <Card.Header>\n          <small>\n            Fields marked with an asterisk (<span style={{ color: 'red' }}>*</span>) are required\n          </small>\n        </Card.Header>\n        <Card.Body>\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={handleEditVarietyBox}\n            id='edit-varietybox-form'\n          >\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicEmail'>\n                  <Form.Label>\n                    Name <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='text'\n                    required\n                    name='name'\n                    placeholder='Name'\n                    onChange={(evt) => handleInputChange(evt)}\n                    defaultValue={vb?.name}\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The product name is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Category <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select name='category_id' aria-label='Default select example' required>\n                    <option value={variety_box_category?.id}>{variety_box_category?.name}</option>\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Individual price <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='number'\n                    name='individual_price'\n                    onChange={(evt) => handleInputChange(evt)}\n                    placeholder='Individual price'\n                    defaultValue={vb?.individual_price}\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The group price field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Group price <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='number'\n                    name='group_price'\n                    onChange={(evt) => handleInputChange(evt)}\n                    placeholder='Group price'\n                    defaultValue={vb?.group_price}\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The individual price field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Quantity in-stock <span style={{ color: 'red' }}>*</span>{' '}\n                  </Form.Label>\n                  <Form.Control\n                    type='text'\n                    name='quantity_instock'\n                    placeholder='Quantity in-stock'\n                    onChange={(evt) => handleInputChange(evt)}\n                    defaultValue={vb?.quantity_instock}\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The quantity in-stock field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Variety box size {vb?.variety_box_size}\n                    <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='variety_box_size'\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                    defaultValue={vb?.variety_box_size}\n                  >\n                    <option>Select size</option>\n                    <option value='small'>Small</option>\n                    <option value='medium'>medium</option>\n                    <option value='large'>Large</option>\n                  </Form.Select>\n                  <Form.Control.Feedback type='invalid'>\n                    The variety box size field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Image <span style={{ color: 'red' }}>*</span> ('jpg,jpeg and png')\n                  </Form.Label>\n                  <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n                  <Form.Control.Feedback type='invalid'>\n                    The Image field is required.\n                  </Form.Control.Feedback>\n                  <span>\n                    <img\n                      src={vb?.featured_image}\n                      alt='product image'\n                      style={{ with: '70px', height: '70px' }}\n                    />\n                  </span>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>Description {productFormData.description}</Form.Label>\n                  <Form.Control\n                    as='textarea'\n                    placeholder='Leave a comment here'\n                    style={{ height: '100px' }}\n                    name='description'\n                    onChange={(evt) => handleInputChange(evt)}\n                    value={vb?.description}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <h6>\n                  <strong>Add products (items) to variety box</strong>\n                </h6>\n\n                {varietyBoxItem.map((element, index) => (\n                  <div className='form-inline' key={index}>\n                    <InputGroup>\n                      <Form.Group className='mb-3' controlId='formBasicPassword'>\n                        <Form.Label>Product </Form.Label>\n\n                        <Form.Select\n                          name='product_id'\n                          value={element.product_id || ''}\n                          onChange={(e) => handleChange(index, e)}\n                          aria-label='Default select example'\n                        >\n                          <option>Select product</option>\n                          {related_products_list}\n                        </Form.Select>\n                        <Form.Control.Feedback type='invalid'>\n                          The product field is required.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      &nbsp;\n                      <Form.Group className='mb-3' controlId='formBasicPassword'>\n                        <Form.Label>\n                          {' '}\n                          Quantity\n                          <span style={{ color: 'gray', marginLeft: '50px' }}>\n                            Item {index + 1}\n                          </span>\n                        </Form.Label>\n                        <Form.Control\n                          type='number'\n                          name='quantity'\n                          placeholder='Quantity'\n                          value={element.quantity || ''}\n                          onChange={(e) => handleChange(index, e)}\n                        />\n                        <Form.Control.Feedback type='invalid'>\n                          The quantity field is required.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      {index ? (\n                        <span\n                          className='button remove'\n                          onClick={() => removeFormFields(index)}\n                          style={{ color: 'red', cursor: 'pointer' }}\n                          title='Delete from list'\n                        >\n                          Remove\n                        </span>\n                      ) : null}\n                    </InputGroup>\n                  </div>\n                ))}\n                <div className='button-section'>\n                  <button\n                    className='button add mb-3 float-centre'\n                    type='button'\n                    onClick={() => addFormFields()}\n                  >\n                    Add More\n                  </button>\n                </div>\n              </Col>\n            </Row>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Card.Body>\n        <ToastContainer />\n      </Card>\n    </div>\n  )\n}\nexport default EditVarietyBox\n","import React, { useEffect, useState } from 'react'\n\nfunction CountdownTimer({ enddate }) {\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear()\n    let duedate = enddate ? enddate : +new Date(`${year}-12-31`)\n    // const difference = +new Date(`${year}-12-31`) - +new Date()\n    const difference = enddate - +new Date()\n    let timeLeft = {}\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      }\n    }\n\n    return timeLeft\n  }\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft())\n  const [year] = useState(new Date().getFullYear())\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft())\n    }, 1000)\n  })\n\n  const timerComponents = []\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return\n    }\n\n    timerComponents.push(\n      <span style={{ color: 'red' }}>\n        {timeLeft[interval]} {interval}{' '}\n      </span>,\n    )\n  })\n  return <div key='eee'>{timerComponents.length ? timerComponents : <span>Time's up!</span>}</div>\n}\nexport default CountdownTimer\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport CountdownTimer from './CountdownTimer'\n\nconst GroupTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'group_name',\n      key: 'group_name',\n      ...getColumnSearchProps({\n        dataIndex: 'group_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Start Date',\n      dataIndex: 'start_date',\n      key: 'start_date',\n      render: (start_date) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {moment(start_date).format('DD MMM YYYY HH:mm A')}\n        </span>\n      ),\n    },\n    {\n      title: 'Expiring Date',\n      dataIndex: 'end_date',\n      key: 'end_date',\n      render: (end_date) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {moment(end_date).format('DD MMM YYYY HH:mm A')}\n        </span>\n      ),\n    },\n\n    {\n      title: 'Time Left',\n      dataIndex: 'end_date',\n      key: 'time_left',\n      render: (end_date) => <CountdownTimer enddate={+new Date(end_date)} />,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      ...getColumnSearchProps({\n        dataIndex: 'status',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <Button style={{ marginRight: '5px' }} title='View product details'>\n            <Link to={`/group/details/${singleData?.id}`}>{'View details'}</Link>\n          </Button>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default GroupTable\n","import { Button, PageHeader } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllGroups } from '../../redux/groupSlice'\nimport GroupTable from './GroupTable'\nimport { Link } from 'react-router-dom'\n\nexport default function Groups() {\n  const { groups } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllGroups())\n    console.log('groups', groups)\n  }, [])\n  return (\n    <div>\n      <PageHeader extra={[]} title='Groups' />\n      <GroupTable data={groups.data} loading={groups.loading} />\n    </div>\n  )\n}\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nexport default function Members({ members, loading }) {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  useEffect(() => {\n    console.log('members', members)\n  }, [])\n\n  const columns = [\n    {\n      title: 'Member',\n      dataIndex: 'member',\n      key: 'member',\n      render: (member) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <Link to={`/customer/details/${member?.id}`}>\n            {member?.first_name} {member?.last_name}\n          </Link>\n        </span>\n      ),\n    },\n    {\n      title: 'Position',\n      dataIndex: 'member_type',\n      key: 'member_type',\n      render: (member_type) => <span style={{ whiteSpace: 'nowrap' }}>{member_type}</span>,\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'product_quantity',\n      key: 'product_quantity',\n      render: (product_quantity) => (\n        <span style={{ whiteSpace: 'nowrap' }}>{product_quantity}</span>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'product_size',\n      key: 'product_size',\n      render: (product_size) => <span style={{ whiteSpace: 'nowrap' }}>{product_size}</span>,\n    },\n    {\n      title: 'Amount',\n      dataIndex: 'total',\n      key: 'total',\n      render: (total) => `₦${Number(total).toLocaleString()}` || 'Null',\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {moment(created_at).format('DD MMM YYYY hh:mm A')}\n        </span>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={members?.length > 10 ? true : false}\n        dataSource={members}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n","import { notification } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Members from './Members'\n\nfunction GroupTab({ members }) {\n  return (\n    <Tabs defaultActiveKey='members' id='uncontrolled-tab-example' className='mb-3'>\n      <Tab eventKey='members' title='Members'>\n        <Members members={members} />\n      </Tab>\n\n      {/* <Tab eventKey='related_products' title='Related products'>\n        {products ? (\n          <ProductTable data={products} loading={products.loading} handleDelete={handleDelete} />\n        ) : (\n          'No related products found'\n        )}\n      </Tab> */}\n    </Tabs>\n  )\n}\n\nexport default GroupTab\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import ProductTabs from './ProductTabs'\nimport { Button } from 'antd'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport moment from 'moment'\nimport { getOneGroup } from '../../redux/groupSlice'\nimport CountdownTimer from './CountdownTimer'\nimport GroupTab from './GroupTab'\nimport { BsArrowLeft } from 'react-icons/bs'\n\nexport default function GroupDetail() {\n  const { singleData } = useSelector((state) => state.groups)\n  const { id, refkey } = useParams()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  //   const relatedproducts = singleData?.related_products?.map((prod, key) => {\n  //     return prod?.product\n  //   })\n\n  useEffect(() => {\n    dispatch(getOneGroup(id))\n    // console.log('relatedproducts', singleData?.related_products)\n  }, [id])\n\n  return (\n    <div>\n      <Card>\n        <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n          <div to='#' className='userInfo__back  float-end'>\n            <Button\n              icon={<BsArrowLeft />}\n              type='link'\n              className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n            >\n              Back\n            </Button>\n          </div>\n        </div>\n        <Card.Header>\n          <div className='pull-left'>Group Details</div>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col>\n              <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '65px' }}>Name:</strong>{' '}\n                      {singleData?.group_name}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '20px' }}>Start Date:</strong>{' '}\n                      {moment(singleData?.start_date).format('DD MMM YYYY hh:mm A')}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '25px' }}>Expiring Date:</strong>{' '}\n                      {moment(singleData?.end_date).format('DD MMM YYYY hh:mm A')}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '50px' }}>Time Left:</strong>\n                      <CountdownTimer enddate={+new Date(singleData?.end_date)} />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Status:</strong> {singleData?.status}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Created by (Admin):</strong>{' '}\n                      <Link to={`/customer/details/${singleData?.admin?.id}`}>\n                        {singleData?.admin?.first_name} {singleData?.admin?.last_name}\n                      </Link>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Product:</strong>{' '}\n                      {singleData?.product?.type === 'prduct' ? (\n                        <Link\n                          to={`/product/details/${singleData?.product?.id}/${singleData?.product?.sku}`}\n                        >\n                          {singleData?.product?.name}\n                        </Link>\n                      ) : (\n                        <Link\n                          to={`/variety-box/details/${singleData?.product?.id}/${singleData?.product?.sku}`}\n                        >\n                          {singleData?.product?.name}\n                        </Link>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Created at:</strong>{' '}\n                      {moment(singleData?.created_at).format('DD MMM YYYY')}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Members Count:</strong>{' '}\n                      {singleData?.members?.length} members\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n\n          <GroupTab members={singleData?.members} loading={false} />\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst CustomerTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Full Name',\n      dataIndex: 'full_name',\n      key: 'full_name',\n      ...getColumnSearchProps({\n        dataIndex: 'full_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      ...getColumnSearchProps({\n        dataIndex: 'email',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Phone',\n      dataIndex: 'phone_number',\n      key: 'phone_number',\n      render: (phone_number) =>\n        phone_number ? (\n          <a style={{ color: '#FF0303', textDecoration: 'none' }} href={`tel:${phone_number}`}>\n            {phone_number}\n          </a>\n        ) : (\n          'Null'\n        ),\n    },\n\n    {\n      title: 'Profile picture',\n      key: 'id',\n      dataIndex: 'profile_photo_url',\n      align: 'center',\n      render: (profile_photo_url) => (\n        <Link to={`${profile_photo_url}`}>\n          {profile_photo_url ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={profile_photo_url}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n      render: (orders) => <span style={{ whiteSpace: 'nowrap' }}> {orders?.length}</span>,\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <Button style={{ marginRight: '5px' }} title='View product details'>\n            <Link to={`/customer/details/${singleData?.id}/${singleData?.email}`}>{'View details'}</Link>\n          </Button>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default CustomerTable\n","import { PageHeader } from 'antd'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllCustomers } from '../../redux/customerSlice'\nimport CustomerTable from './CustomerTable'\n\nfunction Customers() {\n  const { customers } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllCustomers())\n    console.log('customers', customers)\n  }, [])\n  return (\n    <div>\n      <PageHeader extra={[]} title='Customers' />\n      <CustomerTable data={customers.data} loading={customers.loading} />\n    </div>\n  )\n}\nexport default Customers\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport { NumericFormat } from 'react-number-format'\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst OrderTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const { admin } = ExpirySession.get(\"user\");\n\n\n  const columns = [\n    {\n      title: 'Order ID.',\n      dataIndex: 'order_id',\n      key: 'order_id',\n      ...getColumnSearchProps({\n        dataIndex: 'order_id',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Recipient name',\n      dataIndex: 'recipient_name',\n      key: 'recipient_name',\n      ...getColumnSearchProps({\n        dataIndex: 'recipient_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    \n\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      ...getColumnSearchProps({\n        dataIndex: 'status',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Payment type',\n      dataIndex: 'payment_type',\n      key: 'payment_type',\n      ...getColumnSearchProps({\n        dataIndex: 'payment_type',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      render: (price) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <NumericFormat\n            value={price}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          />\n        </span>\n      ),\n    },\n\n    {\n      title: 'Total order amount',\n      dataIndex: 'total_price',\n      key: 'total_price',\n      render: (total_price) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <NumericFormat\n            value={total_price}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          />\n        </span>\n      ),\n    },\n\n    {\n      title: 'Delivery Fee',\n      dataIndex: 'delivery_fee',\n      key: 'delivery_fee',\n      render: (delivery_fee) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <NumericFormat\n            value={delivery_fee}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          />\n        </span>\n      ),\n    },\n\n    \n\n    {\n      title: 'Tax',\n      dataIndex: 'tax',\n      key: 'tax',\n      ...getColumnSearchProps({\n        dataIndex: 'tax',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    \n    },\n\n  \n\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n{admin.level === 0 && ( <div>\n            <Button style={{ marginRight: '5px' }} title='View product details'>\n              <Link to={`/order/details/${singleData?.id}`}>{'View'}</Link>\n            </Button>\n            <Button\n            danger\n            onClick={() => handleDelete(singleData)}\n            title='delete order'\n          >\n            delete\n          </Button>\n          </div>)}\n\n          {(admin.level === 1 || admin.level === 2 || admin.level === 3) && ( <div>\n            <Button style={{ marginRight: '5px' }} title='View product details'>\n              <Link to={`/order/details/${singleData?.id}`}>{'View'}</Link>\n            </Button>\n          </div>)}\n     \n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default OrderTable\n","import moment from 'moment'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { RowDetails } from '../../components/RowDetails'\nimport { NumericFormat } from 'react-number-format'\n\n\nconst Aboutcustomer = ({ customer }) => {\n  return (\n    <StyledContainer>\n      <div className='flex flex-col gap-10'>\n        <RowDetails label='Wallet Balance' value={ <span style={{ whiteSpace: 'nowrap' }}>\n          <NumericFormat\n            value={customer?.wallet}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          />\n        </span>|| 'Null'} />\n        <RowDetails label='Full Name' value={customer?.full_name || 'Null'} />\n        <RowDetails label='Email' value={customer?.email || 'Null'} />\n        <RowDetails label='Phone number' value={customer?.phone_number || 'Null'} />\n        <RowDetails label='Status' value={customer?.status || 'Null'} />\n        <RowDetails label='Address' value={customer?.address || 'Null'} />\n        <RowDetails label='Blocked' value={customer?.is_blocked === 1 ? 'Yes' :'No'} />\n        <RowDetails label='Online' value={customer?.is_online === 1 ? 'Yes' :'No'} />\n\n        <RowDetails label='Date Created' value={moment(customer?.created_at).format('DD MMM YYYY')} />\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default Aboutcustomer\n\nconst StyledContainer = styled.div`\n  .content {\n  }\n  .divider {\n    width: 100%;\n    border-color: white;\n    opacity: 0.08;\n  }\n`\n","import React, { useEffect } from 'react'\nimport { Tabs } from 'antd'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport OrderTable from '../Orders/OrderTable'\nimport AboutHolder from '../Orders/AboutHolder'\n\nconst { TabPane } = Tabs\n\nconst CustomerTabs = ({ props, data, loading }) => {\n  useEffect(() => {\n    console.log('single user', data)\n  }, [])\n\n  return (\n    <StyledDiv {...props}>\n      <Tabs defaultActiveKey='1'>\n      <TabPane tab=\"Customer Details\" key=\"1\">\n          <AboutHolder customer={data}/>\n        </TabPane>\n        <TabPane tab='Orders' key='2'>\n          <OrderTable\n            data={data?.orders}\n            loading={loading}\n\n          />\n        </TabPane>\n      </Tabs>\n    </StyledDiv>\n  )\n}\n\nexport default CustomerTabs\n\nconst StyledDiv = styled.div`\n  margin-top: 1rem;\n  padding: 0 0.5rem;\n`\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { createIndividualActivity, getAllActivities } from '../../redux/activitySlice'\nimport { getAllCustomers, getOneCustomer } from '../../redux/customerSlice'\nimport { notification } from 'antd'\n\nconst initialFormState = {\n  activity_date: '',\n  title: '',\n  description: '',\n  image: '',\n}\n\nfunction AddIndividualActivity({ user_name, user }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [activityFormData, setActivityFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setActivityFormData({\n      ...activityFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setActivityFormData({\n      activity_date: '',\n      title: '',\n      description: '',\n      image: '',\n    })\n    setImage('')\n  }\n\n  const formatDate = (date) => {\n    let objectDate = new Date(date)\n    let day = objectDate.getDate()\n\n    let month = objectDate.getMonth()\n\n    let year = objectDate.getFullYear()\n\n    let format = day + '/' + month + '/' + year\n    return format\n  }\n\n  const handleCreateIndividualActivity = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('title', activityFormData.title)\n    formData.append('image', image)\n    formData.append('description', activityFormData.description)\n    formData.append('activity_date', activityFormData.activity_date)\n    formData.append('user_id', user?.id)\n\n    setConfirmLoading(true)\n    dispatch(createIndividualActivity(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'activity/individual/create/fulfilled') {\n          dispatch(getOneCustomer(user?.id))\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          //   Messages.successMessage('Activity successfully creatd user_name', 'top-right')\n          notification.success({\n            message: `Activity successfully created for ${user?.full_name}`,\n          })\n        } else if (response.type === 'activity/individual/create/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating global activity, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Create Activity for {user_name}</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Activity for {user_name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateIndividualActivity}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Activity date{activityFormData.activity_date}</Form.Label>\n              <Form.Control\n                type='date'\n                name='activity_date'\n                placeholder='Enter activity date'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name{activityFormData.title}</Form.Label>\n              <Form.Control\n                type='text'\n                name='title'\n                placeholder='Enter title'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description {activityFormData.description}</Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default AddIndividualActivity\n","import React, { useEffect, useRef } from 'react'\n\nimport { Avatar, Button, Card, notification, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope, BsLadder } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport { getAllCustomers, getOneCustomer } from '../../redux/customerSlice'\nimport CustomerTabs from './CustomerTabs'\nimport AddIndividualActivity from './AddIndividualActivity'\n\nfunction CustomerDetail() {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { singleData, loading } = useSelector((state) => state.customers)\n  const { id } = useParams()\n  useEffect(() => {\n    dispatch(getOneCustomer(id))\n  }, [id])\n\n  console.log('single users', singleData)\n\n\n  const userActivities = singleData?.activities?.map((activity, key) => {\n    return activity?.pivot\n  })\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button style={{color: '#FF0303'}}\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              avatar={\n                <div className='avatar_overlay'>\n                  <Avatar\n                    size={100}\n                    src={singleData?.profile_photo_url || 'https://joeschmoe.io/api/v1/random'}\n                  />\n                </div>\n              }\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>\n                  {`${singleData?.full_name} `}\n                </Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n                  {singleData?.phone_number && (\n                    <div className='flex align-middle items-center gap-3 flex-wrap'>\n                      <a className='text-sm' href={`tel:${singleData?.phone_number}`}>\n                        <BsPhone size={15} /> {singleData?.phone_number || 'no phone'}\n                      </a>\n                    </div>\n                  )}\n                  <div className='flex align-middle items-center gap-3 flex-wrap '>\n                    <a href={`mailto:${singleData?.email}`} className='text-sm'>\n                      <BsEnvelope size={15} /> {singleData?.email || ''}\n                    </a>\n                  </div>\n                </div>\n              }\n            />\n        \n          </Card>\n        <CustomerTabs data={singleData} loading={loading}/>\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\nexport default CustomerDetail\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n      color: #FF0303\n    }\n  }\n\n  .avatar_overlay {\n    position: relative;\n\n    input[type='file'] {\n      display: none;\n    }\n\n    &:hover::after {\n      transition: all 0.5s;\n      opacity: 0.6;\n    }\n\n    &:hover::before {\n      transition: all 0.2s;\n      opacity: 1;\n    }\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n      background-color: black;\n      border-radius: 100%;\n      opacity: 0;\n      cursor: pointer;\n    }\n\n    &::before {\n      content: 'Edit';\n      z-index: 2;\n      color: white;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, 10%);\n      border: 1px solid white;\n      padding: 0.05rem 1rem;\n      border-radius: 20px;\n      font-size: 12px;\n      cursor: pointer;\n      opacity: 0;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n`\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport {\n  createGlobalActivity,\n  editGlobalActivity,\n  getAllActivities,\n} from '../../redux/activitySlice'\nimport { useEffect } from 'react'\n\nconst initialFormState = {\n  activity_date: '',\n  title: '',\n  description: '',\n  image: '',\n}\n\nfunction UpdateGlobalActivity({ activity }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [activityFormData, setActivityFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  useEffect(() => {\n    setActivityFormData({\n      title: activity.title,\n      description: activity.description,\n      activity_date: activity.activity_date,\n    })\n    console.log('activity', activity)\n  }, [activity])\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setActivityFormData({\n      ...activityFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setActivityFormData({\n      activity_date: '',\n      title: '',\n      description: '',\n      image: '',\n    })\n    setImage('')\n  }\n\n  const formatDate = (date) => {\n    let objectDate = new Date(date)\n    let day = objectDate.getDate()\n\n    let month = objectDate.getMonth()\n\n    let year = objectDate.getFullYear()\n\n    let format = day + '/' + month + '/' + year\n    return format\n  }\n\n  const handleEditGlobalActivity = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('title', activityFormData.title)\n    formData.append('image', image)\n    formData.append('description', activityFormData.description)\n    formData.append('activity_date', activityFormData.activity_date)\n    formData.append('activity_id', activity?.id)\n\n    // console.log('formvalues', formData)\n\n    setConfirmLoading(true)\n    dispatch(editGlobalActivity(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'activity/global/edit/fulfilled') {\n          dispatch(getAllActivities())\n          handleClose()\n          clearFormData()\n          Messages.successMessage('Global activity updated successfully', 'top-right')\n        } else if (response.type === 'activity/global/edit/rejected') {\n          console.log('error notificatom', 'Error editing Global activity, please try again')\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error editing global activity, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Global Activity</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditGlobalActivity}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Activity date{activityFormData.activity_date}</Form.Label>\n              <Form.Control\n                type='date'\n                name='activity_date'\n                placeholder='Enter activity date'\n                defaultValue={activityFormData.activity_date}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name{activityFormData.title}</Form.Label>\n              <Form.Control\n                type='text'\n                name='title'\n                placeholder='Enter title'\n                defaultValue={activityFormData.title}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description {activityFormData.description}</Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                defaultValue={activityFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n              <span>\n                <img\n                  src={activity?.image_url}\n                  alt='horse'\n                  style={{ with: '70px', height: '70px' }}\n                />\n              </span>\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateGlobalActivity\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateGlobalActivity from './UpdateGlobalActivity'\n\nconst ActivityTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      key: 'title',\n      ...getColumnSearchProps({\n        dataIndex: 'title',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      ...getColumnSearchProps({\n        dataIndex: 'description',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Activity type',\n      dataIndex: 'activity_type',\n      key: 'activity_type',\n      ...getColumnSearchProps({\n        dataIndex: 'activity_type',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Image',\n      key: 'id',\n      dataIndex: 'image_url',\n      align: 'center',\n      render: (image_url) => (\n        <Link to={`${image_url}`}>\n          {image_url ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={image_url}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Activity Date',\n      dataIndex: 'activity_date',\n      key: 'activity_date',\n      ...getColumnSearchProps({\n        dataIndex: 'activity_date',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (activity_date) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(activity_date).format('DD MMM YYYY')}</span>\n      ),\n    },\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          {singleData?.activity_type == 'global' ? (\n            <div>\n              <Button style={{ marginRight: '5px' }} title='Edit product'>\n                <UpdateGlobalActivity activity={singleData} />\n              </Button>\n              <Button\n                danger\n                onClick={() => handleDelete(singleData)}\n                title='Temporarily delete product'\n              >\n                delete\n              </Button>\n            </div>\n          ) : (\n            'N/A'\n          )}\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default ActivityTable\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { createGlobalActivity, getAllActivities } from '../../redux/activitySlice'\n\nconst initialFormState = {\n  activity_date: '',\n  title: '',\n  description: '',\n  image: '',\n}\n\nfunction CreateGlobalActivity() {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [activityFormData, setActivityFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setActivityFormData({\n      ...activityFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setActivityFormData({\n      activity_date: '',\n      title: '',\n      description: '',\n      image: '',\n    })\n    setImage('')\n  }\n\n  const formatDate = (date) => {\n    let objectDate = new Date(date)\n    let day = objectDate.getDate()\n\n    let month = objectDate.getMonth()\n\n    let year = objectDate.getFullYear()\n\n    let format = day + '/' + month + '/' + year\n    return format\n  }\n\n  const handleCreateGlobalActivity = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('title', activityFormData.title)\n    formData.append('image', image)\n    formData.append('description', activityFormData.description)\n    formData.append('activity_date', activityFormData.activity_date)\n\n    setConfirmLoading(true)\n    dispatch(createGlobalActivity(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'activity/global/create/fulfilled') {\n          dispatch(getAllActivities())\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          Messages.successMessage('Global activity created successfully', 'top-right')\n        } else if (response.type === 'activity/global/create/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating global activity, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Create Global Activity</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Global Activity</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateGlobalActivity}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Activity date{activityFormData.activity_date}</Form.Label>\n              <Form.Control\n                type='date'\n                name='activity_date'\n                placeholder='Enter activity date'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name{activityFormData.title}</Form.Label>\n              <Form.Control\n                type='text'\n                name='title'\n                placeholder='Enter title'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description {activityFormData.description}</Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreateGlobalActivity\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteProduct, getAllProducts } from '../../redux/productSlice'\nimport { Link } from 'react-router-dom'\nimport { deleteOneActivity, getAllActivities } from '../../redux/activitySlice'\nimport ActivityTable from './ActivityTable'\nimport CreateGlobalActivity from './CreateGlobalActivity'\n\nconst Activities = () => {\n  const { serviceCategory } = useSelector((state) => state)\n  const { activities } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllActivities())\n    console.log('activiies', activities)\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected activity?')) {\n      return\n    }\n\n    dispatch(deleteOneActivity(id))\n      .then((response) => {\n        if (response.type === 'activity/delete/fulfilled') {\n          dispatch(getAllActivities())\n          notification.success({\n            message: ' activity deleted successfully',\n          })\n        } else if (response.type === 'activity/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting activity, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting activity, please try again later',\n        })\n      })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='createGlobalActivity'>\n            <CreateGlobalActivity key='CreateGlobalActivityButton' />,\n          </Button>,\n        ]}\n        title='Activities'\n      />\n      <ActivityTable\n        data={activities.data}\n        loading={activities.loading}\n        handleDelete={handleDelete}\n      />\n    </div>\n  )\n}\n\nexport default Activities\n","import React from 'react'\n\nexport default function ActivityDetails() {\n  return <div>ActivityDetails</div>\n}\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { createSubject, editSubject, getAllSubjects } from '../../redux/subjectSlice'\nimport { useEffect } from 'react'\n\nconst initialFormState = {\n  subject_name: '',\n  logo: '',\n  description: '',\n}\n\nfunction UpdateSubject({ subject }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [subjectFormData, setSubjectFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setSubjectFormData({\n      ...subjectFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setSubjectFormData({\n      subject_name: subject.subject_name,\n      logo: subject.logo,\n      description: subject.description,\n    })\n    console.log('subject', subject)\n  }, [subject])\n\n  const clearFormData = () => {\n    setSubjectFormData({\n      subject_name: '',\n      logo: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleEditSubject = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('subject_name', subjectFormData.subject_name)\n    formData.append('logo', image)\n    formData.append('description', subjectFormData.description)\n    formData.append('subject_id', subject?.id)\n\n    setConfirmLoading(true)\n    dispatch(editSubject(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'subject/edit/fulfilled') {\n          dispatch(getAllSubjects())\n          handleClose()\n          //   clearFormData()\n          console.log('response act', response)\n          Messages.successMessage('Subject updated successfully', 'top-right')\n        } else if (response.type === 'subject/edit/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating Subject, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit Subject</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditSubject}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='subject_name'\n                placeholder='Enter subject name'\n                defaultValue={subjectFormData.subject_name}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                defaultValue={subjectFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Logo (Optional)</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n              <span>\n                <img src={subject?.logo} alt='horse' style={{ with: '70px', height: '70px' }} />\n              </span>\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateSubject\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateSubject from './UpdateSubject'\n\nconst SubjectTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'subject_name',\n      key: 'subject_name',\n      ...getColumnSearchProps({\n        dataIndex: 'subject_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      ...getColumnSearchProps({\n        dataIndex: 'description',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'logo',\n      key: 'id',\n      dataIndex: 'logo',\n      align: 'center',\n      render: (logo) => (\n        <Link to={`${logo}`}>\n          {logo ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={logo}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Craeted At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n    {\n      title: 'Courses',\n      dataIndex: 'courses',\n      key: 'courses',\n      render: (courses) => <span style={{ whiteSpace: 'nowrap' }}> {courses?.length} courses</span>,\n    },\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='Edit subject'>\n              <UpdateSubject subject={singleData} />\n            </Button>\n            <Button\n              danger\n              onClick={() => handleDelete(singleData)}\n              title='Permantly delete subject'\n            >\n              delete\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default SubjectTable\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { createSubject, getAllSubjects } from '../../redux/subjectSlice'\n\nconst initialFormState = {\n  subject_name: '',\n  logo: '',\n  description: '',\n}\n\nfunction CreateSubject() {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [subjectFormData, setSubjectFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setSubjectFormData({\n      ...subjectFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setSubjectFormData({\n      subject_name: '',\n      logo: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleCreateSubject = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('subject_name', subjectFormData.subject_name)\n    formData.append('logo', image)\n    formData.append('description', subjectFormData.description)\n\n    setConfirmLoading(true)\n    dispatch(createSubject(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'subject/create/fulfilled') {\n          dispatch(getAllSubjects())\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          Messages.successMessage('Subject created successfully', 'top-right')\n        } else if (response.type === 'subject/create/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating Subject, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Create Subject</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Subject</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateSubject}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='subject_name'\n                placeholder='Enter subject name'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Logo (Optional)</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreateSubject\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteSubject, getAllSubjects } from '../../redux/subjectSlice'\nimport SubjectTable from './SubjectTable'\nimport CreateSubject from './CreateSubject'\n\nconst Subjects = () => {\n  const { subjects } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllSubjects())\n    console.log('subjects', subjects)\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected subject?')) {\n      return\n    }\n\n    dispatch(deleteSubject(id))\n      .then((response) => {\n        if (response.type === 'subject/delete/fulfilled') {\n          dispatch(getAllSubjects())\n          notification.success({\n            message: ' subject deleted successfully',\n          })\n        } else if (response.type === 'subject/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting subject, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting subject, please try again later',\n        })\n      })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='CreateSubject'>\n            <CreateSubject />,\n          </Button>,\n        ]}\n        title='Subjects'\n      />\n      <SubjectTable data={subjects.data} loading={subjects.loading} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default Subjects\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\n\nimport { createLearnerclass, getAllLearnerclasses } from '../../redux/LearnerClassSlice'\n\nconst initialFormState = {\n  class_name: '',\n  description: '',\n}\n\nfunction CreatelearnerClass() {\n  const [show, setShow] = useState(false)\n  const [learnerClassFormData, setLearnerClassFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setLearnerClassFormData({\n      ...learnerClassFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setLearnerClassFormData({\n      class_name: '',\n      description: '',\n    })\n  }\n\n  const handleCreateLearnerClass = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('class_name', learnerClassFormData.class_name)\n    formData.append('description', learnerClassFormData.description)\n\n    setConfirmLoading(true)\n    dispatch(createLearnerclass(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'learnerclass/create/fulfilled') {\n          dispatch(getAllLearnerclasses())\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          Messages.successMessage('learner class created successfully', 'top-right')\n        } else if (response.type === 'learnerclass/create/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating learner class, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Create learner class</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Learner Class</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateLearnerClass}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='class_name'\n                placeholder='Enter Learner Class name'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreatelearnerClass\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { createSubject, editSubject, getAllSubjects } from '../../redux/subjectSlice'\nimport { useEffect } from 'react'\nimport { editLearnerclass, getAllLearnerclasses } from '../../redux/LearnerClassSlice'\n\nconst initialFormState = {\n  class_name: '',\n  description: '',\n}\n\nfunction UpdateLearnerClass({ learnerclass }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [learnerClassFormData, setLearnerClassFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setLearnerClassFormData({\n      ...learnerClassFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setLearnerClassFormData({\n      class_name: learnerclass.class_name,\n      description: learnerclass.description,\n    })\n    console.log('learnerclass', learnerclass)\n  }, [learnerclass])\n\n  const clearFormData = () => {\n    setLearnerClassFormData({\n      class_name: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleEditLearnerclass = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('class_name', learnerClassFormData.class_name)\n    formData.append('description', learnerClassFormData.description)\n    formData.append('learner_class_id', learnerclass?.id)\n\n    setConfirmLoading(true)\n    dispatch(editLearnerclass(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'learnerclass/edit/fulfilled') {\n          dispatch(getAllLearnerclasses())\n          handleClose()\n          //   clearFormData()\n          console.log('response act', response)\n          Messages.successMessage('learnerclass updated successfully', 'top-right')\n        } else if (response.type === 'learnerclass/edit/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating learnerclass, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit learner class</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditLearnerclass}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='class_name'\n                placeholder='Enter subject name'\n                defaultValue={learnerClassFormData.class_name}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                defaultValue={learnerClassFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateLearnerClass\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateLearnerClass from './UpdateLearnerClass'\n\nconst LearnerClassTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'class_name',\n      key: 'class_name',\n      ...getColumnSearchProps({\n        dataIndex: 'class_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      ...getColumnSearchProps({\n        dataIndex: 'description',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Craeted At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='Edit subject'>\n              <UpdateLearnerClass learnerclass={singleData} />\n            </Button>\n            <Button\n              danger\n              onClick={() => handleDelete(singleData)}\n              title='Permantly delete subject'\n            >\n              delete\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default LearnerClassTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteLearnerClass, getAllLearnerclasses } from '../../redux/LearnerClassSlice'\nimport CreatelearnerClass from './CreatelearnerClass'\nimport LearnerClassTable from './LearnerClassTable'\n\nconst Learnerclasses = () => {\n  const { learnerClasses } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllLearnerclasses())\n    console.log('learnerClasses', learnerClasses)\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected learner class?')) {\n      return\n    }\n\n    dispatch(deleteLearnerClass(id))\n      .then((response) => {\n        if (response.type === 'learnerclass/delete/fulfilled') {\n          dispatch(getAllLearnerclasses())\n          notification.success({\n            message: ' learnerclass deleted successfully',\n          })\n        } else if (response.type === 'learnerclass/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting learnerclass, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting learnerclass, please try again later',\n        })\n      })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='CreateSubject'>\n            <CreatelearnerClass />,\n          </Button>,\n        ]}\n        title='Learner Classes'\n      />\n      <LearnerClassTable\n        data={learnerClasses.data}\n        loading={learnerClasses.loading}\n        handleDelete={handleDelete}\n      />\n    </div>\n  )\n}\n\nexport default Learnerclasses\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\n\nimport { createLearnerclass, getAllLearnerclasses } from '../../redux/LearnerClassSlice'\nimport { createLearnerAge, getAllLearnerAges } from '../../redux/LearnerAgeSlice'\n\nconst initialFormState = {\n  name: '',\n  description: '',\n}\n\nfunction CreatelearnerAge() {\n  const [show, setShow] = useState(false)\n  const [learnerAgeFormData, setLearnerAgeFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setLearnerAgeFormData({\n      ...learnerAgeFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setLearnerAgeFormData({\n      name: '',\n      description: '',\n    })\n  }\n\n  const handleCreateLearnerAge = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', learnerAgeFormData.name)\n    formData.append('description', learnerAgeFormData.description)\n\n    setConfirmLoading(true)\n    dispatch(createLearnerAge(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n\n        if (response.type === 'learnerage/create/fulfilled') {\n          dispatch(getAllLearnerAges())\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          Messages.successMessage('learner age created successfully', 'top-right')\n        } else if (response.type === 'learnerage/create/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating learner age, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Create learner age</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Learner age</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateLearnerAge}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='name'\n                placeholder='Enter Learner age name'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreatelearnerAge\n","import React, { useState, useEffect } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { editLearnerAge, getAllLearnerAges } from '../../redux/LearnerAgeSlice'\n\nconst initialFormState = {\n  name: 'something',\n  description: '',\n}\n\nfunction UpdateLearnerAge({ learnerage }) {\n  const [show, setShow] = useState(false)\n\n  const [learnerAgeFormData, setLearnerAgeFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setLearnerAgeFormData({\n      ...learnerAgeFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setLearnerAgeFormData({\n      name: learnerage?.name,\n      description: learnerage?.description,\n    })\n    console.log('learnerage', learnerage)\n  }, [learnerage])\n\n  const clearFormData = () => {\n    setLearnerAgeFormData({\n      name: '',\n      description: '',\n    })\n  }\n\n  const handleEditLearnerAge = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', learnerAgeFormData.name)\n    formData.append('description', learnerAgeFormData.description)\n    formData.append('learner_age_id', learnerage?.id)\n\n    setConfirmLoading(true)\n    dispatch(editLearnerAge(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'learnerage/edit/fulfilled') {\n          dispatch(getAllLearnerAges())\n          handleClose()\n          //   clearFormData()\n          console.log('response act', response)\n          Messages.successMessage('learner age updated successfully', 'top-right')\n        } else if (response.type === 'learnerage/edit/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating learner age, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit learner age</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditLearnerAge}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name {learnerAgeFormData.name}</Form.Label>\n              <Form.Control\n                type='text'\n                name='name'\n                placeholder='Enter subject name'\n                defaultValue={learnerAgeFormData.name}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                defaultValue={learnerAgeFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateLearnerAge\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateLearnerAge from './UpdateLearnerAge'\n\nconst LearnerAgeTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps({\n        dataIndex: 'name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      ...getColumnSearchProps({\n        dataIndex: 'description',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Craeted At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='Edit subject'>\n              <UpdateLearnerAge learnerage={singleData} />\n            </Button>\n            <Button\n              danger\n              onClick={() => handleDelete(singleData)}\n              title='Permantly delete learner age'\n            >\n              delete\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default LearnerAgeTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteLearnerAge, getAllLearnerAges } from '../../redux/LearnerAgeSlice'\nimport CreatelearnerAge from './CreatelearnerAge'\nimport LearnerAgeTable from './LearnerAgeTable'\n\nconst LearnerAges = () => {\n  const { learnerAges } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllLearnerAges())\n    console.log('learnerAges', learnerAges)\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected learner age?')) {\n      return\n    }\n\n    dispatch(deleteLearnerAge(id))\n      .then((response) => {\n        if (response.type === 'learnerage/delete/fulfilled') {\n          dispatch(getAllLearnerAges())\n          notification.success({\n            message: ' learner-age deleted successfully',\n          })\n        } else if (response.type === 'learnerage/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting learner-age, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting learner-age, please try again later',\n        })\n      })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='CreateSubject'>\n            <CreatelearnerAge />,\n          </Button>,\n        ]}\n        title='Learner Ages'\n      />\n      <LearnerAgeTable\n        data={learnerAges.data}\n        loading={learnerAges.loading}\n        handleDelete={handleDelete}\n      />\n    </div>\n  )\n}\n\nexport default LearnerAges\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst CourseTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'course_title',\n      dataIndex: 'course_title',\n      key: 'course_title',\n      ...getColumnSearchProps({\n        dataIndex: 'course_title',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Fee',\n      dataIndex: 'course_fee',\n      key: 'course_fee',\n      render: (course_fee) => `₦${Number(course_fee).toLocaleString()}` || 'Null',\n    },\n    {\n      title: 'Discount',\n      dataIndex: 'course_discount',\n      key: 'course_discount',\n      ...getColumnSearchProps({\n        dataIndex: 'course_discount',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Total fee',\n      dataIndex: 'total_course_fee',\n      key: 'total_course_fee',\n      render: (total_course_fee) => `₦${Number(total_course_fee).toLocaleString()}` || 'Null',\n    },\n    {\n      title: 'ratings',\n      dataIndex: 'ratings_count',\n      key: 'ratings_count',\n      ...getColumnSearchProps({\n        dataIndex: 'ratings_count',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Quizzes',\n      dataIndex: 'quizzes',\n      key: 'quizzes',\n      render: (quizzes) => <span style={{ whiteSpace: 'nowrap' }}> {quizzes?.length} </span>,\n    },\n    {\n      title: 'Date Created',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <Button style={{ marginRight: '5px' }} title='View product details'>\n            <Link to={`/course/details/${singleData?.id}/${singleData?.title_slug}`}>{'View'}</Link>\n          </Button>\n          <Button style={{ marginRight: '5px' }} title='Edit product'>\n            <Link to={`/course/edit/${singleData?.id}/${singleData?.title_slug}`}>Edit</Link>\n          </Button>\n          <Button danger onClick={() => handleDelete(singleData)} title='Temporarily delete VB'>\n            delete\n          </Button>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default CourseTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport CourseTable from './CourseTable'\nimport { deleteCourse, getAllCourses } from '../../redux/courseSlice'\n\nconst Courses = () => {\n  const { courses } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected course?')) {\n      return\n    }\n\n    dispatch(deleteCourse(id))\n      .then((response) => {\n        if (response.type === 'course/delete/fulfilled') {\n          dispatch(getAllCourses())\n          notification.success({\n            message: ' Couse deleted successfully',\n          })\n        } else if (response.type === 'course/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting course, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting course, please try again later',\n        })\n      })\n  }\n\n  useEffect(() => {\n    dispatch(getAllCourses())\n  }, [])\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='createcourse'>\n            <Link to='/course/create'>Create couse </Link>\n          </Button>,\n        ]}\n        title='Courses'\n      />\n      <CourseTable data={courses.data} loading={courses.loading} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default Courses\n","import React, { useState, useEffect } from 'react'\nimport { PageHeader } from 'antd'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport {\n  createVarietyBox,\n  addItemsToVarietyBox,\n  getVarietyBoxCategory,\n} from '../../redux/varietyBoxSlice'\nimport { getAllSubjects } from '../../redux/subjectSlice'\nimport { getAllLearnerAges } from '../../redux/LearnerAgeSlice'\nimport { getAllLearnerclasses } from '../../redux/LearnerClassSlice'\nimport { addCourseContent, createCourse, getAllCourses } from '../../redux/courseSlice'\n\nconst initialFormState = {\n  subject_id: '',\n  learner_class_id: '',\n  learner_age_id: '',\n  course_title: '',\n  course_fee: '',\n  percentage_discount: '',\n  read_duration: '',\n  content_source_url: '',\n  thumbnail: '',\n  description: '',\n  course_contents: [{ course_content_url: '' }],\n}\n\nfunction CreateCourse() {\n  const [image, setImage] = useState('')\n  const [CourseFormData, setCourseFormData] = useState(initialFormState)\n  const { subjects } = useSelector((state) => state)\n  const { learnerClasses } = useSelector((state) => state)\n  const { learnerAges } = useSelector((state) => state)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n  const [allsubjects, setSubjects] = useState(subjects?.data)\n  const [alllearnerclasses, setLearnerclass] = useState(learnerClasses?.data)\n  const [alllearnerages, setLearnerAge] = useState(learnerAges?.data)\n  const navigate = useNavigate()\n  const [CourseContent, setCourseContent] = useState([{ course_content_url: '' }])\n  const [validated, setValidated] = useState(false)\n  const [variety_box_category, setVarietyBoxCategory] = useState({ id: '', name: '' })\n\n  useEffect(() => {\n    dispatch(getAllSubjects())\n    dispatch(getAllLearnerAges())\n    dispatch(getAllLearnerclasses())\n  }, [])\n\n  //   const showVarietyboxCategory = () => {\n  //     dispatch(getVarietyBoxCategory())\n  //       .then((response) => {\n  //         if (response.type === 'varietyBox/getCategory/fulfilled') {\n  //           console.log('varity category success response', response?.payload)\n  //           setVarietyBoxCategory({ id: response?.payload?.id, name: response?.payload?.name })\n  //         } else if ('varietyBox/getCategory/rejected') {\n  //           console.log('varity category error response', response)\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         console.log('variety box category', error)\n  //       })\n  //   }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setCourseFormData({\n      ...CourseFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setCourseFormData({\n      subject_id: '',\n      learner_class_id: '',\n      learner_age_id: '',\n      course_title: '',\n      course_fee: '',\n      percentage_discount: '',\n      read_duration: '',\n      content_source_url: '',\n      thumbnail: '',\n      description: '',\n      course_contents: [{ course_content_url: '' }],\n    })\n    setImage('')\n    setCourseContent([{ course_content_url: '' }])\n  }\n\n  const handleCreateVarietyBox = (e) => {\n    e.preventDefault()\n    const form = e.currentTarget\n    if (form.checkValidity() === false) {\n      e.preventDefault()\n      e.stopPropagation()\n      return\n    }\n\n    setValidated(true)\n    var formData = new FormData()\n    formData.append(' subject_id', CourseFormData?.subject_id)\n    formData.append('image', image)\n    formData.append(' learner_class_id', CourseFormData?.learner_class_id)\n    formData.append('learner_age_id', CourseFormData?.learner_age_id)\n    formData.append('course_title', CourseFormData?.course_title)\n    formData.append('course_fee', CourseFormData?.course_fee)\n    formData.append('percentage_discount', CourseFormData?.percentage_discount)\n    formData.append('read_duration', CourseFormData?.read_duration)\n    formData.append('content_source_url', CourseFormData?.content_source_url)\n    formData.append('description', CourseFormData?.description)\n\n    // const formData = {\n    //   subject_id: CourseFormData?.subject_id,\n    //   learner_class_id: CourseFormData?.learner_class_id,\n    //   learner_age_id: CourseFormData?.learner_age_id,\n    //   course_title: CourseFormData?.course_title,\n    //   course_fee: CourseFormData?.course_fee,\n    //   percentage_discount: CourseFormData?.percentage_discount,\n    //   read_duration: CourseFormData?.read_duration,\n    //   content_source_url: CourseFormData?.content_source_url,\n    //   thumbnail: image,\n    //   description: CourseFormData?.description,\n    //   course_contents: [{ course_content_url: '' }],\n    // }\n\n    setConfirmLoading(true)\n    dispatch(createCourse(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'course/create/fulfilled') {\n          var courseContentData = {\n            course_id: response?.payload?.id,\n            course_contents: CourseContent,\n          }\n          console.log('courseContentData', courseContentData)\n          if (courseContentData?.course_contents.length >= 1) {\n            dispatch(addCourseContent(courseContentData))\n          }\n          dispatch(getAllCourses())\n          console.log('new course', response)\n          clearFormData()\n          document.getElementById('create-course-form').reset()\n          Messages.successMessage('course created successfully', 'top-right')\n        } else if (response.type === 'course/create/rejected') {\n          console.log('error notificatom', 'Error creating course, please try again')\n          Messages.errorMessage('Error creating course, please try again', 'top-right')\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating varietyBox, please try again')\n        Messages.errorMessage('Error creating varietyBox, please try again', 'top-right')\n      })\n  }\n  const subjects_list =\n    allsubjects &&\n    allsubjects.map((subject, key) => {\n      return (\n        <option value={subject.id} key={key}>\n          {subject.subject_name}\n        </option>\n      )\n    })\n\n  const learnerclasses_list =\n    alllearnerclasses &&\n    alllearnerclasses.map((learnerclass, key) => {\n      return (\n        <option value={learnerclass.id} key={key}>\n          {learnerclass.class_name}\n        </option>\n      )\n    })\n\n  const learneraga_list =\n    alllearnerages &&\n    alllearnerages.map((learnerage, key) => {\n      return (\n        <option value={learnerage.id} key={key}>\n          {learnerage.name}\n        </option>\n      )\n    })\n\n  let handleChange = (i, e) => {\n    if (!isNaN(e.target.value)) {\n      let newCourseContent = [...CourseContent]\n      newCourseContent[i][e.target.name] = e.target.value\n      setCourseContent(newCourseContent)\n\n      console.log(' CourseContent values', newCourseContent)\n    } else {\n      let newCourseContent = [...CourseContent]\n      newCourseContent[i][e.target.name] = ''\n      setCourseContent(newCourseContent)\n    }\n  }\n\n  let addFormFields = () => {\n    if (CourseContent && CourseContent.length == 5) {\n      alert(\"You can't add more than 5 items\")\n      return\n    }\n    setCourseContent([...CourseContent, { course_content_url: '' }])\n    console.log('multi related products', CourseContent)\n  }\n\n  let removeFormFields = (i) => {\n    let newCourseContent = [...CourseContent]\n    newCourseContent.splice(i, 1)\n    setCourseContent(newCourseContent)\n    console.log('remove multi related products', newCourseContent)\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='varietybox' variant='light'>\n            <Link to='/variety-boxes'>Back to list </Link>\n          </Button>,\n        ]}\n        title='Create Course'\n      />\n\n      <Card>\n        <Card.Header>\n          <small>\n            Fields marked with an asterisk (<span style={{ color: 'red' }}>*</span>) are required\n          </small>\n        </Card.Header>\n        <Card.Body>\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={handleCreateVarietyBox}\n            id='create-varietybox-form'\n          >\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicEmail'>\n                  <Form.Label>\n                    Name <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='text'\n                    required\n                    name='name'\n                    placeholder='Name'\n                    onChange={(evt) => handleInputChange(evt)}\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The product name is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    subject <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select name='subject_id' aria-label='Default select example' required>\n                    <option>Select subject</option>\n                    {subjects_list}\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicEmail'>\n                  <Form.Label>\n                    Learner class <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select name='learner_class_id' aria-label='Default select example' required>\n                    <option>Select learner class</option>\n                    {learnerclasses_list}\n                  </Form.Select>\n                  <Form.Control.Feedback type='invalid'>\n                    The product name is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    LearnerAges <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select name='learner_age_id' aria-label='Default select example' required>\n                    <option>Select learner_age</option>\n                    {learneraga_list}\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Individual price <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='number'\n                    name='individual_price'\n                    onChange={(evt) => handleInputChange(evt)}\n                    placeholder='Individual price'\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The group price field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Group price <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='number'\n                    name='group_price'\n                    onChange={(evt) => handleInputChange(evt)}\n                    placeholder='Group price'\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The individual price field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Quantity in-stock <span style={{ color: 'red' }}>*</span>{' '}\n                  </Form.Label>\n                  <Form.Control\n                    type='text'\n                    name='quantity_instock'\n                    placeholder='Quantity in-stock'\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The quantity in-stock field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Variety box size <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='variety_box_size'\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  >\n                    <option>Select size</option>\n                    <option value='small'>Small</option>\n                    <option value='medium'>medium</option>\n                    <option value='large'>Large</option>\n                  </Form.Select>\n                  <Form.Control.Feedback type='invalid'>\n                    The variety box size field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>Description {CourseFormData.description}</Form.Label>\n                  <Form.Control\n                    as='textarea'\n                    placeholder='Leave a comment here'\n                    style={{ height: '100px' }}\n                    name='description'\n                    onChange={(evt) => handleInputChange(evt)}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <h6>\n                  <strong>Add Course Content</strong>\n                </h6>\n\n                {CourseContent.map((element, index) => (\n                  <div className='form-inline' key={index}>\n                    <InputGroup>\n                      <Form.Group className='mb-3' controlId='formBasicPassword'>\n                        <Form.Label>Content {index + 1}</Form.Label>\n\n                        <Form.Control\n                          as='textarea'\n                          placeholder='Leave a comment here'\n                          style={{ height: '100px' }}\n                          name='description'\n                          onChange={(evt) => handleInputChange(evt)}\n                        />\n                        <Form.Control.Feedback type='invalid'>\n                          The learner class field is required.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      {index ? (\n                        <span\n                          className='button remove'\n                          onClick={() => removeFormFields(index)}\n                          style={{ color: 'red', cursor: 'pointer' }}\n                          title='Delete from list'\n                        >\n                          Remove\n                        </span>\n                      ) : null}\n                    </InputGroup>\n                  </div>\n                ))}\n                <div className='button-section'>\n                  <button\n                    className='button add mb-3 float-centre'\n                    type='button'\n                    onClick={() => addFormFields()}\n                  >\n                    Add More\n                  </button>\n                </div>\n              </Col>\n            </Row>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Card.Body>\n        <ToastContainer />\n      </Card>\n    </div>\n  )\n}\nexport default CreateCourse\n","import React, { useEffect } from 'react'\nimport { Tabs } from 'antd'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nconst { TabPane } = Tabs\n\nconst CourseTabs = ({ activities, props }) => {\n  const { singleData, loading } = useSelector((state) => state.customers)\n  useEffect(() => {\n    console.log('activities', activities)\n  }, [])\n\n  return (\n    <StyledDiv {...props}>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Course Content' key='1'>\n          {/* <UserActivitiesTable data={activities ? activities : []} loading={false} /> */}\n        </TabPane>\n\n        <TabPane tab='Quizzes' key='2'>\n          {/* <UserActivitiesTable data={activities ? activities : []} loading={false} /> */}\n        </TabPane>\n\n        <TabPane tab='ratings' key='3'>\n          {/* <UserActivitiesTable data={activities ? activities : []} loading={false} /> */}\n        </TabPane>\n        <TabPane tab='payments' key='3'>\n          {/* <UserActivitiesTable data={activities ? activities : []} loading={false} /> */}\n        </TabPane>\n      </Tabs>\n    </StyledDiv>\n  )\n}\n\nexport default CourseTabs\n\nconst StyledDiv = styled.div`\n  margin-top: 1rem;\n  padding: 0 0.5rem;\n`\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { getOneProduct } from '../../redux/productSlice'\nimport { Link, useParams } from 'react-router-dom'\nimport moment from 'moment'\nimport { getOneCourse } from '../../redux/courseSlice'\nimport CourseTabs from './CourseTabs'\n\nexport default function CourseDetail() {\n  const { singleData } = useSelector((state) => state.courses)\n  const { id, refkey } = useParams()\n  const dispatch = useDispatch()\n\n  const coursecontents = singleData?.course_contents?.map((course_content, key) => {\n    return course_content\n  })\n\n  useEffect(() => {\n    dispatch(getOneCourse(id))\n  }, [id])\n\n  return (\n    <div>\n      <Card>\n        <Card.Header>\n          <div className='pull-left'>Course Details</div>\n          <Button className='float-end' variant='light'>\n            <Link to='/course/create'>Create Course </Link>\n          </Button>\n          <Button className='float-end' variant='light'>\n            <Link to={`/course/edit/${singleData?.id}/${singleData?.title_slug}`}>{'Edit VB'}</Link>\n          </Button>\n          <Button className='float-end' variant='light'>\n            <Link to='/courses'>Back to list </Link>\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col>\n              <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '65px' }}>course_title:</strong>{' '}\n                      {singleData?.course_title}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '5px' }}>course_fee:</strong> ₦\n                      {Number(singleData?.course_fee).toLocaleString()}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>course_discount:</strong>{' '}\n                      {singleData?.course_discount}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>total_course_fee:</strong> ₦\n                      {Number(singleData?.total_course_fee).toLocaleString()}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>read_duration:</strong>{' '}\n                      {singleData?.read_duration}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>description:</strong>{' '}\n                      {singleData?.description}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>Created at:</strong>{' '}\n                      {moment(singleData?.created_at).format('DD MMM YYYY')}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <strong style={{ marginRight: '35px' }}>content_source_url:</strong>{' '}\n                      {singleData?.content_source_url}\n                      {/* <iframe\n                        src={singleData?.content_source_url}\n                        frameBorder='0'\n                        allow='autoplay; encrypted-media'\n                        allowFullScreen\n                        title='video'\n                      /> */}\n                      <div className='video-container'>\n                        <video autoPlay muted loop id='video'>\n                          <source src={singleData?.content_source_url} type='video/mp4' />\n                        </video>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col>\n              <h2>thumbnail_url</h2>\n              <img\n                src={singleData?.thumbnail_url}\n                alt='horse'\n                width='{40}'\n                height='{40}'\n                key='{key}'\n              />\n            </Col>\n          </Row>\n\n          <CourseTabs />\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createCategory, getAllCategories } from \"../../redux/categorySlice\";\nimport { getAllBands } from \"../../redux/bandSlice\";\nimport { notification, Avatar } from \"antd\";\n\nfunction CreateCategory() {\n  const initialFormState = {\n    name: \"\",\n    tax: \"\",\n    delivery_option: \"\",\n    discount_option: \"\",\n    discount_type: \"\",\n    discount_value: \"\",\n    thumbnail: \"\",\n    band_id: \"\",\n    order: \"\"\n  };\n\n  const [show, setShow] = useState(false);\n\n  const { band } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllBands());\n  }, []);\n\n  const [categoryFormData, setcategoryFormData] = useState(initialFormState);\n  const [image, setImage] = useState(\"\");\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const band_list =\n    band &&\n    band?.data?.map((band, key) => {\n      return (\n        <option value={band?.id} key={key}>\n          {band?.name}\n        </option>\n      );\n    });\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setcategoryFormData({\n      ...categoryFormData,\n      [name]: value,\n    });\n  };\n\n  const handleDeliveryChange = (event) => {\n    const selectedValue = event.target.value;\n    setcategoryFormData({\n      ...categoryFormData,\n      delivery_option: selectedValue,\n    });\n  };\n\n  const handleDiscountOption = (event) => {\n    const selectedValue = event.target.value;\n    setcategoryFormData({\n      ...categoryFormData,\n      discount_option: selectedValue,\n    });\n  };\n\n  const handleDiscountType = (event) => {\n    const selectedValue = event.target.value;\n    setcategoryFormData({\n      ...categoryFormData,\n      discount_type: selectedValue,\n    });\n  };\n\n  const handleBandChange = (event) => {\n    const selectedValue = event.target.value;\n    setcategoryFormData({\n      ...categoryFormData,\n      band_id: selectedValue,\n    });\n  };\n\n  const clearFormData = () => {\n    setcategoryFormData({\n      name: \"\",\n      tax: \"\",\n      delivery_option: \"\",\n      discount_option: \"\",\n      discount_type: \"\",\n      discount_value: \"\",\n      thumbnail: \"\",\n      band_id: \"\",\n      order: \"\"\n    });\n  };\n\n  const handleCreateCategory = (e) => {\n    e.preventDefault();\n    var formData = new FormData();\n    formData.append(\"name\", categoryFormData.name);\n    formData.append(\"tax\", categoryFormData.tax);\n    formData.append(\"delivery_option\", categoryFormData.delivery_option);\n    formData.append(\"discount_option\", categoryFormData.discount_option);\n    formData.append(\n      \"discount_type\",\n      categoryFormData.discount_type === \"1\" ? \"fixed\" : \"percentage\"\n    );\n    formData.append(\"discount_value\", categoryFormData.discount_value);\n    formData.append(\"thumbnail\", image);\n    formData.append(\"band_id\", categoryFormData.band_id);\n    formData.append(\"order\", categoryFormData.order);\n\n\n    setConfirmLoading(true);\n    dispatch(createCategory(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"category/create/fulfilled\") {\n          dispatch(getAllCategories());\n          handleClose();\n          clearFormData();\n          console.log(\"response act\", response);\n          notification.success({\n            message: \"Category created successfully\",\n          });\n        } else if (response.type === \"category/create/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notificatom\",\n          \"Error creating category, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create category</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create category</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateCategory}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter category name\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Tax </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"tax\"\n                placeholder=\"Tax\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Delivery option</Form.Label>\n              <Form.Select\n                name=\"delivery_option\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleDeliveryChange}\n                value={categoryFormData.delivery_option}\n              >\n                <option>Select delivery option</option>\n\n                <option value=\"1\">Yes</option>\n                <option value=\"0\">No</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Discount option</Form.Label>\n              <Form.Select\n                name=\"discount_option\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleDiscountOption}\n                value={categoryFormData.discount_option}\n              >\n                <option>Select discount option</option>\n\n                <option value=\"1\">Yes</option>\n                <option value=\"0\">No</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Discount type</Form.Label>\n              <Form.Select\n                name=\"discount_option\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleDiscountType}\n                value={categoryFormData.discount_type}\n              >\n                <option>Select discount option</option>\n\n                <option value=\"1\">Fixed</option>\n                <option value=\"0\">Percentage</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select band</Form.Label>\n              <Form.Select\n                name=\"band_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleBandChange}\n                value={categoryFormData.band_id}\n              >\n                <option>Select band</option>\n                {band_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label> Discount value </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"discount_value\"\n                placeholder=\"Discount value\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Order </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"order\"\n                placeholder=\"Order\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"thumbnail\"\n                onChange={(evnt) => onChangeImage(evnt)}\n              />\n            </Form.Group>\n\n            <Button\n              style={{ marginTop: \"10px\", background: '#ff0303', border: 'none' }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default CreateCategory;\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { useEffect } from 'react'\nimport { editCategory, getAllCategories } from '../../redux/categorySlice'\nimport { getAllBands } from \"../../redux/bandSlice\";\n\nimport { notification } from 'antd'\n\nconst initialFormState = {\n  name: \"\",\n  tax: \"\",\n  delivery_option: \"\",\n  discount_option: \"\",\n  discount_type: \"\",\n  discount_value: \"\",\n  thumbnail: \"\",\n  band_id: \"\",\n  order: \"\"\n}\n\nfunction UpdateCategory({ category }) {\n\n\n  const { band } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllBands());\n  }, []);\n\n  const [show, setShow] = useState(false)\n  const [categoryFormData, setcategoryFormData] = useState(initialFormState)\n  const [image, setImage] = useState(\"\");\n\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const band_list =\n    band &&\n    band?.data?.map((band, key) => {\n      return (\n        <option value={band?.id} key={key}>\n          {band?.name}\n        </option>\n      );\n    });\n\n    const handleInputChange = (event) => {\n      event.preventDefault();\n      const { name, value } = event.target;\n      setcategoryFormData({\n        ...categoryFormData,\n        [name]: value,\n      });\n    };\n  \n    const handleDeliveryChange = (event) => {\n      const selectedValue = event.target.value;\n      setcategoryFormData({\n        ...categoryFormData,\n        delivery_option: selectedValue,\n      });\n    };\n  \n    const handleDiscountOption = (event) => {\n      const selectedValue = event.target.value;\n      setcategoryFormData({\n        ...categoryFormData,\n        discount_option: selectedValue,\n      });\n    };\n  \n    const handleDiscountType = (event) => {\n      const selectedValue = event.target.value;\n      setcategoryFormData({\n        ...categoryFormData,\n        discount_type: selectedValue,\n      });\n    };\n  \n    const handleBandChange = (event) => {\n      const selectedValue = event.target.value;\n      setcategoryFormData({\n        ...categoryFormData,\n        band_id: selectedValue,\n      });\n    };\n\n  useEffect(() => {\n    setcategoryFormData({\n      name: category.name,\n      tax: category.tax,\n      delivery_option: category.delivery_option,\n      discount_option: category.discount_option,\n      discount_value: category.discount_value,\n      thumbnail: category.thumbnail,\n\n      band_id: category.band_id,\n      order: category.order\n\n    })\n  }, [category])\n\n  const clearFormData = () => {\n    setcategoryFormData({\n      name: \"\",\n      tax: \"\",\n      delivery_option: \"\",\n      discount_option: \"\",\n      discount_type: \"\",\n      discount_value: \"\",\n      thumbnail: \"\",\n      band_id: \"\",\n      order: \"\"\n    })\n  }\n\n  const handleEditCategory = (e) => {\n    e.preventDefault()\n    var formData = new FormData();\n    formData.append(\"name\", categoryFormData.name);\n    formData.append(\"tax\", categoryFormData.tax);\n    formData.append(\"delivery_option\", categoryFormData.delivery_option);\n    formData.append(\"discount_option\", categoryFormData.discount_option);\n    formData.append(\n      \"discount_type\",\n      categoryFormData.discount_type === \"1\" ? \"fixed\" : \"percentage\"\n    );\n    formData.append(\"discount_value\", categoryFormData.discount_value);\n    formData.append(\"thumbnail\", image);\n    formData.append(\"band_id\", categoryFormData.band_id);\n    formData.append(\"order\", categoryFormData.order);\n\n    formData.append(\"id\", category.id);\n\n\n    setConfirmLoading(true)\n    dispatch(editCategory(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'category/edit/fulfilled') {\n          dispatch(getAllCategories())\n          handleClose()\n          //   clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'Category updated successfully',\n          })\n        } else if (response.type === 'category/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n          console.log('error notification', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notification', 'Error updating category, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit Category</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form onSubmit={handleEditCategory}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter category name\"\n                defaultValue={categoryFormData.name}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Tax </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"tax\"\n                placeholder=\"Tax\"\n                defaultValue={categoryFormData.tax}\n\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Delivery option</Form.Label>\n              <Form.Select\n                name=\"delivery_option\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleDeliveryChange}\n                defaultValue={categoryFormData.delivery_option}\n                value={categoryFormData.delivery_option}\n              >\n                <option>Select delivery option</option>\n\n                <option value=\"1\">Yes</option>\n                <option value=\"0\">No</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Discount option</Form.Label>\n              <Form.Select\n                name=\"discount_option\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleDiscountOption}\n                defaultValue={categoryFormData.discount_option}\n\n                value={categoryFormData.discount_option}\n              >\n                <option>Select discount option</option>\n\n                <option value=\"1\">Yes</option>\n                <option value=\"0\">No</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Discount type</Form.Label>\n              <Form.Select\n                name=\"discount_option\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleDiscountType}\n                defaultValue={categoryFormData.discount_type}\n\n                value={categoryFormData.discount_type}\n              >\n                <option>Select discount option</option>\n\n                <option value=\"1\">Fixed</option>\n                <option value=\"0\">Percentage</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select band</Form.Label>\n              <Form.Select\n                name=\"band_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleBandChange}\n                value={categoryFormData.band_id}\n                defaultValue={categoryFormData.band_id}\n\n              >\n                <option>Select band</option>\n                {band_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label> Discount value </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"discount_value\"\n                placeholder=\"Discount value\"\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={categoryFormData.discount_value}\n\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Order </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"order\"\n                placeholder=\"Order\"\n                defaultValue={categoryFormData.order}\n\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"thumbnail\"\n                onChange={(evnt) => onChangeImage(evnt)}\n              />\n            </Form.Group>\n\n            <Button\n              style={{ marginTop: \"10px\", background: '#ff0303', border: 'none' }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateCategory\n","import { Avatar, Button, Table, Switch } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateCategory from './UpdateCategory'\nimport { useDispatch, useSelector } from 'react-redux'\nimport ExpirySession from \"../../utils/expirySession\";\n\n\n\nconst CategoryTable = ({ data, loading, hideShowCategory }) => {\n\n  const dispatch = useDispatch()\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const { admin } = ExpirySession.get(\"user\");\n\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps({\n        dataIndex: 'name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Delivery',\n      dataIndex: 'delivery_option',\n      key: 'delivery_option',\n      ...getColumnSearchProps({\n        dataIndex: 'delivery_option',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (delivery_option) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {delivery_option === 1 ? \"Yes\" : \"No\"}</span>\n      ),\n    },\n\n    {\n      title: 'Discount option',\n      dataIndex: 'discount_option',\n      key: 'discount_option',\n      ...getColumnSearchProps({\n        dataIndex: 'discount_option',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (discount_option) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {discount_option === 1 ? \"Yes\" : \"No\"}</span>\n      ),\n    },\n    {\n      title: 'Image',\n      key: 'id',\n      dataIndex: 'thumbnail',\n      align: 'center',\n      render: (thumbnail) => (\n        <Link to={`${thumbnail}`}>\n          {thumbnail ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={thumbnail}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n          {(admin?.level === 0 || admin?.level === 1) && (\n              <>\n           <Button style={{ marginRight: '5px' }} title='View category details'>\n              <Link to={`/categories/details/${singleData?.id}`}>{'View'}</Link>\n            </Button>\n\n            <Button style={{ marginRight: '5px' }} title='Edit category'>\n              <UpdateCategory category={singleData} />\n            </Button>\n       \n\n            <Switch style={{backgroundColor: '#ff0303', marginLeft: '10px'}}\n            \n              checked={singleData?.hidden === 0}\n              onChange={() => hideShowCategory(singleData?.id)}\n            />\n              </>\n\n            )}\n\n            {admin?.level === 3 && (\n              <Button style={{ marginRight: '5px' }} title='View category details'>\n              <Link to={`/categories/details/${singleData?.id}`}>{'View'}</Link>\n            </Button>\n            )}\n\n            {admin?.level === 2 && (\n             <Button style={{ marginRight: '5px' }} title='View category details'>\n             <Link to={`/categories/details/${singleData?.id}`}>{'View'}</Link>\n           </Button>\n            )}\n\n          \n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default CategoryTable\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  deleteCategory,\n  getAllCategories,\n  hideShowCategory,\n} from \"../../redux/categorySlice\";\nimport CreateCategory from \"./CreateCategory\";\nimport CategoryTable from \"./CategoryTable\";\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst Categories = () => {\n  const { categories } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAllCategories());\n  }, []);\n\n  const [isChecked, setIsChecked] = useState();\n\n  const handleDelete = ({ id }) => {\n    if (\n      !window.confirm(\n        \"Do You want to permanently delete the selected category?\"\n      )\n    ) {\n      return;\n    }\n\n    dispatch(deleteCategory(id))\n      .then((response) => {\n        if (response.type === \"category/delete/fulfilled\") {\n          dispatch(getAllCategories());\n          notification.success({\n            message: \" category deleted successfully\",\n          });\n        } else if (response.type === \"category/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting category, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting category, please try again later\",\n        });\n      });\n  };\n\n  const handleHideShowCategory = (id) => {\n    dispatch(hideShowCategory(id))\n      .then((response) => {\n        if (response.type === \"category/hideShowCategory/fulfilled\") {\n          setIsChecked(!isChecked);\n          dispatch(getAllCategories());\n          notification.success({\n            message: \" category updated successfully\",\n          });\n        } else if (response.type === \"category/hideShowCategory/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error updating category, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting category, please try again later\",\n        });\n      });\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  return (\n    <div>\n      {admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? (\n        <PageHeader\n          extra={[\n            <Button\n              key=\"Createcategory\"\n              style={{ color: \"#ff0303\", border: \"1px solid #ff0303\" }}\n            >\n              <CreateCategory />\n            </Button>,\n          ]}\n          title=\"Categories\"\n        />\n      ) : (\n        <PageHeader extra={[]} title=\"Categories\" />\n      )}\n\n      <CategoryTable\n        data={categories.data}\n        loading={categories.loading}\n        handleDelete={handleDelete}\n        hideShowCategory={handleHideShowCategory}\n      />\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport { createCompany, getAllCompanies } from '../../redux/companySlice'\nimport { notification } from 'antd'\n\nconst initialFormState = {\n  name: '',\n  website: '',\n  logo: '',\n  description: '',\n}\n\nfunction CreateCompany() {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [companyFormData, setcompanyFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setcompanyFormData({\n      ...companyFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setcompanyFormData({\n      name: '',\n      website: '',\n      logo: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleCreateCompany = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', companyFormData.name)\n    formData.append('website', companyFormData.website)\n    formData.append('logo', image)\n    formData.append('description', companyFormData.description)\n\n    setConfirmLoading(true)\n    dispatch(createCompany(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'company/create/fulfilled') {\n          dispatch(getAllCompanies())\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'Company created successfully',\n          })\n        } else if (response.type === 'company/create/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting company, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating company, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Create company</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create company</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateCompany}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='name'\n                placeholder='Enter company name'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Website</Form.Label>\n              <Form.Control\n                type='text'\n                name='website'\n                placeholder='Enter company website'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Logo (Optional)</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreateCompany\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { editCompany, getAllCompanies } from '../../redux/companySlice'\nimport { notification } from 'antd'\n\nconst initialFormState = {\n  name: '',\n  website: '',\n  logo: '',\n  description: '',\n}\n\nfunction UpdateCompany({ company }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [companyFormData, setcompanyFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setcompanyFormData({\n      ...companyFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setcompanyFormData({\n      name: company.name,\n      website: company.website,\n      logo: company.logo,\n      description: company.description,\n    })\n    console.log('company', company)\n  }, [company])\n\n  const clearFormData = () => {\n    setcompanyFormData({\n      name: '',\n      website: '',\n      logo: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleEditCompany = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', companyFormData.name)\n    formData.append('website', companyFormData.website)\n    formData.append('logo', image)\n    formData.append('description', companyFormData.description)\n    formData.append('company_id', company?.id)\n\n    setConfirmLoading(true)\n    dispatch(editCompany(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'company/edit/fulfilled') {\n          dispatch(getAllCompanies())\n          handleClose()\n          //   clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'Company updated successfully',\n          })\n        } else if (response.type === 'company/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating company, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit company</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditCompany}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='name'\n                placeholder='Enter company name'\n                defaultValue={companyFormData.name}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Website</Form.Label>\n              <Form.Control\n                type='text'\n                name='website'\n                placeholder='Enter company website'\n                defaultValue={companyFormData.website}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                defaultValue={companyFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Logo (Optional)</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n              <span>\n                <img src={company?.logo} alt='horse' style={{ with: '70px', height: '70px' }} />\n              </span>\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateCompany\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateCompany from './UpdateCompany'\n\nconst CompanyTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps({\n        dataIndex: 'name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Website',\n      dataIndex: 'website',\n      key: 'website',\n      ...getColumnSearchProps({\n        dataIndex: 'website',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      render: (description) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {description && description?.substring(0, 5)}{' '}\n          {description && description?.length >= 20 && '...'}\n        </span>\n      ),\n    },\n    {\n      title: 'Logo',\n      key: 'id',\n      dataIndex: 'logo',\n      align: 'center',\n      render: (logo) => (\n        <Link to={`${logo}`}>\n          {logo ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={logo}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Insurances',\n      dataIndex: 'insurances',\n      key: 'insurances',\n      render: (insurances) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {insurances && insurances?.length}</span>\n      ),\n    },\n    {\n      title: 'Craeted At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View product details'>\n              <Link to={`/company/details/${singleData?.id}/${singleData?.slug}`}>{'View'}</Link>\n            </Button>\n            <Button style={{ marginRight: '5px' }} title='Edit company'>\n              <UpdateCompany company={singleData} />\n            </Button>\n            <Button\n              danger\n              onClick={() => handleDelete(singleData)}\n              title='Permantly delete company'\n            >\n              delete\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data && data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default CompanyTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteCompany, getAllCompanies } from '../../redux/companySlice'\nimport CreateCompany from './CreateCompany'\nimport CompanyTable from './CompanyTable'\n\nconst Companies = () => {\n  const { companies } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllCompanies())\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected company?')) {\n      return\n    }\n\n    dispatch(deleteCompany(id))\n      .then((response) => {\n        if (response.type === 'company/delete/fulfilled') {\n          dispatch(getAllCompanies())\n          notification.success({\n            message: ' company deleted successfully',\n          })\n        } else if (response.type === 'company/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting company, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting company, please try again later',\n        })\n      })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='CreateCompany'>\n            <CreateCompany />,\n          </Button>,\n        ]}\n        title='Companies'\n      />\n      <CompanyTable data={companies.data} loading={companies.loading} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default Companies\n","import React, { useState, useEffect } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createInsurance, getAllInsurances } from '../../redux/InsuranceSlice'\nimport { notification } from 'antd'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nconst initialFormState = {\n  name: '',\n  banner: '',\n  description: '',\n  price: '',\n  category_id: '',\n  company_id: '',\n  terms_condition: '',\n  discount: '',\n  insurance_policy: 'price',\n  insurance_policy_percentage_value: '',\n}\n\nfunction CreateInsurance({ categories, companies }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [insuranceFormData, setinsuranceFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setinsuranceFormData({\n      ...insuranceFormData,\n      [name]: value,\n    })\n  }\n  useEffect(() => {}, [])\n  const clearFormData = () => {\n    setinsuranceFormData({\n      name: '',\n      banner: '',\n      description: '',\n      price: '',\n      category_id: '',\n      company_id: '',\n      terms_condition: '',\n      discount: '',\n      insurance_policy: '',\n      insurance_policy_percentage_value: '',\n    })\n    setImage('')\n  }\n\n  const handleCreateInsurance = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', insuranceFormData.name)\n    formData.append('banner', image)\n    formData.append('description', insuranceFormData.description)\n    formData.append('price', insuranceFormData.price)\n    formData.append('category_id', insuranceFormData.category_id)\n    formData.append('company_id', insuranceFormData.company_id)\n    formData.append('terms_condition', insuranceFormData.terms_condition)\n    formData.append('discount', insuranceFormData.discount)\n    formData.append('insurance_policy', insuranceFormData.insurance_policy)\n    formData.append(\n      'insurance_policy_percentage_value',\n      insuranceFormData.insurance_policy_percentage_value,\n    )\n\n    setConfirmLoading(true)\n    dispatch(createInsurance(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'insurance/create/fulfilled') {\n          dispatch(getAllInsurances())\n          handleClose()\n          clearFormData()\n          notification.success({\n            message: 'insurance created successfully',\n          })\n        } else if (response.type === 'insurance/create/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating insurance, please try again')\n      })\n  }\n\n  const category_list =\n    categories &&\n    categories.map((category, key) => {\n      return (\n        <option value={category.id} key={key}>\n          {category.name}\n        </option>\n      )\n    })\n\n  const company_list =\n    companies &&\n    companies.map((company, key) => {\n      return (\n        <option value={company.id} key={key}>\n          {company.name}\n        </option>\n      )\n    })\n\n  return (\n    <>\n      <span onClick={handleShow}>Create insurance</span>\n\n      <Modal show={show} onHide={handleClose} size='lg' backdrop='static'>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create insurance</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateInsurance}>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Category <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='category_id'\n                    onChange={(evt) => handleInputChange(evt)}\n                    aria-label='Default select example'\n                    required\n                  >\n                    <option value={''}>select category</option>\n                    {category_list}\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Company <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='company_id'\n                    onChange={(evt) => handleInputChange(evt)}\n                    aria-label='Default select example'\n                    required\n                  >\n                    <option>select category</option>\n                    {company_list}\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicEmail'>\n                  <Form.Label>\n                    Name<span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='text'\n                    name='name'\n                    placeholder='Enter insurance name'\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Banner<span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} required />\n                </Form.Group>\n                <Form.Control.Feedback type='invalid'>\n                  The banner field is required.\n                </Form.Control.Feedback>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Insurance policy\n                    <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='insurance_policy'\n                    onChange={(evt) => handleInputChange(evt)}\n                    aria-label='Default select example'\n                    required\n                  >\n                    <option value='price'>Price</option>\n                    <option value='percentage'>Percentage</option>\n                  </Form.Select>\n                  <Form.Control.Feedback type='invalid'>\n                    The insurance_policy field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n\n              <Col>\n                {insuranceFormData && insuranceFormData?.insurance_policy == 'price' ? (\n                  <Form.Group className='mb-3' controlId='formBasicPassword'>\n                    <Form.Label>\n                      price <span style={{ color: 'red' }}>*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type='number'\n                      name='price'\n                      onChange={(evt) => handleInputChange(evt)}\n                      placeholder='Enter Price'\n                      required={insuranceFormData.insurance_policy == 'price' ? true : false}\n                    />\n                    <Form.Control.Feedback type='invalid'>\n                      The price field is required.\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                ) : (\n                  <Form.Group className='mb-3' controlId='formBasicPassword'>\n                    <Form.Label>\n                      Percentage <span style={{ color: 'red' }}>*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type='text'\n                      name='insurance_policy_percentage_value'\n                      onChange={(evt) => handleInputChange(evt)}\n                      placeholder='Enter percentage value'\n                      required={insuranceFormData.insurance_policy == 'price' ? false : true}\n                    />\n                    <Form.Control.Feedback type='invalid'>\n                      The insurance_policy_percentage_value field is required.\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                )}\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>Discount</Form.Label>\n                  <Form.Control\n                    type='number'\n                    name='discount'\n                    onChange={(evt) => handleInputChange(evt)}\n                    placeholder='discount'\n                    disabled={insuranceFormData.insurance_policy == 'price' ? false : true}\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The discount field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                as='textarea'\n                style={{ height: '100px' }}\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Terms and Conditions </Form.Label>\n              <Form.Control\n                as='textarea'\n                style={{ height: '100px' }}\n                name='terms_condition'\n                placeholder='terms_condition'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreateInsurance\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { editInsurance, getAllInsurances } from '../../redux/InsuranceSlice'\nimport { notification } from 'antd'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nconst initialFormState = {\n  name: '',\n  banner: '',\n  description: '',\n  price: '',\n  category_id: '',\n  company_id: '',\n  terms_condition: '',\n  discount: '',\n  insurance_policy: '',\n  insurance_policy_percentage_value: '',\n}\n\nfunction UpdateInsurance({ insurance, categories, companies }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [insuranceFormData, setinsuranceFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setinsuranceFormData({\n      ...insuranceFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setinsuranceFormData({\n      name: insurance.name,\n      banner: insurance.banner,\n      description: insurance.description,\n      price: insurance.price,\n      category_id: insurance.category_id,\n      company_id: insurance.company_id,\n      terms_condition: insurance.terms_condition,\n      discount: insurance.discount,\n      insurance_policy: insurance.insurance_policy,\n      insurance_policy_percentage_value: insurance.insurance_policy_percentage_value,\n    })\n    // console.log('insurance', insurance)\n  }, [insurance])\n\n  const clearFormData = () => {\n    setinsuranceFormData({\n      name: '',\n      banner: '',\n      description: '',\n      price: '',\n      category_id: '',\n      company_id: '',\n      terms_condition: '',\n      discount: '',\n      insurance_policy: '',\n      insurance_policy_percentage_value: '',\n    })\n    setImage('')\n  }\n\n  const handleEditInsurance = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', insuranceFormData.name)\n    formData.append('banner', image)\n    formData.append('description', insuranceFormData.description)\n    formData.append('insurance_id', insurance?.id)\n    formData.append('price', insuranceFormData.price)\n    formData.append('category_id', insuranceFormData.category_id)\n    formData.append('company_id', insuranceFormData.company_id)\n    formData.append('terms_condition', insuranceFormData.terms_condition)\n    formData.append('discount', insuranceFormData.discount)\n    formData.append('insurance_policy', insuranceFormData.insurance_policy)\n    formData.append(\n      'insurance_policy_percentage_value',\n      insuranceFormData.insurance_policy_percentage_value,\n    )\n    setConfirmLoading(true)\n    dispatch(editInsurance(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'insurance/edit/fulfilled') {\n          dispatch(getAllInsurances())\n          handleClose()\n          //   clearFormData()\n          notification.success({\n            message: 'Insurance updated successfully',\n          })\n        } else if (response.type === 'insurance/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating insurance, please try again')\n      })\n  }\n  const category_list =\n    categories &&\n    categories.map((category, key) => {\n      return (\n        <option\n          value={category.id}\n          key={key}\n          selected={insurance?.category_id == category.id ? true : false}\n        >\n          {category.name}\n        </option>\n      )\n    })\n\n  const company_list =\n    companies &&\n    companies.map((company, key) => {\n      return (\n        <option\n          value={company.id}\n          key={key}\n          selected={insurance?.company_id == company.id ? true : false}\n        >\n          {company.name}\n        </option>\n      )\n    })\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose} size='lg' backdrop='static'>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit insurance</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditInsurance}>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Category <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='category_id'\n                    onChange={(evt) => handleInputChange(evt)}\n                    aria-label='Default select example'\n                    required\n                  >\n                    <option value={''}>select category</option>\n                    {category_list}\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Company <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='company_id'\n                    onChange={(evt) => handleInputChange(evt)}\n                    aria-label='Default select example'\n                    required\n                  >\n                    <option>select category</option>\n                    {company_list}\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicEmail'>\n                  <Form.Label>\n                    Name<span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='text'\n                    name='name'\n                    placeholder='Enter insurance name'\n                    onChange={(evt) => handleInputChange(evt)}\n                    defaultValue={insuranceFormData.name}\n                    required\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>banner</Form.Label>\n                  <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n                  <span>\n                    <img\n                      src={insurance?.banner}\n                      alt='horse'\n                      style={{ with: '20px', height: '20px' }}\n                    />\n                  </span>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Insurance policy <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n\n                  <Form.Select\n                    name='insurance_policy'\n                    onChange={(evt) => handleInputChange(evt)}\n                    defaultValue={insuranceFormData.insurance_policy}\n                    required\n                  >\n                    <option value='price'>Price</option>\n                    <option value='percentage'>Percentage</option>\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n              <Col>\n                {insuranceFormData && insuranceFormData?.insurance_policy == 'price' ? (\n                  <Form.Group className='mb-3' controlId='formBasicPassword'>\n                    <Form.Label>\n                      price <span style={{ color: 'red' }}>*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type='number'\n                      name='price'\n                      onChange={(evt) => handleInputChange(evt)}\n                      placeholder='Enter Price'\n                      value={insuranceFormData.price}\n                      required={insuranceFormData.insurance_policy == 'price' ? true : false}\n                    />\n                    <Form.Control.Feedback type='invalid'>\n                      The price field is required.\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                ) : (\n                  <Form.Group className='mb-3' controlId='formBasicPassword'>\n                    <Form.Label>\n                      Percentage\n                      <span style={{ color: 'red' }}>*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type='text'\n                      name='insurance_policy_percentage_value'\n                      onChange={(evt) => handleInputChange(evt)}\n                      placeholder='Enter percentage value'\n                      value={insuranceFormData.insurance_policy_percentage_value}\n                      required={insuranceFormData.insurance_policy == 'price' ? false : true}\n                    />\n                    <Form.Control.Feedback type='invalid'>\n                      The insurance_policy_percentage_value field is required.\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                )}\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Discount (zero to unset discount)<span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type='number'\n                    name='discount'\n                    onChange={(evt) => handleInputChange(evt)}\n                    placeholder='discount'\n                    defaultValue={insuranceFormData.discount}\n                    disabled={insuranceFormData.insurance_policy == 'price' ? false : true}\n                    required\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    The discount field is required.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                as='textarea'\n                style={{ height: '100px' }}\n                type='text'\n                name='description'\n                placeholder='description'\n                defaultValue={insuranceFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Terms and Conditions </Form.Label>\n              <Form.Control\n                as='textarea'\n                style={{ height: '100px' }}\n                name='terms_condition'\n                placeholder='terms_condition'\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={insuranceFormData.terms_condition}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateInsurance\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateInsurance from './UpdateInsurance'\nimport { NumericFormat } from 'react-number-format'\n\nconst InsuranceTable = ({ data, loading, handleDelete, categories, companies }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps({\n        dataIndex: 'name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Category',\n      dataIndex: 'category',\n      key: 'category',\n      render: (category) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {category && category?.name}</span>\n      ),\n    },\n\n    // {\n    //   title: 'Company',\n    //   dataIndex: 'company',\n    //   key: 'company',\n    //   render: (company) => (\n    //     <span style={{ whiteSpace: 'nowrap' }}> {company && company?.name}</span>\n    //   ),\n    // },\n    {\n      title: 'Policy',\n      dataIndex: 'insurance_policy',\n      key: 'insurance_policy',\n      ...getColumnSearchProps({\n        dataIndex: 'insurance_policy',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: '% value',\n      dataIndex: 'insurance_policy_percentage_value',\n      key: 'insurance_policy_percentage_value',\n      ...getColumnSearchProps({\n        dataIndex: 'insurance_policy_percentage_value',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      render: (price) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <NumericFormat value={price} displayType={'text'} thousandSeparator={true} prefix={'₦'} />\n        </span>\n      ),\n    },\n\n    {\n      title: 'Discount',\n      dataIndex: 'discount',\n      key: 'discount',\n      render: (discount) => <span style={{ whiteSpace: 'nowrap' }}> {discount}</span>,\n    },\n\n    {\n      title: 'Discounted price',\n      dataIndex: 'discounted_price',\n      key: 'discounted_price',\n      render: (discounted_price) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <NumericFormat\n            value={discounted_price}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          />\n        </span>\n      ),\n    },\n\n    {\n      title: 'Banner',\n      key: 'id',\n      dataIndex: 'banner',\n      align: 'center',\n      render: (banner) => (\n        <Link to={`${banner}`}>\n          {banner ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={banner}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n\n    // {\n    //   title: 'Lessons',\n    //   dataIndex: 'lessons',\n    //   key: 'lessons',\n    //   render: (lessons) => (\n    //     <span style={{ whiteSpace: 'nowrap' }}> {lessons && lessons?.length}</span>\n    //   ),\n    // },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View product details'>\n              <Link to={`/insurance/details/${singleData?.id}/${singleData?.slug}`}>{'View'}</Link>\n            </Button>\n            <Button style={{ marginRight: '5px' }} title='Edit insurance'>\n              <UpdateInsurance\n                insurance={singleData}\n                categories={categories}\n                companies={companies}\n              />\n            </Button>\n            <Button\n              danger\n              onClick={() => handleDelete(singleData)}\n              title='Permantly delete insurance'\n            >\n              delete\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default InsuranceTable\n","import React, { useEffect, useState } from 'react'\n\nimport { notification, Tabs } from 'antd'\nimport InsuranceTable from './InsuranceTable'\nimport { deleteInsurance, getAllInsurances } from '../../redux/InsuranceSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllCategories } from '../../redux/categorySlice'\nimport { getAllCompanies } from '../../redux/companySlice'\n\nconst { TabPane } = Tabs\n\nconst CategoryTabs = ({ insurances, motos, shops, travels, homes, discounted, popular }) => {\n  const { categories } = useSelector((state) => state)\n  const { companies } = useSelector((state) => state)\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(getAllCategories())\n    dispatch(getAllCompanies())\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected insurance?')) {\n      return\n    }\n\n    dispatch(deleteInsurance(id))\n      .then((response) => {\n        if (response.type === 'insurance/delete/fulfilled') {\n          dispatch(getAllInsurances())\n          notification.success({\n            message: ' insurance deleted successfully',\n          })\n        } else if (response.type === 'insurance/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting insurance, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting insurance, please try again later',\n        })\n      })\n  }\n\n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='All' key='1'>\n          <InsuranceTable\n            data={insurances}\n            loading={insurances.loading}\n            handleDelete={handleDelete}\n            categories={categories.data}\n            companies={companies.data}\n          />\n        </TabPane>\n\n        <TabPane tab='Motos' key='2'>\n          <InsuranceTable\n            data={motos}\n            loading={insurances.loading}\n            handleDelete={handleDelete}\n            categories={categories.data}\n            companies={companies.data}\n          />\n        </TabPane>\n\n        <TabPane tab='Shops' key='3'>\n          <InsuranceTable\n            data={shops}\n            loading={insurances.loading}\n            handleDelete={handleDelete}\n            categories={categories.data}\n            companies={companies.data}\n          />\n        </TabPane>\n\n        <TabPane tab='Travels' key='4'>\n          <InsuranceTable\n            data={travels}\n            loading={insurances.loading}\n            handleDelete={handleDelete}\n            categories={categories.data}\n            companies={companies.data}\n          />\n        </TabPane>\n\n        <TabPane tab='Homes' key='5'>\n          <InsuranceTable\n            data={homes}\n            loading={insurances.loading}\n            handleDelete={handleDelete}\n            categories={categories.data}\n            companies={companies.data}\n          />\n        </TabPane>\n\n        <TabPane tab='Discounted' key='6'>\n          <InsuranceTable\n            data={discounted}\n            loading={insurances.loading}\n            handleDelete={handleDelete}\n            categories={categories.data}\n            companies={companies.data}\n          />\n        </TabPane>\n        <TabPane tab='Popular (most purchased)' key='7'>\n          <InsuranceTable\n            data={popular}\n            loading={insurances.loading}\n            handleDelete={handleDelete}\n            categories={categories.data}\n            companies={companies.data}\n          />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default CategoryTabs\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteInsurance, getAllInsurances } from '../../redux/InsuranceSlice'\nimport CreateInsurance from './CreateInsurance'\nimport InsuranceTable from './InsuranceTable'\nimport { getAllCategories } from '../../redux/categorySlice'\nimport { getAllCompanies } from '../../redux/companySlice'\nimport CategoryTabs from './CategoryTabs'\nimport { InsuranceService } from '../../services/InsuranceService'\n\nconst Insurances = () => {\n  const { insurances } = useSelector((state) => state)\n  const { categories } = useSelector((state) => state)\n  const { companies } = useSelector((state) => state)\n\n  const dispatch = useDispatch()\n\n  const [motoInsurances, setMotoInsurances] = useState([])\n  const [travelInsurances, settravelInsurances] = useState([])\n  const [shopInsurances, setshopInsurances] = useState([])\n  const [homeInsurances, sethomeInsurances] = useState([])\n  const [discountedInsurances, setdiscountedInsurances] = useState([])\n  const [popularInsurances, setpopularInsurances] = useState([])\n\n  useEffect(() => {\n    dispatch(getAllInsurances())\n    dispatch(getAllCategories())\n    dispatch(getAllCompanies())\n    listMotoInsurances()\n    listTravelInsurances()\n    listShopInsurances()\n    listHomeInsurances()\n    listDiscountedInsurances()\n    listPopularInsurances()\n  }, [])\n\n  const listMotoInsurances = () => {\n    setMotoInsurances(\n      insurances?.data.filter((insurance) => insurance?.category?.name == 'Moto Insurance'),\n    )\n  }\n\n  const listTravelInsurances = () => {\n    settravelInsurances(\n      insurances?.data.filter((insurance) => insurance?.category?.name == 'Travel Insurance'),\n    )\n  }\n\n  const listShopInsurances = () => {\n    setshopInsurances(\n      insurances?.data.filter((insurance) => insurance?.category?.name == 'Shop Insurance'),\n    )\n  }\n\n  const listHomeInsurances = () => {\n    sethomeInsurances(\n      insurances?.data.filter((insurance) => insurance?.category?.name == 'Home Insurance'),\n    )\n  }\n\n  const listDiscountedInsurances = () => {\n    setdiscountedInsurances(\n      insurances?.data.filter((insurance) => insurance?.is_discounted == 'yes'),\n    )\n  }\n\n  const listPopularInsurances = () => {\n    InsuranceService.getPopularInsurance()\n      .then((res) => {\n        setpopularInsurances(res?.data)\n      })\n      .catch((err) => {\n        console.log('popular error', err)\n      })\n  }\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected insurance?')) {\n      return\n    }\n\n    dispatch(deleteInsurance(id))\n      .then((response) => {\n        if (response.type === 'insurance/delete/fulfilled') {\n          dispatch(getAllInsurances())\n          notification.success({\n            message: ' insurance deleted successfully',\n          })\n        } else if (response.type === 'insurance/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting insurance, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting insurance, please try again later',\n        })\n      })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='CreateInsurance'>\n            <CreateInsurance categories={categories.data} companies={companies.data} />,\n          </Button>,\n        ]}\n        title='Insurances'\n      />\n      <CategoryTabs\n        insurances={insurances.data}\n        motos={motoInsurances}\n        shops={shopInsurances}\n        travels={travelInsurances}\n        homes={homeInsurances}\n        discounted={discountedInsurances}\n        popular={popularInsurances}\n      />\n      \n      {/* <InsuranceTable\n        data={insurances.data}\n        loading={insurances.loading}\n        handleDelete={handleDelete}\n        categories={categories.data}\n        companies={companies.data}\n      /> */}\n    </div>\n  )\n}\n\nexport default Insurances\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { editLesson, getAllLessons } from '../../redux/lessonSlice'\nimport { notification } from 'antd'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nconst initialFormState = {\n  insurance_id: '',\n  title: '',\n  image: '',\n  description: '',\n}\n\nfunction UpdateLesson({ lesson, insurances }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [lessonFormData, setlessonFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setlessonFormData({\n      ...lessonFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setlessonFormData({\n      insurance_id: lesson.insurance_id,\n      title: lesson.title,\n      image: lesson.image,\n      description: lesson.description,\n    })\n  }, [lesson])\n\n  const clearFormData = () => {\n    setlessonFormData({\n      insurance_id: '',\n      title: '',\n      image: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleEditLesson = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('insurance_id', lessonFormData.insurance_id)\n    formData.append('title', lessonFormData.title)\n    formData.append('image', image)\n    formData.append('description', lessonFormData.description)\n    formData.append('lesson_id', lesson?.id)\n\n    setConfirmLoading(true)\n    dispatch(editLesson(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'lesson/edit/fulfilled') {\n          dispatch(getAllLessons())\n          handleClose()\n          //   clearFormData()\n          notification.success({ message: 'Lesson updated successfully' })\n        } else if (response.type === 'lesson/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating lesson, please try again')\n      })\n  }\n\n  const insurance_list =\n    insurances &&\n    insurances?.data?.map((insurance, key) => {\n      return (\n        <option\n          value={insurance.id}\n          key={key}\n          selected={insurance.id == lesson.insurance_id ? true : false}\n        >\n          {insurance.name}\n        </option>\n      )\n    })\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose} size='lg'>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit lesson</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditLesson}>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Insurance <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='insurance_id'\n                    onChange={(evt) => handleInputChange(evt)}\n                    aria-label='Default select example'\n                    required\n                  >\n                    <option value={''}>select insurance</option>\n                    {insurance_list}\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    image <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n                  <span>\n                    <img src={lesson?.image} alt='horse' style={{ with: '70px', height: '70px' }} />\n                  </span>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>\n                Title <span style={{ color: 'red' }}>*</span>\n              </Form.Label>\n              <Form.Control\n                type='text'\n                name='title'\n                placeholder='Enter lesson name'\n                defaultValue={lessonFormData.title}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>\n                Description <span style={{ color: 'red' }}>*</span>\n              </Form.Label>\n              <Form.Control\n                type='text'\n                as='textarea'\n                name='description'\n                placeholder='description'\n                defaultValue={lessonFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateLesson\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateLesson from './UpdateLesson'\n\nconst LessonTable = ({ data, loading, handleDelete, insurances }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      key: 'title',\n      render: (title) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {title && title?.substring(0, 20)} {title && title?.length >= 20 && '...'}\n        </span>\n      ),\n    },\n    {\n      title: 'Insurance',\n      dataIndex: 'insurance',\n      key: 'insurance',\n      render: (insurance) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {insurance && insurance?.name}</span>\n      ),\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      render: (description) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {description && description?.substring(0, 20)}{' '}\n          {description && description?.length >= 20 && '...'}\n        </span>\n      ),\n    },\n    {\n      title: 'Image',\n      key: 'id',\n      dataIndex: 'image',\n      align: 'center',\n      render: (image) => (\n        <Link to={`${image}`}>\n          {image ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={image}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Craeted At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View lesson'>\n              <Link to={`/lesson/details/${singleData?.id}/${singleData?.slug}`}>{'View'}</Link>\n            </Button>\n            <Button style={{ marginRight: '5px' }} title='Edit lesson'>\n              <UpdateLesson lesson={singleData} insurances={insurances} />\n            </Button>\n            <Button danger onClick={() => handleDelete(singleData)} title='Permantly delete lesson'>\n              delete\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default LessonTable\n","import { Avatar, Button, Card, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport { getOneUser } from '../../redux/userSlice'\nimport { Link } from 'react-router-dom'\nimport {\n  DashboardOutlined,\n  HomeOutlined,\n  LoadingOutlined,\n  StarOutlined,\n  CommentOutlined,\n  SyncOutlined,\n} from '@ant-design/icons'\n\nconst InsuranceRatings = ({ ratings }) => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.users)\n\n  useEffect(() => {\n    dispatch(getOneUser(id))\n    console.log('insure ratings', ratings)\n  }, [id])\n\n  const rating_list =\n    ratings &&\n    ratings.map((rating, key) => {\n      return (\n        <Card loading={loading} className='userInfo__card' key={key}>\n          <Meta\n            avatar={\n              <Avatar\n                size={100}\n                src={rating?.user?.profile_picture || 'https://joeschmoe.io/api/v1/random'}\n              />\n            }\n            title={\n              <Typography.Title level={2} className='text-3xl m-0 w-full'>\n                <Link to={`/user/details/${rating?.user?.id}/${rating?.user?.email}`}>\n                  {`${`${rating?.user?.first_name} ${rating?.user?.last_name}` || ''} ${\n                    rating?.user?.full_name || ''\n                  }`}\n                </Link>\n              </Typography.Title>\n            }\n            description={\n              <div className='metaDescription'>\n                <div className='flex align-middle items-center gap-3 flex-wrap'>\n                  <StarOutlined /> {rating?.star_rating_count || 'no phone'}\n                </div>\n\n                <div className='flex align-middle items-center gap-3 flex-wrap '>\n                  <CommentOutlined /> {rating?.comment || ''}\n                </div>\n              </div>\n            }\n          />\n        </Card>\n      )\n    })\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>{rating_list}</div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default InsuranceRatings\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n`\n","import React, { useEffect, useState } from 'react'\n\nimport { notification, Tabs } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllInsurances } from '../../redux/InsuranceSlice'\nimport LessonTable from '../Lesson/LessonTable'\nimport { deleteLesson, getAllLessons } from '../../redux/lessonSlice'\nimport InsuranceRatings from './InsuranceRatings'\n\nconst { TabPane } = Tabs\n\nconst InsuranceTabs = ({ lessons, ratings }) => {\n  const { insurances } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllInsurances())\n    console.log('insurance in lesson tabe', insurances)\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected lesson?')) {\n      return\n    }\n\n    dispatch(deleteLesson(id))\n      .then((response) => {\n        if (response.type === 'lesson/delete/fulfilled') {\n          dispatch(getAllLessons())\n          notification.success({\n            message: ' lesson deleted successfully',\n          })\n        } else if (response.type === 'lesson/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting lesson, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting lesson, please try again later',\n        })\n      })\n  }\n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Lessons' key='1'>\n          <LessonTable\n            data={lessons ? lessons : []}\n            loading={false}\n            handleDelete={handleDelete}\n            insurances={insurances}\n          />\n        </TabPane>\n        <TabPane tab='Ratings' key='2'>\n          <InsuranceRatings ratings={ratings} loading={false} />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default InsuranceTabs\n","import { Avatar, Button, Card, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport { getOneInsurance } from '../../redux/InsuranceSlice'\nimport moment from 'moment'\n\nimport { NumericFormat } from 'react-number-format'\nimport InsuranceTabs from './InsuranceTabs'\n\nconst InsuranceDetail = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.insurances)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getOneInsurance(id))\n  }, [id])\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card' title='Insurance Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${\n                  `${singleData?.name}` || ''\n                } `}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n                  {\n                    <Avatar\n                      size={100}\n                      src={singleData?.banner || 'https://joeschmoe.io/api/v1/random'}\n                    />\n                  }\n                  {singleData?.description && (\n                    <div className='flex align-middle items-center gap-3 flex-wrap'>\n                      <p>{singleData?.description || 'No description'}</p>\n                    </div>\n                  )}\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Policy:</strong> {singleData?.insurance_policy || 'N/A'}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Policy value (%):</strong>{' '}\n                    {singleData?.insurance_policy_percentage_value || 'N/A'}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Price:</strong>\n                    <NumericFormat\n                      value={singleData?.price}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'₦'}\n                    />\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Is-discounted:</strong> {singleData?.is_discounted || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Discount:</strong> {singleData?.discount || 'N/A'}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Discounted Price:</strong>\n                    <NumericFormat\n                      value={singleData?.discounted_price}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'₦'}\n                    />\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Category:</strong> {singleData?.category?.name || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <Link\n                      to={`/company/details/${singleData?.company?.id}/${singleData?.company?.slug}`}\n                    >\n                      <strong style={{ cursor: 'none' }}>Company:</strong>{' '}\n                      {singleData?.company?.name || ''}\n                    </Link>\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Star Ratings:</strong> {singleData?.rating_count || '0'}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Ratings counts:</strong> {singleData?.ratings?.length}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Lessons:</strong> {singleData?.lessons?.length}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Terms and Conditions:</strong> {singleData?.terms_condition || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n\n          <InsuranceTabs lessons={singleData?.lessons} ratings={singleData?.ratings} />\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default InsuranceDetail\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .insuranceprice {\n    margin-top: 5px;\n  }\n`\n","import { Avatar, Button, Card, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport { getOneUser } from '../../redux/userSlice'\nimport { Link } from 'react-router-dom'\n\nimport {\n  HomeOutlined,\n  LoadingOutlined,\n  StarOutlined,\n  CommentOutlined,\n  SyncOutlined,\n} from '@ant-design/icons'\n\nconst CompanyRatings = ({ ratings }) => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.users)\n\n  useEffect(() => {\n    dispatch(getOneUser(id))\n    console.log('insure ratings', ratings)\n  }, [id])\n\n  const rating_list =\n    ratings &&\n    ratings.map((rating, key) => {\n      return (\n        <Card loading={loading} className='userInfo__card' key={key}>\n          <Meta\n            avatar={\n              <Avatar\n                size={100}\n                src={rating?.user?.profile_picture || 'https://joeschmoe.io/api/v1/random'}\n              />\n            }\n            title={\n              <Typography.Title level={2} className='text-3xl m-0 w-full'>\n                <Link to={`/user/details/${rating?.user?.id}/${rating?.user?.email}`}>\n                  {'View'}\n                  {`${`${rating?.user?.first_name} ${rating?.user?.last_name}` || ''} ${\n                    rating?.user?.full_name || ''\n                  }`}\n                </Link>\n              </Typography.Title>\n            }\n            description={\n              <div className='metaDescription'>\n                <div className='flex align-middle items-center gap-3 flex-wrap'>\n                  <StarOutlined /> {rating?.star_rating_count || 'no phone'}\n                </div>\n\n                <div className='flex align-middle items-center gap-3 flex-wrap '>\n                  <CommentOutlined /> {rating?.comment || ''}\n                </div>\n              </div>\n            }\n          />\n        </Card>\n      )\n    })\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>{rating_list}</div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default CompanyRatings\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n`\n","import React, { useEffect, useState } from 'react'\n\nimport { notification, Tabs } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport InsuranceTable from '../Insurance/InsuranceTable'\nimport { deleteInsurance, getAllInsurances } from '../../redux/InsuranceSlice'\nimport { getAllCategories } from '../../redux/categorySlice'\nimport { getAllCompanies } from '../../redux/companySlice'\nimport CompanyRatings from './CompanyRatings'\n\nconst { TabPane } = Tabs\n\nconst CompanyTabs = ({ insurances, ratings }) => {\n  const { categories } = useSelector((state) => state)\n  const { companies } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllCategories())\n    dispatch(getAllCompanies())\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do You want to permanently delete the selected insurance?')) {\n      return\n    }\n\n    dispatch(deleteInsurance(id))\n      .then((response) => {\n        if (response.type === 'insurance/delete/fulfilled') {\n          dispatch(getAllInsurances())\n          notification.success({\n            message: ' insurance deleted successfully',\n          })\n        } else if (response.type === 'insurance/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting insurance, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting insurance, please try again later',\n        })\n      })\n  }\n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Insurances' key='1'>\n          <InsuranceTable\n            data={insurances ? insurances : []}\n            loading={false}\n            handleDelete={handleDelete}\n            categories={categories.data}\n            companies={companies.data}\n          />\n        </TabPane>\n        <TabPane tab='Ratings' key='2'>\n          <CompanyRatings ratings={ratings} />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default CompanyTabs\n","import { Avatar, Button, Card, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport { getOneCompany } from '../../redux/companySlice'\nimport CompanyTabs from './CompanyTabs'\n\nconst CompanyDetails = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.companies)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getOneCompany(id))\n    console.log('single company', singleData)\n  }, [id])\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card' title='Company Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${\n                  `${singleData?.name}` || ''\n                } `}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n                  {\n                    <Avatar\n                      size={100}\n                      src={singleData?.logo || 'https://joeschmoe.io/api/v1/random'}\n                    />\n                  }\n                  {singleData?.description && (\n                    <div className='flex align-middle items-center gap-3 flex-wrap'>\n                      <p>{singleData?.description || ''}</p>\n                    </div>\n                  )}\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Website:</strong>\n                    <a className='text-sm' href={`${singleData?.website}`} target='_blank'>\n                      {singleData?.website || 'no website'}\n                    </a>\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Insurances:</strong> {singleData?.insurances?.length || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n\n          <CompanyTabs\n            insurances={singleData && singleData?.insurances}\n            ratings={singleData?.ratings}\n          />\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default CompanyDetails\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createLesson, getAllLessons } from '../../redux/lessonSlice'\nimport { notification } from 'antd'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { data } from 'jquery'\n// import { getAllInsurances } from '../../redux/InsuranceSlice'\n\nconst initialFormState = {\n  insurance_id: '',\n  title: '',\n  image: '',\n  description: '',\n}\n\nfunction CreateLesson({ insurances }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [lessonFormData, setlessonFormData] = useState(initialFormState)\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  useEffect(() => {}, [])\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setlessonFormData({\n      ...lessonFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setlessonFormData({\n      insurance_id: '',\n      title: '',\n      image: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleCreateLesson = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('insurance_id', lessonFormData.insurance_id)\n    formData.append('title', lessonFormData.title)\n    formData.append('image', image)\n    formData.append('description', lessonFormData.description)\n\n    setConfirmLoading(true)\n    dispatch(createLesson(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'lesson/create/fulfilled') {\n          dispatch(getAllLessons())\n          handleClose()\n          clearFormData()\n          notification.success({\n            message: 'Lesson created successfully',\n          })\n        } else if (response.type === 'lesson/create/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error creating lesson, please try again')\n      })\n  }\n\n  const insurance_list =\n    insurances &&\n    insurances?.data?.map((insurance, key) => {\n      return (\n        <option value={insurance.id} key={key}>\n          {insurance.name}\n        </option>\n      )\n    })\n  return (\n    <>\n      <span onClick={handleShow}>Create lesson</span>\n\n      <Modal show={show} onHide={handleClose} size='lg'>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create lesson</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateLesson}>\n            <Row>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    Insurance <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Select\n                    name='insurance_id'\n                    onChange={(evt) => handleInputChange(evt)}\n                    aria-label='Default select example'\n                    required\n                  >\n                    <option value={''}>select insurance</option>\n                    {insurance_list}\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\n                  <Form.Label>\n                    image <span style={{ color: 'red' }}>*</span>\n                  </Form.Label>\n                  <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>\n                Title <span style={{ color: 'red' }}>*</span>\n              </Form.Label>\n              <Form.Control\n                type='text'\n                name='title'\n                placeholder='Enter lesson title'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>\n                Description <span style={{ color: 'red' }}>*</span>\n              </Form.Label>\n              <Form.Control\n                type='text'\n                as='textarea'\n                style={{ height: '200px' }}\n                name='description'\n                placeholder='description'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreateLesson\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteLesson, getAllLessons } from '../../redux/lessonSlice'\nimport CreateLesson from './CreateLesson'\nimport LessonTable from './LessonTable'\nimport { getAllInsurances } from '../../redux/InsuranceSlice'\n\nconst Lessons = () => {\n  const { lessons } = useSelector((state) => state)\n  const { insurances } = useSelector((state) => state)\n\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllLessons())\n    dispatch(getAllInsurances())\n  }, [])\n\n  const handleDelete = ({ id }) => {\n    if (!window.confirm('Do you want to permanently delete the selected lesson?')) {\n      return\n    }\n\n    dispatch(deleteLesson(id))\n      .then((response) => {\n        if (response.type === 'lesson/delete/fulfilled') {\n          dispatch(getAllLessons())\n          notification.success({\n            message: ' lesson deleted successfully',\n          })\n        } else if (response.type === 'lesson/delete/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error deleting lesson, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error deleting lesson, please try again later',\n        })\n      })\n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key='Createlesson'>\n            <CreateLesson insurances={insurances} />,\n          </Button>,\n        ]}\n        title='Lessons'\n      />\n      <LessonTable\n        data={lessons.data}\n        loading={lessons.loading}\n        handleDelete={handleDelete}\n        insurances={insurances}\n      />\n    </div>\n  )\n}\n\nexport default Lessons\n","import { Avatar, Button, Card, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport { getOneLesson } from '../../redux/lessonSlice'\n\nconst LessonDetails = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.lessons)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getOneLesson(id))\n  }, [id])\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card' title='Lesson Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${\n                  `${singleData?.title}` || ''\n                } `}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n                  {\n                    <Avatar\n                      size={100}\n                      src={singleData?.image || 'https://joeschmoe.io/api/v1/random'}\n                    />\n                  }\n                  <div className='flex align-middle items-center gap-4 flex-wrap lesson-detail'>\n                    <strong>Insurance:</strong>\n                    <Link\n                      to={`/insurance/details/${singleData?.insurance?.id}/${singleData?.insurance?.slug}`}\n                    >\n                      {singleData?.insurance?.name || ''}\n                    </Link>\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap lesson-detail'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                  {singleData?.description && (\n                    <div className='flex align-middle items-center gap-3 flex-wrap'>\n                      <p>{singleData?.description || 'No description'}</p>\n                    </div>\n                  )}\n                </div>\n              }\n            />\n          </Card>\n\n          {/* <CompanyTabs insurances={singleData && singleData?.insurances} /> */}\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default LessonDetails\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .lesson-detail {\n    margin-top: 8px;\n  }\n`\n","/* eslint-disable */\nimport React from 'react'\n\nclass Commons {\n  getClaimStatus = (status) => {\n    switch (status) {\n      case 'Paid':\n        return <span className='text-success status'> {status}</span>\n        break\n      case 'Pending':\n        return <span className='text-secondary status'> {status}</span>\n        break\n      case 'Approved':\n        return <span className='text-primary status'> {status}</span>\n        break\n\n      case 'Declined':\n        return <span className='text-danger status'> {status}</span>\n        break\n      default:\n        break\n    }\n  }\n}\nexport default new Commons()\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport Commons from '../../utils/Commons'\n\nconst ClaimTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Category',\n      dataIndex: 'category',\n      key: 'category',\n      render: (category) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {category && category?.name}</span>\n      ),\n    },\n    {\n      title: 'Policy number',\n      dataIndex: 'policy_number',\n      key: 'policy_number',\n      ...getColumnSearchProps({\n        dataIndex: 'policy_number',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {Commons.getClaimStatus(status)}</span>\n      ),\n    },\n\n    {\n      title: 'Incident Date',\n      dataIndex: 'incident_date',\n      key: 'incident_date',\n      ...getColumnSearchProps({\n        dataIndex: 'incident_date',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'User',\n      dataIndex: 'user',\n      key: 'user',\n      render: (user) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {user && user?.first_name} {user && user?.last_name}\n        </span>\n      ),\n    },\n\n    {\n      title: 'Company',\n      dataIndex: 'company',\n      key: 'company',\n      render: (company) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {company && company?.name}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View claim details'>\n              <Link to={`/claim/details/${singleData?.id}/${singleData?.policy_number}`}>\n                {'View'}\n              </Link>\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default ClaimTable\n","import React, { useEffect, useState } from 'react'\n\nimport { notification, Tabs } from 'antd'\nimport ClaimTable from './ClaimTable'\n\nconst { TabPane } = Tabs\n\nconst StatusTabs = ({ claims, paidClaims, pendingClaims, declinedClaims }) => {\n  useEffect(() => {}, [])\n\n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='All' key='1'>\n          <ClaimTable data={claims} loading={claims.loading} />\n        </TabPane>\n\n        <TabPane tab='Paid' key='2'>\n          <ClaimTable data={paidClaims} loading={claims.loading} />\n        </TabPane>\n\n        <TabPane tab='Pending' key='3'>\n          <ClaimTable data={pendingClaims} loading={claims.loading} />\n        </TabPane>\n\n        <TabPane tab='Declined' key='4'>\n          <ClaimTable data={declinedClaims} loading={claims.loading} />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default StatusTabs\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { getAllClaims, getPaidClaims } from '../../redux/claimSlice'\nimport StatusTabs from './StatusTabs'\n\nconst Claims = () => {\n  const { claims } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [paidclaims, setPaidclaims] = useState([])\n  const [pendingclaims, setpendingclaims] = useState([])\n  const [declinedclaims, setdeclinedclaims] = useState([])\n\n  useEffect(() => {\n    dispatch(getAllClaims())\n    listPaidClaims()\n    listPendingClaims()\n    listDeclinedClaims()\n  }, [])\n\n  const listPaidClaims = () => {\n    setPaidclaims(claims?.data.filter((claim) => claim.status == 'Paid'))\n  }\n\n  const listPendingClaims = () => {\n    setpendingclaims(claims?.data.filter((claim) => claim.status == 'Pending'))\n  }\n\n  const listDeclinedClaims = () => {\n    setdeclinedclaims(claims?.data.filter((claim) => claim.status == 'Declined'))\n  }\n\n  return (\n    <div>\n      <PageHeader extra={[]} title='Claims' />\n      <StatusTabs\n        claims={claims.data}\n        paidClaims={paidclaims}\n        pendingClaims={pendingclaims}\n        declinedClaims={declinedclaims}\n      />\n    </div>\n  )\n}\n\nexport default Claims\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport moment from 'moment'\nexport default function Proofs({ images }) {\n  const proof_list =\n    images &&\n    images.map((proof, key) => {\n      return (\n        <Card key={key}>\n          <Card.Img variant='top' src={proof.image} width='500' height='500' />\n\n          <Card.Footer>\n            <small className='text-muted'>\n              Created at:\n              {moment(proof.created_at).format('DD MMM YYYY') || ''}\n            </small>\n          </Card.Footer>\n        </Card>\n      )\n    })\n  return <CardGroup>{proof_list}</CardGroup>\n}\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { useEffect } from 'react'\nimport { getAllClaims, getOneClaim, updateClaimStatus } from '../../redux/claimSlice'\nimport { notification } from 'antd'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\n\nconst initialFormState = {\n  status: '',\n  claim_id: '',\n}\n\nfunction UpdateClaimStatus({ claim, handleUpdateClaimStatus, handleInputChange }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [claimFormData, setclaimFormData] = useState(initialFormState)\n  const { id } = useParams()\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    setclaimFormData({\n      status: claim.status,\n      claim_id: claim.id,\n    })\n    console.log('claim', claim)\n  }, [claim])\n\n  return (\n    <>\n      <Form onSubmit={handleUpdateClaimStatus}>\n        <Form.Group className='mb-3' controlId='formBasicEmail'>\n          <Form.Label>Status</Form.Label>\n          <Form.Select\n            name='status'\n            onChange={(evt) => handleInputChange(evt)}\n            aria-label='Default select example'\n            required\n          >\n            <option value=''>Select status</option>\n            <option value='Paid'>Paid</option>\n            <option value='Pending'>Pending</option>\n            <option value='Declined'>Declined</option>\n            {/* <option value='Approved'>Approved</option> */}\n          </Form.Select>\n        </Form.Group>\n\n        <Form.Group className='mb-3' controlId='formBasicPassword'>\n          <Form.Control\n            type='hidden'\n            name='claim_id'\n            placeholder='claim_id'\n            defaultValue={claimFormData.claim_id}\n            onChange={(evt) => handleInputChange(evt)}\n          />\n        </Form.Group>\n\n        <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n          {confirmLoading ? 'Please wait...' : 'Submit'}\n        </Button>\n      </Form>\n    </>\n  )\n}\n\nexport default UpdateClaimStatus\n","import React, { useEffect, useState } from 'react'\n\nimport { notification, Tabs } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Proofs from './Proofs'\nimport UpdateClaimStatus from './UpdateClaimStatus'\n\nconst { TabPane } = Tabs\n\nconst ClaimTabs = ({ images, claim, handleUpdateClaimStatus, handleInputChange }) => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {}, [])\n\n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Proofs' key='1'>\n          <Proofs images={images ? images : []} loading={false} />\n        </TabPane>\n\n        <TabPane tab='Update Status' key='2'>\n          <UpdateClaimStatus\n            claim={claim}\n            handleUpdateClaimStatus={handleUpdateClaimStatus}\n            handleInputChange={handleInputChange}\n          />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default ClaimTabs\n","import React, { useState, useEffect } from 'react'\nimport { Avatar, Button, Card, notification, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport { getOneClaim, updateClaimStatus } from '../../redux/claimSlice'\nimport ClaimTabs from './ClaimTabs'\nimport Commons from '../../utils/Commons'\n\nconst initialFormState = {\n  status: '',\n  claim_id: '',\n}\nconst ClaimDetails = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.claims)\n  const dispatch = useDispatch()\n  const [claimFormData, setclaimFormData] = useState(initialFormState)\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setclaimFormData({\n      ...claimFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    dispatch(getOneClaim(id))\n  }, [id])\n\n  const handleUpdateClaimStatus = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('status', claimFormData.status)\n    formData.append('claim_id', singleData?.id)\n\n    setConfirmLoading(true)\n    dispatch(updateClaimStatus(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'claim/edit/fulfilled') {\n          dispatch(getOneClaim(id))\n\n          console.log('response act', response)\n          notification.success({\n            message: 'Claim status updated successfully',\n          })\n        } else if (response.type === 'claim/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating claim, please try again')\n      })\n  }\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card' title='Claim Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              description={\n                <div className='metaDescription'>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Status:</strong>\n                    {Commons.getClaimStatus(singleData?.status)}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Policy Number:</strong> {singleData?.policy_number || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Incident date:</strong>{' '}\n                    {moment(singleData.incident_date).format('DD MMM YYYY') || ''}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Category:</strong> {singleData?.category?.name || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <Link\n                      to={`/company/details/${singleData?.company?.id}/${singleData?.company?.slug}`}\n                    >\n                      <strong style={{ cursor: 'none' }}>Company:</strong>{' '}\n                      {singleData?.company?.name || ''}\n                    </Link>\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <Link\n                      to={`/user/details/${singleData?.user?.id}/${singleData?.user?.first_name}`}\n                    >\n                      <strong style={{ cursor: 'none' }}>User:</strong>{' '}\n                      {singleData?.user?.first_name || ''} {singleData?.user?.last_name || ''}\n                    </Link>\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Incident Description:</strong> {singleData?.incident_description || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n\n          <ClaimTabs\n            images={singleData?.claim_image}\n            claim={singleData}\n            handleUpdateClaimStatus={handleUpdateClaimStatus}\n            handleInputChange={handleInputChange}\n          />\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default ClaimDetails\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .insuranceprice {\n    margin-top: 5px;\n  }\n  .status {\n    font-size: 15px;\n  }\n`\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst UserTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps({\n        dataIndex: 'first_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n   \n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      ...getColumnSearchProps({\n        dataIndex: 'email',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Phone number',\n      dataIndex: 'phone_number',\n      key: 'phone_number',\n      ...getColumnSearchProps({\n        dataIndex: 'phone_number',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Profile picture',\n      key: 'id',\n      dataIndex: 'profile_picture',\n      align: 'center',\n      render: (profile_picture) => (\n        <Link to={`${profile_picture}`}>\n          {profile_picture ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={profile_picture}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n      render: (orders) => <span style={{ whiteSpace: 'nowrap' }}> {orders?.length}</span>,\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View user details'>\n              <Link to={`/user/details/${singleData?.id}/${singleData?.email}`}>{'View'}</Link>\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default UserTable\n","import React from 'react'\n\nconst DownloadCSVButton = ({\n  data,\n  keys,\n  dateSliceLength,\n  orderKey,\n  amountKey,\n  priceKey,\n  discountKey,\n  userKey,\n  categoryKey,\n  companyKey,\n  filename,\n  insuranceKey\n}) => {\n  const getPropertyValueLength = (obj, key) => {\n    const value = obj[key]\n    if (Array.isArray(value)) {\n      if (value.length > 0 && typeof value[0] === 'object') {\n        return JSON.stringify(value.length) // Convert the array of objects to a string representing its length\n      }\n    }\n    return value ? value.length : 0\n  }\n\n  const sliceDate = (date) => {\n    return date.slice(0, dateSliceLength)\n  }\n\n  const formatAmount = (amount) => {\n    return `₦${amount}` // Add the Naira sign (₦) to the amount\n  }\n\n  const getUserName = (user) => {\n    return user ? user.first_name : ''\n  }\n\n  const getCategory = (category) => {\n    return category ? category.name : ''\n  }\n\n  const getCompany = (company) => {\n    return company ? company.name : ''\n  }\n\n  const convertToCSV = (array, selectedKeys) => {\n    const header = selectedKeys.join(',') + ',' + '\\n'\n    const rows = array.map((obj) => {\n      const values = selectedKeys.map((key) => {\n        if (key === 'created_at') {\n          return sliceDate(obj[key]) // Slice the \"created_at\" property to 10 characters\n        } else if (key === orderKey || key === insuranceKey) {\n          return getPropertyValueLength(obj, orderKey || insuranceKey) // Retrieve the length of the \"order\" array\n        } else if (key === amountKey || key === priceKey || key === discountKey) {\n          return formatAmount(obj[key]) // Format the \"amount\" with the Naira sign\n        } else if (key === userKey) {\n          return getUserName(obj[key]) // Get the \"name\" from the \"user\" object\n        } else if (key === categoryKey) {\n          return getCategory(obj[key]) // Get the \"name\" from the \"category\" object\n        } else if (key === companyKey) {\n          return getCompany(obj[key]) // Get the \"name\" from the \"company\" object\n        } else {\n          return obj[key]\n        }\n      })\n      return values.join(',') + ',' + '\\n'\n    })\n    return header + rows.join('')\n  }\n\n  const downloadCSV = () => {\n    const csv = convertToCSV(data, keys)\n    const blob = new Blob([csv], { type: 'text/csv' })\n    const url = window.URL.createObjectURL(blob)\n\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', filename + '.csv')\n    document.body.appendChild(link)\n\n    link.click()\n\n    // Clean up the temporary anchor element and the URL created\n    document.body.removeChild(link)\n    window.URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div>\n      <button style={{color: '#ff0303', backgroundColor:'#fff', border: '1px solid #ff0303'}}onClick={downloadCSV}>\n        Download CSV\n      </button>\n    </div>\n  )\n}\n\nexport default DownloadCSVButton\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getAllUsers } from \"../../redux/userSlice\";\nimport UserTable from \"./UserTable\";\nimport DownloadCSVButton from '../../components/DownloadCSVButton'\n\n\nconst ListUsers = () => {\n  const { users } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, []);\n\n  console.log(\"users\", users);\n\n  const keysToExport = ['name', 'email', 'phone_number', 'created_at'];\n  const dateSliceLength = 10; \n\n  return (\n    <div>\n      <PageHeader extra={[<DownloadCSVButton data={users?.data?.users} keys={keysToExport} dateSliceLength={dateSliceLength} filename=\"users_data\" />]}title=\"Users\" />\n      {users?.data?.users && (\n        <UserTable data={users?.data?.users} loading={users?.loading} />\n      )}{\" \"}\n    </div>\n  );\n};\n\nexport default ListUsers;\n","import moment from 'moment'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { RowDetails } from '../../components/RowDetails'\n\nconst UserInfo = ({ singleData }) => {\n  return (\n    <StyledContainer>\n      <div className='flex flex-col gap-10'>\n        <RowDetails label='Name' value={singleData?.name || 'Null'} />\n        <RowDetails label='Email' value={singleData?.email || 'Null'} />\n        <RowDetails label='Phone Number' value={singleData?.phone_number || 'Null'} />\n        <RowDetails label='Status' value={singleData?.verified === 1 ? 'Verified': 'Unverified'} />\n        <RowDetails label='Loyalty points' value={singleData?.loyalty_points || 'Null'} />\n        <RowDetails label='Wallet' value={`₦ ${singleData?.wallet}`}/>\n        <RowDetails\n          label='Email verified on'\n          value={moment(singleData?.email_verified_at).format('DD MMM YYYY')}\n        />\n\n        <RowDetails\n          label='Date Created'\n          value={moment(singleData?.created_at).format('DD MMM YYYY')}\n        />\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default UserInfo\n\nconst StyledContainer = styled.div`\n  .content {\n  }\n  .divider {\n    width: 100%;\n    border-color: white;\n    opacity: 0.08;\n  }\n`\n","import React from 'react'\nimport { Tabs } from 'antd'\nimport { useSelector } from 'react-redux'\nimport UserInfo from './UserInfo'\nimport OrderTable from '../Orders/OrderTable'\n\nconst { TabPane } = Tabs\n\nconst UserInfoTabs = ({ user, orders }) => {\n\n  \n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='User Info' key='1'>\n          <UserInfo singleData={user} />\n        </TabPane>\n        <TabPane tab='Orders' key='2'>\n          <OrderTable data={orders} />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default UserInfoTabs\n","import { Avatar, Button, Card, Typography } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport { getOneUser } from \"../../redux/userSlice\";\nimport UserInfoTabs from \"./UserInfoTabs\";\n\nconst UserDetails = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(getOneUser(id));\n  }, [id]);\n\n  console.log(singleData?.user);\n\n  return (\n    <>\n      {singleData && (\n        <StyledContainer>\n          <div>\n            <div className=\"userInfo\">\n              <Card loading={loading} className=\"userInfo__card\" title=\"User\">\n                <div\n                  className={` flex, justify-end`}\n                  onClick={() => navigate(-1)}\n                >\n                  <div to=\"#\" className=\"userInfo__back\">\n                    <Button style={{color: '#ff0303'}}\n                      icon={<BsArrowLeft />}\n                      type=\"link\"\n                      className=\"hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300\"\n                    >\n                      Back\n                    </Button>\n                  </div>\n                </div>\n                <Meta\n                  avatar={\n                    <Avatar\n                      size={100}\n                      src={\n                        singleData?.user?.profile_picture ||\n                        \"https://joeschmoe.io/api/v1/random\"\n                      }\n                    />\n                  }\n                  title={\n                    <Typography.Title\n                      level={2}\n                      className=\"text-3xl m-0 w-full\"\n                    >{`${`${singleData?.user?.name}` || \"\"} `}</Typography.Title>\n                  }\n                  description={\n                    <div className=\"metaDescription\" >\n                      {singleData?.user?.phone_number && (\n                        <div className=\"flex align-middle items-center gap-3 flex-wrap\">\n                          <a style={{color: '#ff0303'}}\n                            className=\"text-sm\"\n                            href={`tel:${singleData?.user?.phone_number}`}\n                          >\n                            <BsPhone size={15} />{\" \"}\n                            {singleData?.user?.phone_number || \"no phone\"}\n                          </a>\n                        </div>\n                      )}\n                      <div className=\"flex align-middle items-center gap-3 flex-wrap \"> \n                        <a  style={{color: '#ff0303'}}\n                          href={`mailto:${singleData?.user?.email}`}\n                          className=\"text-sm\"\n                        >\n                          <BsEnvelope size={15} />{\" \"}\n                          {singleData?.user?.email || \"\"}\n                        </a>\n                      </div>\n                    </div>\n                  }\n                />\n              </Card>\n              <UserInfoTabs\n                user={singleData?.user}\n                orders={singleData?.user?.orders}\n              />\n            </div>\n          </div>\n        </StyledContainer>\n      )}\n    </>\n  );\n};\n\nexport default UserDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getAllOrders, deleteOrder } from \"../../redux/orderSlice\";\nimport OrderTable from \"./OrderTable\";\n\nconst ListOrders = () => {\n  const { orders } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllOrders());\n  }, []);\n\n  const handleDeleteOrder = ({ id }) => {\n\n    if (\n      !window.confirm(\"Do You want to permanently delete the selected order?\")\n    ) {\n      return;\n    }\n\n    dispatch(deleteOrder(id))\n      .then((response) => {\n        if (response.type === \"order/delete/fulfilled\") {\n          dispatch(getAllOrders());\n          notification.success({\n            message: \" order deleted successfully\",\n          });\n        } else if (response.type === \"order/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting order, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting service category, please try again later\",\n        });\n      });\n  };\n  \n\n  return (\n    <div>\n      <PageHeader extra={[]} title=\"Orders\" />\n      {orders?.data && (\n        <OrderTable data={orders?.data?.orders} loading={orders.loading} handleDelete={handleDeleteOrder} />\n      )}\n    </div>\n  );\n};\n\nexport default ListOrders;\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst ProductTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n  \n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps({\n        dataIndex: 'name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Available',\n      dataIndex: 'availability',\n      key: 'availability',\n      ...getColumnSearchProps({\n        dataIndex: 'availability',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n\n      render: (availability) => availability === 1 ? 'Yes' : 'No',\n    },\n    {\n      title: 'Measurement Unit',\n      dataIndex: 'unit_of_measurement',\n      key: 'unit_of_measurement',\n      ...getColumnSearchProps({\n        dataIndex: 'unit_of_measurement',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      render: (price) => `₦${Number(price).toLocaleString()}` || 'Null',\n    },\n\n    {\n      title: 'Image',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <Link to={`${singleData?.id}`}>\n          {singleData?.thumbnail_url ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={singleData?.thumbnail_url}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n \n\n    {\n      title: 'Date Created',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Date Updated',\n      dataIndex: 'updated_at',\n      key: 'updated_at',\n      render: (updated_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(updated_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n    \n    // {\n    //   title: 'Actions',\n    //   key: 'id',\n    //   align: 'center',\n    //   render: (singleData) => (\n    //     <>\n    //       <Button style={{ marginRight: '5px' }} title='View product details'>\n    //         <Link to={`/product/details/${singleData?.id}/${singleData?.sku}`}>{'View'}</Link>\n    //       </Button>\n    //       <Button style={{ marginRight: '5px' }} title='Edit product'>\n    //         <Link to={`/product/edit/${singleData?.id}/${singleData?.sku}`}>Edit</Link>\n    //       </Button>\n    //       <Button\n    //         danger\n    //         onClick={() => handleDelete(singleData)}\n    //         title='Temporarily delete product'\n    //       >\n    //         delete\n    //       </Button>\n    //     </>\n    //   ),\n    // },\n  ]\n\n  return (\n    <div>\n     <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      /> \n    </div>\n  )\n}\n\nexport default ProductTable\n","import React from 'react'\nimport { Tabs } from 'antd'\nimport ItemTable from './ItemTable'\n\nconst { TabPane } = Tabs\n\nconst OrderInfoTabs = ({items}) => {\n\n  return (\n    <div>\n      <Tabs defaultActiveKey='1' style={{color: '#ff0303'}}>\n        <TabPane tab='Products' key='1' >\n          <ItemTable data={items} />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default OrderInfoTabs\n","import { Avatar, Button, Card, Typography } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Form from \"react-bootstrap/Form\";\nimport { NumericFormat } from \"react-number-format\";\nimport { getOneOrder } from \"../../redux/orderSlice\";\nimport OrderInfoTabs from \"./OrderInfoTabs\";\nimport { notification } from \"antd\";\nimport {\n  updateStatus,\n} from \"../../redux/orderSlice\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\nconst OrderDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.orders);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOneOrder(id));\n  }, [id]);\n\n\n  const [statusData, setStatusData] = useState({\n    status: singleData?.order?.status || \"pending\",\n  });\n  \n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setStatusData({\n      ...statusData,\n      [name]: value,\n    });\n  };\n\n\n  const handleStatus = (e) => {\n    e.preventDefault();\n    const data = {\n      status: statusData?.status,\n      order_id: id,\n    };\n\n    dispatch(updateStatus(data))\n      .then((response) => {\n        console.log(response)\n        if (response.type === \"order/updateStatus/fulfilled\") {\n          notification.success({\n            message: \"order status updated successfully\",\n          });\n          dispatch(getOneOrder(id));\n        } else if (response.type === \"order/updateStatus/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n          console.log(\"error notification\", response?.payload?.message);\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Failed to update status\",\n        });\n      });\n  };\n\n  useEffect(() => {\n    if (singleData?.order) {\n      setStatusData({\n        status: singleData.order.status || \"pending\",\n      });\n    }\n  }, [singleData?.order?.id]);\n\n  \n\n  return (\n    <StyledContainer>\n     {singleData?.order && ( <div>\n        <div className=\"userInfo\">\n          <Card\n            loading={loading}\n            className=\"userInfo__card\"\n            title=\"Order Details\"\n          >\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to=\"#\" className=\"userInfo__back\">\n                <Button\n                  style={{ color: \"#FF0303\" }}\n                  icon={<BsArrowLeft />}\n                  type=\"link\"\n                  className=\"hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300\"\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n\n            <Meta\n              title={\n                <Typography.Title level={2} className=\"text-3xl m-0 w-full\">{`${\n                  `${singleData?.order?.order_id}` || \"\"\n                } `}</Typography.Title>\n              }\n              description={\n                <div className=\"metaDescription\">\n                   <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Price: </strong>\n                    <NumericFormat\n                      value={singleData?.order?.price}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix={\"₦\"}\n                    />\n                  </div>\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Delivery info:</strong>{\" \"}\n                    {singleData?.order?.delivery_info || \"\"}\n                  </div>\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Delivery time slot:</strong>{\" \"}\n                    {singleData?.order?.delivery_time_slot || null}\n                  </div>\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Order status:</strong>{\" \"}\n                    {singleData?.order?.status || \"N/A\"}\n                  </div>\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Payment type:</strong>{\" \"}\n                    {singleData?.order?.payment_type || \"N/A\"}\n                  </div>\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Delivery fee: </strong>\n                    <NumericFormat\n                      value={singleData?.order?.delivery_fee}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix={\"₦\"}\n                    />\n                  </div>\n                 \n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Tax : </strong>\n                 {singleData?.order?.tax}\n                     \n                  </div>\n                \n                 \n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Recipient name:</strong>{\" \"}\n                    {singleData?.order?.recipient_name || \"N/A\"}\n                  </div>\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Recipient email:</strong>{\" \"}\n                    {singleData?.order?.recipient_email || \"N/A\"}\n                  </div>\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Recipient phone:</strong>{\" \"}\n                    {singleData?.order?.recipient_phone || \"N/A\"}\n                  </div>\n\n            \n                  <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                    <strong>Created At:</strong>{\" \"}\n                    {moment(singleData.created_at).format(\"DD MMM YYYY\") || \"\"}\n                  </div>\n\n                  <div className=\"mb-3 mt-3\">\n                    <Form.Group\n                      controlId=\"formBasicStatus\"\n                      style={{\n                        display: \"flex\",\n                        gap: 20,\n                        alignItems: \"end\",\n                      }}\n                    >\n                      <div>\n                        <Form.Label>Change Order Status</Form.Label>\n\n                        <Form.Select\n                          name=\"status\"\n                          onChange={(evt) => handleInputChange(evt)}\n                          aria-label=\"Default select example\"\n                          defaultValue={singleData?.order?.status}\n                        >\n                          <option value=\"pending\">Pending</option>\n                          <option value=\"picked\">Picked</option>\n                          <option value=\"delivered\">Delivered</option>\n                          <option value=\"cancelled\">Cancelled</option>\n                          <option value=\"failed\">Failed</option>\n                        </Form.Select>\n                      </div>\n\n                      <Button\n                        onClick={handleStatus}\n                        size=\"large\"\n                        type=\"submit\"\n                        style={{ background: \"#ff0303\", color: \"white\" }}\n                      >\n                        Change status\n                      </Button>\n                    </Form.Group>\n                  </div>\n\n         \n                </div>\n              }\n            />\n          </Card>\n\n          <OrderInfoTabs\n            items={singleData?.products}\n          />\n        </div>\n      </div>)}\n      <ToastContainer />\n    </StyledContainer>\n  );\n};\n\nexport default OrderDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .insuranceprice {\n    margin-top: 5px;\n  }\n`;\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport { NumericFormat } from 'react-number-format'\n\nconst PaymentTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Reference',\n      dataIndex: 'reference',\n      key: 'reference',\n      ...getColumnSearchProps({\n        dataIndex: 'reference',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Amount',\n      dataIndex: 'amount',\n      key: 'amount',\n      render: (amount) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <NumericFormat\n            value={amount}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          />\n        </span>\n      ),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      ...getColumnSearchProps({\n        dataIndex: 'status',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Type',\n      dataIndex: 'payment_type',\n      key: 'payment_type',\n      ...getColumnSearchProps({\n        dataIndex: 'payment_type',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Payment gateway',\n      dataIndex: 'payment_gateway',\n      key: 'payment_gateway',\n      ...getColumnSearchProps({\n        dataIndex: 'payment_gateway',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Created at',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    // {\n    //   title: 'Actions',\n    //   key: 'id',\n    //   align: 'center',\n    //   render: (singleData) => (\n    //     <>\n    //       <div>\n    //         <Button style={{ marginRight: '5px' }} title='View product details'>\n    //           <Link to={`/payment/details/${singleData?.id}/${singleData?.reference_num}`}>\n    //             {'View'}\n    //           </Link>\n    //         </Button>\n    //       </div>\n    //     </>\n    //   ),\n    // },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default PaymentTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport UserTable from './PaymentTable'\nimport { getAllPayments } from '../../redux/paymentSlice'\nimport PaymentTable from './PaymentTable'\n\nconst ListPayments = () => {\n  const { payments } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllPayments())\n  }, [])\n\n  console.log('payments', payments?.data)\n\n\n  return (\n    <div>\n      <PageHeader extra={[]} title='Payments' />\n      {payments?.data && (<PaymentTable data={payments?.data?.payments} loading={payments.loading} />)}\n    </div>\n  )\n}\n\nexport default ListPayments\n","import { Avatar, Button, Card, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\nimport { NumericFormat } from 'react-number-format'\n// import InsuranceTabs from './InsuranceTabs'\nimport { getOnePayment } from '../../redux/paymentSlice'\n\nconst PaymentDetails = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.payments)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getOnePayment(id))\n  }, [id])\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card' title='Payment Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              description={\n                <div className='metaDescription'>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Reference:</strong> {singleData?.reference || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Amount:</strong>\n                    &nbsp;\n                    <NumericFormat\n                      value={singleData?.amount}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'₦'}\n                    />\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Status:</strong> {singleData?.status || 'N/A'}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong style={{ cursor: 'none' }}>User:</strong>\n                    <Link to={`/user/details/${singleData?.user?.id}/${singleData?.user?.email}`}>\n                      {singleData?.user?.first_name || ''} {singleData?.user?.last_name || ''}\n                    </Link>\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong style={{ cursor: 'none' }}>Order:</strong>\n                    <Link\n                      to={`/order/details/${singleData?.order?.id}/${singleData?.order?.track_no}`}\n                    >\n                      <strong>track no.:</strong> {singleData?.order?.track_no || ''}\n                    </Link>\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n\n          {/* <InsuranceTabs lessons={singleData?.lessons} /> */}\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default PaymentDetails\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .insuranceprice {\n    margin-top: 5px;\n  }\n`\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst ContactsTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Subject',\n      dataIndex: 'subject',\n      key: 'subject',\n      ...getColumnSearchProps({\n        dataIndex: 'subject',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Message',\n      dataIndex: 'description',\n      key: 'description',\n      render: (description) => <span style={{ whiteSpace: 'nowrap' }}> {description}</span>,\n    },\n    {\n      title: 'User',\n      dataIndex: 'user',\n      key: 'user',\n      render: (user) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          <Link style={{color: '#FF0303'}} to={`/customer/details/${user?.id}/${user?.email}`}>\n            {user?.full_name}\n          </Link>\n        </span>\n      ),\n    },\n\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    // {\n    //   title: 'Actions',\n    //   key: 'id',\n    //   align: 'center',\n    //   render: (singleData) => (\n    //     <>\n    //       <div>\n    //         <Button style={{ marginRight: '5px' }} title='View product details'>\n    //           <Link to={`/contacts/details/${singleData?.id}`}>{'View'}</Link>\n    //         </Button>\n    //       </div>\n    //     </>\n    //   ),\n    // },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default ContactsTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { getAllSupports, getOneSupport } from '../../redux/supportSlice'\nimport ContactsTable from './ContactsTable'\n\nconst ListContacts = () => {\n  const { contacts } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllSupports())\n  }, [])\n\n  console.log('contacts', contacts)\n\n\n  return (\n    <div>\n      <PageHeader extra={[]} title='Contact Support' />\n      <ContactsTable data={contacts.data} loading={contacts.loading} />\n    </div>\n  )\n}\n\nexport default ListContacts\n","import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { notification } from \"antd\";\nimport { sendToOneUser } from \"../../redux/notificationSlice\";\nimport { getAllUsers } from \"../../redux/userSlice\";\n\nconst initialFormState = {\n  title: \"\",\n  body: \"\",\n};\n\nfunction SendToOneUser() {\n  const { users } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, []);\n\n\n  const client_list =\n    users &&\n    users?.data?.users?.map((client, key) => {\n      return (\n        <option value={client?.id} key={key}>\n          {client?.name}\n        </option>\n      );\n    });\n\n  const [show, setShow] = useState(false);\n  const [notificationFormData, setnotificationFormData] =\n    useState(initialFormState);\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setShow(false);\n  };\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setnotificationFormData({\n      ...notificationFormData,\n      [name]: value,\n    });\n  };\n\n  const handleClientChange = (event) => {\n    const selectedValue = event.target.value;\n    setnotificationFormData({\n      ...notificationFormData,\n      user_id: selectedValue,\n    });\n  };\n\n  const clearFormData = () => {\n    setnotificationFormData({\n      title: \"\",\n      body: \"\",\n    });\n  };\n\n  const handleSendToAllUsers = (e) => {\n    e.preventDefault();\n\n    const data = {\n      title: notificationFormData.title,\n      body: notificationFormData.body,\n      user_id: notificationFormData.user_id,\n    };\n\n\n    setConfirmLoading(true);\n    dispatch(sendToOneUser(data))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"sendtoone/create/fulfilled\") {\n          handleClose();\n          clearFormData();\n          console.log(\"response act\", response);\n          notification.success({\n            message: \"notification created successfully\",\n          });\n        } else if (response.type === \"sendtoone/create/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error creating notification, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Send notification to one user </span>\n\n      <Modal show={show} onHide={handleClose} size=\"md\">\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Send notification to one user </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSendToAllUsers}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Enter message title\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Message content </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"body\"\n                placeholder=\"Message content\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select user</Form.Label>\n              <Form.Select\n                name=\"user_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleClientChange}\n                value={notificationFormData.user_id}\n              >\n                <option>Select user</option>\n                {client_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              style={{ color: \"#fff\", backgroundColor: \"#ff0303\", border: 'none' }}\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default SendToOneUser;\n","import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { notification } from \"antd\";\nimport { sendToMultipleUsers } from \"../../redux/notificationSlice\";\nimport { getAllUsers } from \"../../redux/userSlice\";\n\nconst initialFormState = {\n  title: \"\",\n  body: \"\",\n  user_ids: \"\",\n};\n\nfunction SendToMultipleUsers() {\n  const [show, setShow] = useState(false);\n  const [notificationFormData, setnotificationFormData] =\n    useState(initialFormState);\n  const { users } = useSelector((state) => state);\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n  const [selected, setSelected] = useState([]);\n\n  const handleClose = () => {\n    setShow(false);\n    setSelected([]);\n  };\n  const handleShow = () => {\n    setShow(true);\n    dispatch(getAllUsers);\n  };\n\n  useEffect(() => {\n    dispatch(getAllUsers);\n    console.log(\"users\", users);\n  }, []);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setnotificationFormData({\n      ...notificationFormData,\n      [name]: value,\n    });\n  };\n\n  const clearFormData = () => {\n    setnotificationFormData({\n      title: \"\",\n      body: \"\",\n      user_ids: [],\n    });\n  };\n\n  const handleChange = (e, i) => {\n    if (e.target.checked) {\n      setSelected([...selected, e.target.value]);\n    } else {\n      setSelected([...selected.filter((val) => val !== e.target.value)]);\n    }\n  };\n\n  const handleSendToMultipleUsers = (e) => {\n    e.preventDefault();\n\n    const data = {\n      title: notificationFormData.title,\n      body: notificationFormData.body,\n      user_ids: selected,\n    };\n    if (selected.length < 1) {\n      notification.error({\n        message: \"No user selected. Please select at least one user\",\n      });\n      return;\n    }\n    setConfirmLoading(true);\n    dispatch(sendToMultipleUsers(data))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"sendtomultiple/create/fulfilled\") {\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"notification created successfully\",\n          });\n        } else if (response.type === \"sendtomultiple/create/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error creating notification, please try again\"\n        );\n      });\n  };\n\n  const user_list =\n    users &&\n    users?.data?.users?.map((client, key) => {\n      return (\n        <label key={key} style={{ paddingBottom: \"10px\" }}>\n          {client?.name}\n          <input\n            style={{ marginRight: \"10px\" }}\n            type=\"checkbox\"\n            defaultValue={client.id}\n            name=\"user_ids\"\n            onClick={(e) => handleChange(e, client.id)}\n          />\n          &nbsp;\n        </label>\n      );\n    });\n\n  return (\n    <>\n      <span onClick={handleShow}>Send to multiple users</span>\n\n      <Modal show={show} onHide={handleClose} size=\"md\">\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Send Notifications to multiple user(s)</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSendToMultipleUsers}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Enter message title\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Message content </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"body\"\n                placeholder=\"Message content\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <h3>Select user(s)</h3>\n              {user_list}\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              style={{ color: \"#fff\", backgroundColor: \"#ff0303\", border: 'none' }}\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default SendToMultipleUsers;\n","import React, { useState, useEffect } from 'react'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { notification } from 'antd'\nimport { sendToAllUsers, getAllNotifications } from '../../redux/notificationSlice'\n\nconst initialFormState = {\n  title: '',\n  body: '',\n}\n\nfunction SendToAllUsers() {\n  const [show, setShow] = useState(false)\n  const [notificationFormData, setnotificationFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    setShow(false)\n  }\n  const handleShow = () => {\n    setShow(true)\n  }\n\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setnotificationFormData({\n      ...notificationFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setnotificationFormData({\n      title: '',\n      body: '',\n    })\n  }\n\n  const handleSendToAllUsers = (e) => {\n    e.preventDefault()\n\n    const data = {\n      title: notificationFormData.title,\n      body: notificationFormData.body,\n\n    }\n\n    console.log(data)\n\n    setConfirmLoading(true)\n    dispatch(sendToAllUsers(data))\n      .then((response) => {\n\n        setConfirmLoading(false)\n        if (response.type === 'sendtoall/create/fulfilled') {\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'notification created successfully',\n          })\n        } else if (response.type === 'sendtoall/create/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notification', 'Error creating notification, please try again')\n      })\n  }\n\n\n\n  return (\n    <>\n      <span onClick={handleShow}>Send notification to all users </span>\n\n      <Modal show={show} onHide={handleClose} size='md'>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Send notification to all users </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSendToAllUsers}>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type='text'\n                name='title'\n                placeholder='Enter message title'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Message content </Form.Label>\n              <Form.Control\n                as='textarea'\n                name='body'\n                placeholder='Message content'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n          \n\n            <Button variant='primary' style={{color: '#fff', backgroundColor:'#ff0303', border: 'none'}} type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default SendToAllUsers\n","import React, { useEffect } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport logo from \"../../assets/logo.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteNotification,\n  getAllNotifications,\n} from \"../../redux/notificationSlice\";\nimport SendToOneUser from \"./SendToOneUser\";\nimport SendToMultipleUsers from \"./SendToMultipleUsers\";\nimport SendToAllUsers from \"./SendToAllUsers\";\n\nconst Notifications = () => {\n  const { notifications } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllNotifications());\n  }, []);\n\n  const handleDelete = ({ id }) => {\n    if (\n      !window.confirm(\n        \"Do You want to permanently delete the selected notification?\"\n      )\n    ) {\n      return;\n    }\n\n    dispatch(deleteNotification(id))\n      .then((response) => {\n        if (response.type === \"notification/delete/fulfilled\") {\n          dispatch(getAllNotifications());\n          notification.success({\n            message: \" notification deleted successfully\",\n          });\n        } else if (response.type === \"notification/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting notification, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting notification, please try again later\",\n        });\n      });\n  };\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key=\"SendToOne\">\n            <SendToOneUser />\n          </Button>,\n\n          <Button key=\"SendToAll\">\n            <SendToAllUsers />\n          </Button>,\n\n          <Button key=\"SendToMultiple\">\n<SendToMultipleUsers/>\n          </Button>\n        ]}\n        title=\"Notifications\"\n      />\n\n      <div style={{ paddingTop: \"150px\", textAlign: \"center\" }}>\n        <img src={logo} style={{ height: \"200px\", margin: \"auto\" }} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { getOneSupport } from '../../redux/supportSlice'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport moment from 'moment'\nimport { Avatar, Button, Typography } from 'antd'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport Meta from 'antd/lib/card/Meta'\n\n\n\n\nexport default function SupportDetails() {\n  const { singleData, loading } = useSelector((state) => state.products)\n  const { id, refkey } = useParams()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const relatedproducts = singleData?.related_products?.map((prod, key) => {\n    return prod?.product\n  })\n\n  useEffect(() => {\n    dispatch(getOneSupport(id))\n    // console.log('relatedproducts', singleData?.related_products)\n  }, [id])\n\n  return (\n    <div>\n      <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card' title='User'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              avatar={\n                <Avatar\n                  size={100}\n                  src={singleData?.profile_picture || 'https://joeschmoe.io/api/v1/random'}\n                />\n              }\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${singleData?.user?.full_name || ''}`}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n                  {singleData?.phone_number && (\n                    <div className='flex align-middle items-center gap-3 flex-wrap'>\n                      <a className='text-sm' href={`tel:${singleData?.phone_number}`}>\n                        <BsPhone size={15} /> {singleData?.phone_number || 'no phone'}\n                      </a>\n                    </div>\n                  )}\n                  <div className='flex align-middle items-center gap-3 flex-wrap '>\n                    <a href={`mailto:${singleData?.email}`} className='text-sm'>\n                      <BsEnvelope size={15} /> {singleData?.email || ''}\n                    </a>\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    </StyledContainer>\n    </div>\n  )\n}\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n`","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport { NumericFormat } from 'react-number-format'\n\nconst TopupTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Reference',\n      dataIndex: 'reference',\n      key: 'reference',\n      ...getColumnSearchProps({\n        dataIndex: 'reference',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Amount',\n      dataIndex: 'amount',\n      key: 'amount',\n      render: (amount) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <NumericFormat\n            value={amount}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          />\n        </span>\n      ),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      ...getColumnSearchProps({\n        dataIndex: 'status',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'channel',\n      dataIndex: 'channel',\n      key: 'channel',\n      ...getColumnSearchProps({\n        dataIndex: 'channel',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'user',\n      dataIndex: 'user',\n      key: 'user',\n      render: (user) => <span style={{ whiteSpace: 'nowrap' }}> {user?.first_name}</span>,\n    },\n\n    {\n      title: 'created at',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View product details'>\n              <Link to={`/payment/details/${singleData?.id}/${singleData?.reference}`}>\n                {'View'}\n              </Link>\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default TopupTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport UserTable from './TopupTable'\nimport { getAllTopups } from '../../redux/topupSlice'\nimport TopupTable from './TopupTable'\n\nconst ListTopup = () => {\n  const { topup } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllTopups())\n  }, [])\n\n  console.log('topup', topup)\n\n\n  return (\n    <div>\n      <PageHeader extra={[]} title='Top up' />\n      <TopupTable data={topup.data} loading={topup.loading} />\n    </div>\n  )\n}\n\nexport default ListTopup\n","import { Avatar, Button, Card, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\nimport { NumericFormat } from 'react-number-format'\nimport { getOneTopup } from '../../redux/topupSlice'\n\nconst TopupDetails = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.payments)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getOneTopup(id))\n  }, [id])\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card' title='Payment Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              description={\n                <div className='metaDescription'>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Reference:</strong> {singleData?.reference || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Amount:</strong>\n                    &nbsp;\n                    <NumericFormat\n                      value={singleData?.amount}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'₦'}\n                    />\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Status:</strong> {singleData?.status || 'N/A'}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong style={{ cursor: 'none' }}>User:</strong>\n                    <Link to={`/user/details/${singleData?.user?.id}/${singleData?.user?.email}`}>\n                      {singleData?.user?.first_name || ''} {singleData?.user?.last_name || ''}\n                    </Link>\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong style={{ cursor: 'none' }}>Order:</strong>\n                    <Link\n                      to={`/order/details/${singleData?.order?.id}/${singleData?.order?.track_no}`}\n                    >\n                      <strong>track no.:</strong> {singleData?.order?.track_no || ''}\n                    </Link>\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap insuranceprice'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default TopupDetails\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .insuranceprice {\n    margin-top: 5px;\n  }\n`\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { editCompany, getAllCompanies } from '../../redux/companySlice'\nimport { notification } from 'antd'\n\nconst initialFormState = {\n  name: '',\n  website: '',\n  logo: '',\n  description: '',\n}\n\nfunction UpdateCompany({ company }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [companyFormData, setcompanyFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setcompanyFormData({\n      ...companyFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setcompanyFormData({\n      name: company.name,\n      website: company.website,\n      logo: company.logo,\n      description: company.description,\n    })\n  }, [company])\n\n  const clearFormData = () => {\n    setcompanyFormData({\n      name: '',\n      website: '',\n      logo: '',\n      description: '',\n    })\n    setImage('')\n  }\n\n  const handleEditCompany = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('name', companyFormData.name)\n    formData.append('website', companyFormData.website)\n    formData.append('logo', image)\n    formData.append('description', companyFormData.description)\n    formData.append('company_id', company?.id)\n\n    setConfirmLoading(true)\n    dispatch(editCompany(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'company/edit/fulfilled') {\n          dispatch(getAllCompanies())\n          handleClose()\n          //   clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'Company updated successfully',\n          })\n        } else if (response.type === 'company/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n          console.log('error notificatom', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating company, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit company</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditCompany}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='name'\n                placeholder='Enter company name'\n                defaultValue={companyFormData.name}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Website</Form.Label>\n              <Form.Control\n                type='text'\n                name='website'\n                placeholder='Enter company website'\n                defaultValue={companyFormData.website}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Description </Form.Label>\n              <Form.Control\n                type='text'\n                name='description'\n                placeholder='description'\n                defaultValue={companyFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Logo (Optional)</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n              <span>\n                <img src={company?.logo} alt='horse' style={{ with: '70px', height: '70px' }} />\n              </span>\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateCompany\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateCompany from './UpdateJob'\n\nconst JobTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'client',\n      key: 'client',\n      ...getColumnSearchProps({\n        dataIndex: 'client',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n\n      render: (client) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {client.first_name && client.first_name?.substring(0, 20)}{' '}\n          {client.first_name && client.first_name?.length >= 20 && '...'}\n        </span>\n      ),\n    },\n\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      render: (description) => (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          {' '}\n          {description && description?.substring(0, 100)}{' '}\n          {description && description?.length >= 100 && '...'}\n        </span>\n      ),\n    },\n    // {\n    //   title: 'Logo',\n    //   key: 'id',\n    //   dataIndex: 'logo',\n    //   align: 'center',\n    //   render: (logo) => (\n    //     <Link to={`${logo}`}>\n    //       {logo ? (\n    //         <img\n    //           style={{\n    //             width: '60px',\n    //             height: '60px',\n    //             borderRadius: '50%',\n    //             objectFit: 'cover',\n    //           }}\n    //           src={logo}\n    //           height={60}\n    //           width={60}\n    //           alt='avatar'\n    //         />\n    //       ) : (\n    //         <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n    //       )}\n    //     </Link>\n    //   ),\n    // },\n\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View product details'>\n              <Link to={`/job/details/${singleData?.id}/${singleData?.headline_slug}`}>{'View'}</Link>\n            </Button>\n            {/* <Button style={{ marginRight: '5px' }} title='Edit company'>\n              <UpdateCompany company={singleData} />\n            </Button>\n            <Button\n              danger\n              onClick={() => handleDelete(singleData)}\n              title='Permantly delete company'\n            >\n              delete\n            </Button> */}\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data && data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default JobTable\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteCompany, getAllJobs } from \"../../redux/jobSlice\";\nimport { getAllFeatured } from \"../../redux/featuredJobSlice\";\n\nimport CreateCompany from \"./CreateJob\";\nimport JobTable from \"./JobTable\";\n\nimport styled from \"styled-components\";\nimport { Tabs } from \"antd\";\n\nconst { TabPane } = Tabs;\n\nconst Jobs = (props) => {\n  const { jobs, featuredJobs } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAllJobs());\n  }, []);\n\n\n  useEffect(() => {\n    dispatch(getAllFeatured());\n  }, []);\n\n\n  const handleDelete = ({ id }) => {\n    // if (!window.confirm('Do You want to permanently delete the selected company?')) {\n    //   return\n    // }\n    // dispatch(deleteCompany(id))\n    //   .then((response) => {\n    //     if (response.type === 'company/delete/fulfilled') {\n    //       dispatch(getAllCompanies())\n    //       notification.success({\n    //         message: ' company deleted successfully',\n    //       })\n    //     } else if (response.type === 'company/delete/rejected') {\n    //       notification.error({\n    //         message: response?.payload?.message || 'Error deleting company, please try again',\n    //       })\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     notification.error({\n    //       message: 'Error deleting company, please try again later',\n    //     })\n    //   })\n  };\n\n  return (\n    <div>\n      <PageHeader\n        // extra={[\n        //   <Button key=\"CreateCompany\">\n        //     <CreateCompany />,\n        //   </Button>,\n        // ]}\n        title=\"Jobs\"\n      />\n      <StyledDiv {...props}>\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"All Jobs\" key=\"1\">\n            <JobTable\n              data={jobs.data}\n              loading={jobs.loading}\n              handleDelete={handleDelete}\n            />\n          </TabPane>\n          <TabPane tab=\"Featured Jobs\" key=\"2\">\n            <JobTable\n              data={featuredJobs.data}\n              loading={featuredJobs.loading}\n              handleDelete={handleDelete}\n            />\n          </TabPane>\n        </Tabs>\n      </StyledDiv>\n    </div>\n  );\n};\n\nexport default Jobs;\n\nconst StyledDiv = styled.div`\n  margin-top: 1rem;\n  padding: 0 0.5rem;\n`;\n","import { Avatar, Button, Card, Typography, notification } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { getOneJob, featureJob } from \"../../redux/jobSlice\";\n\nconst JobDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.jobs);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOneJob(id));\n  }, [id]);\n\n  console.log(\"single job\", singleData);\n\n  const handleFeature = (id ) => {\n\n    if (!window.confirm('Do you want to feature this job?')) {\n      return\n    }\n    dispatch(featureJob(id))\n      .then((response) => {\n        if (response.type === 'job/feature/fulfilled') {\n          notification.success({\n            message: ' job featured successfully',\n          })\n        } else if (response.type === 'job/feature/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error featuring job, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: 'Error featuring job, please try again later',\n        })\n      })\n  };\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className=\"userInfo\">\n          <Card\n            loading={loading}\n            className=\"userInfo__card\"\n            title=\"Job Details\"\n          >\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to=\"#\" className=\"userInfo__back\">\n                <Button\n                  icon={<BsArrowLeft />}\n                  type=\"link\"\n                  className=\"hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300\"\n                >\n                  Back\n                </Button>\n                <Button\n                  className=\"hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300\"\n                  onClick={()=>handleFeature(singleData?.id)}\n                >\n                  {singleData?.is_featured === 'yes' || singleData?.is_featured === null ? 'Unfeature Job' : 'Feature Job'}\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className=\"text-3xl m-0 w-full\">{`${\n                  `${singleData?.headline}` || \"\"\n                } `}</Typography.Title>\n              }\n              description={\n                <div className=\"metaDescription\">\n                  {singleData?.description && (\n                    <div className=\"flex align-middle items-center gap-3 flex-wrap\">\n                      <strong>Description:</strong>\n                      <p>{singleData?.description || \"\"}</p>\n                    </div>\n                  )}\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Created At:</strong>{\" \"}\n                    {moment(singleData.created_at).format(\"DD MMM YYYY\") || \"\"}\n                  </div>\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Experience Level:</strong>{\" \"}\n                    {singleData?.experience_level}\n                  </div>\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Delivery Timeline:</strong>{\" \"}\n                    {singleData?.delivery_timeline}\n                  </div>\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Project Status:</strong>{\" \"}\n                    {singleData?.project_status}\n                  </div>\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Job Images:</strong>{\" \"}\n                    {singleData?.job_images?.length === 0 ? (\n                      \"No Images to show\"\n                    ) : (\n                      <div   style={{\n                        display: \"flex\",\n                        wrap: \"flex-wrap\",\n                        gap: \"10px\",\n                      }}>\n                        {singleData?.job_images?.map((image, i) => (\n                          <div key={i}\n                          \n                          >\n                            <img\n                              src={image.image_url}\n                              style={{ height: \"250px\", margin: \"auto\" }}\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default JobDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`;\n","import { lazy } from \"react\";\n\nconst Wallet = lazy(() => import(\"./Wallet\"));\n\nexport default Wallet;\n","import { Avatar, Button, Card, Typography, notification } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { getOneWallet } from \"../../redux/walletSlice\";\n\nconst WalletDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.wallet);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOneWallet(id));\n  }, [id]);\n\n  console.log(\"single job\", singleData);\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className=\"userInfo\">\n          <Card\n            loading={loading}\n            className=\"userInfo__card\"\n            title=\"Transaction Details\"\n          >\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to=\"#\" className=\"userInfo__back\">\n                <Button\n                  icon={<BsArrowLeft />}\n                  type=\"link\"\n                  className=\"hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300\"\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className=\"text-3xl m-0 w-full\">{`${\n                  `${singleData?.cashout_account?.account_name}` || \"\"\n                } `}</Typography.Title>\n              }\n              description={\n                <div className=\"metaDescription\">\n                  <div className=\"flex align-middle text-2xl items-center gap-4 flex-wrap \">\n                    <strong>Account Number: </strong>\n                    {singleData?.cashout_account?.account_number}{\" \"}\n                  </div>\n                  <div className=\"flex align-middle text-2xl items-center gap-4 flex-wrap \">\n                    <strong>Bank: </strong>\n                    {singleData?.cashout_account?.bank_name}{\" \"}\n                  </div>\n                  {singleData?.description && (\n                    <div className=\"flex align-middle items-center gap-3 flex-wrap\">\n                      <strong>Description:</strong>\n                      <p>{singleData?.description || \"\"}</p>\n                    </div>\n                  )}\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Created At: </strong>{\" \"}\n                    {moment(singleData.created_at).format(\"DD MMM YYYY\") || \"\"}\n                  </div>\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Amount: </strong> ₦{singleData?.amount}\n                  </div>\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Transaction Status: </strong> {singleData?.status}\n                  </div>\n\n                  <div className=\"flex align-middle items-center gap-4 flex-wrap company-detail\">\n                    <strong>Transaction Type: </strong>{\" \"}\n                    {singleData?.transaction_type}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default WalletDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`;\n","import { Avatar, Button, Table } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst AdminTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      ...getColumnSearchProps({\n        dataIndex: \"name\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n      ...getColumnSearchProps({\n        dataIndex: \"email\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: \"Level\",\n      dataIndex: \"level\",\n      key: \"level\",\n      ...getColumnSearchProps({\n        dataIndex: \"level\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n\n      render: (level) => {\n        if (level === 0) {\n          return <div>Super Admin</div>;\n        } else if (level === 1) {\n          return <div>Manager</div>;\n        } else if (level === 2) {\n          return <div>Supervisor</div>;\n        } else {\n          return <div>Customer Care</div>;\n        }\n      },\n\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      ...getColumnSearchProps({\n        dataIndex: \"created_at\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(created_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Actions\",\n      key: \"id\",\n      align: \"center\",\n      render: (singleData) => (\n        <>\n          <div>\n            {admin?.level === 0 ? <Button\n              danger\n              onClick={() => handleDelete(singleData)}\n              title=\"Permantly delete admin\"\n            >\n              delete\n            </Button> : \"N/a\"}\n            \n          </div>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default AdminTable;\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch } from \"react-redux\";\nimport { createAdmin, getAllAdmin } from \"../../redux/adminSlice\";\nimport { notification } from \"antd\";\n\nconst initialFormState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  password_confirmation: \"\",\n  level: \"\"\n};\n\nfunction Createadmin() {\n  const [show, setShow] = useState(false);\n  const [adminFormData, setadminFormData] = useState(initialFormState);\n\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setadminFormData({\n      ...adminFormData,\n      [name]: value,\n    });\n\n    if (name === \"password_confirmation\") {\n      // Compare with the password field\n      setPasswordsMatch(value === adminFormData.password);\n    }\n  \n    setadminFormData({\n      ...adminFormData,\n      [name]: value,\n    });\n  };\n\n\n \n\n\n  const clearFormData = () => {\n    setadminFormData({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      level: \"\"\n    });\n  };\n\n  const handlecreateadmin = (e) => {\n    e.preventDefault();\n    var formData = new FormData();\n    formData.append(\"name\", adminFormData.name);\n    formData.append(\"email\", adminFormData.email);\n    formData.append(\"password\", adminFormData.password);\n    formData.append(\"level\", adminFormData.level);\n\n\n    setConfirmLoading(true);\n    dispatch(createAdmin(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n\n        if (response.type === \"admin/create/fulfilled\") {\n          dispatch(getAllAdmin());\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"admin created successfully\",\n          });\n        } else if (response.type === \"admin/create/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error creating admin, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error creating admin, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create admin</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create admin</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handlecreateadmin}>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicFN\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter first name\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n      \n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicEmail\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Level </Form.Label>\n              <Form.Select\n                name=\"level\"\n                onChange={(evt) =>\n                  setadminFormData({\n                    ...adminFormData,\n                    level: evt.target.value,\n                  })\n                }\n                aria-label=\"Default select example\"\n                value={adminFormData.level}\n              >\n                <option>Select level</option>\n\n                <option value=\"0\">Super Admin</option>\n                <option value=\"1\">Manager</option>\n                <option value=\"2\">Supervisor</option>\n                <option value=\"3\">Customer Care</option>\n              </Form.Select>\n            </Form.Group>\n    \n\n            <Form.Group\n              controlId=\"formPassword\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter password\"\n                name=\"password\"\n                value={adminFormData.password}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formConfirmPassword\">\n  <Form.Label>Confirm Password</Form.Label>\n  <Form.Control\n    type=\"password\"\n    placeholder=\"Confirm password\"\n    name=\"password_confirmation\"\n    value={adminFormData.password_confirmation}\n    onChange={(evt) => handleInputChange(evt)}\n  />\n  {!passwordsMatch && (\n    <div style={{ color: \"red\" }}>Passwords do not match</div>\n  )}\n</Form.Group>\n\n            <Button\n              style={{ marginTop: '10px', color: \"#fff\", backgroundColor: \"#ff0303\", border: 'none' }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default Createadmin;","import React, { useEffect } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteAdmin, getAllAdmin } from \"../../redux/adminSlice\";\nimport AdminTable from \"./AdminTable\";\nimport CreateAdmin from \"./CreateAdmin\";\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst ListPickupCharges = () => {\n  const { admins } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllAdmin());\n  }, []);\n\n\n  const handleDelete = ({ id }) => {\n    if (\n      !window.confirm(\"Do You want to permanently delete the selected admin?\")\n    ) {\n      return;\n    }\n\n    dispatch(deleteAdmin(id))\n      .then((response) => {\n        console.log(id);\n        if (response.type === \"notification/delete/fulfilled\") {\n          console.log(response);\n          dispatch(getAllAdmin());\n          notification.success({\n            message: \" admin deleted successfully\",\n          });\n        } else if (response.type === \"notification/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting admin, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting admin, please try again later\",\n        });\n      });\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n\n\n  return (\n    <div>\n      {admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? (\n        <PageHeader\n          extra={[\n            <Button\n              key=\"CreateAdmin\"\n              style={{ color: \"#ff0303\", border: \"1px solid #ff0303\" }}\n            >\n              <CreateAdmin />\n            </Button>,\n          ]}\n          title=\"Products\"\n        />\n      ) : (\n        <PageHeader extra={[]} title=\"Admins\" />\n      )}\n\n      <AdminTable\n        data={admins?.data?.admins}\n        loading={admins.loading}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default ListPickupCharges;\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst RiderTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Full Name',\n      dataIndex: 'full_name',\n      key: 'full_name',\n      ...getColumnSearchProps({\n        dataIndex: 'full_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      ...getColumnSearchProps({\n        dataIndex: 'email',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Phone number',\n      dataIndex: 'phone_number',\n      key: 'phone_number',\n      ...getColumnSearchProps({\n        dataIndex: 'phone_number',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Profile picture',\n      key: 'id',\n      dataIndex: 'profile_picture',\n      align: 'center',\n      render: (profile_picture) => (\n        <Link to={`${profile_picture}`}>\n          {profile_picture ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={profile_picture}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'rider_orders',\n      key: 'rider_orders',\n      render: (rider_orders) => <span style={{ whiteSpace: 'nowrap' }}> {rider_orders?.length}</span>,\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View product details'>\n              <Link to={`/rider/details/${singleData?.id}`}>{'View'}</Link>\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default RiderTable\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createRider, getAllRiders } from \"../../redux/riderSlice\";\nimport { notification } from \"antd\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport styled from \"styled-components\";\nimport './rider.css'\n\nimport {\n  GoogleMap,\n  LoadScript,\n  StandaloneSearchBox,\n} from \"@react-google-maps/api\";\n\nconst initialFormState = {\n  name: \"\",\n  phone_number: \"\",\n  password: \"\",\n  email: \"\",\n  address: \"\",\n  banner: \"\",\n};\n\nfunction CreateRider() {\n  const [show, setShow] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [riderFormData, setriderFormData] = useState(initialFormState);\n\n  const apiKey = \"AIzaSyB_fdcrsqDc2198oVz6Flm8l1SGu-8T5fw\";\n\n  const [address, setAddress] = useState(\"\");\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n\n  const handlePlacesLoad = (searchBox) => {\n    searchBox.addListener(\"places_changed\", () => {\n      const places = searchBox.getPlaces();\n      if (places.length > 0) {\n        const place = places[0];\n         setLatitude(place.geometry.location.lat());\n      setLongitude(place.geometry.location.lng());\n        setAddress(place.formatted_address);\n      }\n    });\n  };\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n\n    const { name, value } = event.target;\n    setriderFormData({\n      ...riderFormData,\n      [name]: value,\n    });\n  };\n  useEffect(() => {}, []);\n  const clearFormData = () => {\n    setriderFormData({\n      name: \"\",\n      phone_number: \"\",\n      password: \"\",\n      email: \"\",\n      address: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      banner: \"\",\n    });\n    setImage(\"\");\n  };\n\n  const handleCreateRider = (e) => {\n    e.preventDefault();\n    var formData = new FormData();\n    formData.append(\"name\", riderFormData.name);\n    formData.append(\"banner\", image);\n    formData.append(\"phone_number\", riderFormData.phone_number);\n    formData.append(\"password\", riderFormData.password);\n    formData.append(\"email\", riderFormData.email);\n    formData.append(\"longitude\", longitude);\n    formData.append(\"latitude\", latitude);\n    formData.append(\"address\", address);\n\n\n\n    setConfirmLoading(true);\n    dispatch(createRider(formData))\n      .then((response) => {\n        console.log(response);\n        setConfirmLoading(false);\n        if (response.type === \"rider/createRider/fulfilled\") {\n          dispatch(getAllRiders());\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"rider created successfully\",\n          });\n        } else if (response.type === \"rider/createRider/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error creating rider, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create Rider</span>\n\n      <Modal show={show} onHide={handleClose} size=\"md\" backdrop=\"static\">\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Rider</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateRider}>\n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                  <Form.Label>\n                    Full Name<span style={{ color: \"red\" }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter rider name\"\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>\n                    Email<span style={{ color: \"red\" }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder=\"Enter email\"\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n                  <Form.Label>\n                    Phone Number<span style={{ color: \"red\" }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"phone_number\"\n                    placeholder=\"Enter rider phone number\"\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                  <Form.Label>\n                    Password<span style={{ color: \"red\" }}>*</span>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    onChange={(evt) => handleInputChange(evt)}\n                    required\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicImage\">\n              <Form.Label>Picture</Form.Label>\n              <Form.Control\n                type=\"file\"\n                onChange={(evnt) => onChangeImage(evnt)}\n                required\n              />\n            </Form.Group>\n            <Form.Control.Feedback type=\"invalid\">\n              A picture is required.\n            </Form.Control.Feedback>\n\n            <LoadScript googleMapsApiKey={apiKey} libraries={[\"places\"]}>\n              <StandaloneSearchBox onLoad={handlePlacesLoad}>\n                <div\n                  style={{\n                    position: \"relative\",\n                    zIndex: 1,\n                    marginBottom: \"15px\",\n                  }}\n                >\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicAddress\">\n                    <Form.Label>\n                      Rider address<span style={{ color: \"red\" }}>*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"address\"\n                      placeholder=\"Search Places...\"\n                      required\n                    />\n                  </Form.Group>\n                </div>\n              </StandaloneSearchBox>\n            </LoadScript>\n\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default CreateRider;\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getAllRiders } from \"../../redux/riderSlice\";\nimport RiderTable from \"./RiderTable\";\nimport CreateRider from \"./CreateRider\";\n\nconst ListRiders = (props) => {\n  const { rider } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAllRiders());\n  }, []);\n\n  console.log(rider)\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key=\"CreateRider\">\n            <CreateRider />\n          </Button>\n        ]}\n        title=\"Riders\"\n      />\n\n      <RiderTable data={rider.data} loading={rider.loading} />\n    </div>\n  );\n};\n\nexport default ListRiders;\n","import React from \"react\";\n\nconst RiderDocuments = ({ doc }) => {\n  return (\n    <>\n      {doc === null ? (\n        <div>No documents uploaded by this rider</div>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"40px\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div>\n          <img\n            src={doc?.vehicle_license}\n            alt=\"Vehicle license\"\n            style={{\n              height: \"500px\",\n              width: \"auto\",\n              objectFit: \"contain\",\n              marginBottom: \"10px\",\n            }}\n          />\n          <div>Vehicle License</div>\n          </div>\n        \n        <div>\n        <img\n            src={doc?.hackney_permit}\n            alt=\"Hackney permit\"\n            style={{\n              height: \"500px\",\n              width: \"auto\",\n              objectFit: \"contain\",\n              marginBottom: \"10px\",\n            }}\n          />\n          <div>Hackney Permit</div>\n        </div>\n         \n         <div>\n         <img\n            src={doc?.mot}\n            alt=\"mot\"\n            style={{\n              height: \"500px\",\n              width: \"auto\",\n              objectFit: \"contain\",\n              marginBottom: \"10px\",\n            }}\n          />{\" \"}\n          <div>MoT</div>\n         </div>\n         \n         <div>\n         <img\n            src={doc?.insurance}\n            alt=\"insurance\"\n            style={{\n              height: \"500px\",\n              width: \"auto\",\n              objectFit: \"contain\",\n              marginBottom: \"10px\",\n            }}\n          />\n          <div>Insurance</div>\n         </div>\n         \n         <div>\n         <img\n            src={doc?.road_worthiness}\n            alt=\"Road worthiness\"\n            style={{ height: \"500px\", width: \"auto\", objectFit: \"contain\" }}\n          />\n          <div>Road Worthiness</div>\n         </div>\n         \n        </div>\n      )}\n    </>\n  );\n};\n\nexport default RiderDocuments;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\n\nconst MoreDetails = ({ details }) => {\n\n\n  return (\n    <StyledContainer>\n      <div className=\"flex flex-col content\">\n       \n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Rider Emergency Contact:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {details?.rider_emergency_contact_name}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Rider Emergency Contact Number:{\" \"}\n          <span style={{ paddingLeft: \"10px\" }}>\n            {details?.rider_emergency_contact_phone_number}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Vehicle Registration Number:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {details?.vehicle_registration_number}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Vehicle Type:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {details?.vehicle_type}\n          </span>\n        </div>\n       \n      </div>\n   \n    </StyledContainer>\n  );\n};\n\nexport default MoreDetails;\n\nconst StyledContainer = styled.div`\n  .content {\n    color: #000;\n    padding-top: 20px;\n  }\n  .divider {\n    width: 100%;\n    border-color: white;\n    opacity: 0.08;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\n\nconst RiderID = ({ id }) => {\n\n\n  return (\n    <StyledContainer>\n      <div className=\"flex flex-col content\">\n       \n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Means of ID:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {id?.means_of_id_type}\n          </span>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"40px\",\n            flexWrap: \"wrap\",\n            justifyContent: \"flex-start\",\n          }}\n        >\n          <div>\n          <img\n            src={id?.means_of_id}\n            alt=\"Vehicle license\"\n            style={{\n              height: \"500px\",\n              width: \"auto\",\n              objectFit: \"contain\",\n              marginBottom: \"10px\",\n            }}\n          />\n          <div>Means of ID</div>\n          </div>\n        \n        <div>\n        <img\n            src={id?.rider_card}\n            alt=\"Hackney permit\"\n            style={{\n              height: \"500px\",\n              width: \"auto\",\n              objectFit: \"contain\",\n              marginBottom: \"10px\",\n            }}\n          />\n          <div>Rider Card</div>\n        </div>\n         </div>\n       \n      </div>\n   \n    </StyledContainer>\n  );\n};\n\nexport default RiderID;\n\nconst StyledContainer = styled.div`\n  .content {\n    color: #000;\n    padding-top: 20px;\n  }\n  .divider {\n    width: 100%;\n    border-color: white;\n    opacity: 0.08;\n  }\n`;\n","import { Button, Table, Avatar } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\n\nconst RiderChatTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [\n    {\n      title: \"Profile picture\",\n      key: \"sender\",\n      dataIndex: \"sender\",\n      align: \"center\",\n      render: (sender) => (\n        <Link to={`${sender?.profile_picture}`}>\n          {sender?.profile_picture ? (\n            <img\n              style={{\n                width: \"60px\",\n                height: \"60px\",\n                borderRadius: \"50%\",\n                objectFit: \"cover\",\n              }}\n              src={sender?.profile_picture}\n              height={60}\n              width={60}\n              alt=\"avatar\"\n            />\n          ) : (\n            <Avatar\n              style={{ backgroundColor: \"#3f8bcaa1\" }}\n              icon={<UserOutlined />}\n              size={50}\n            />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: \"Sender\",\n      dataIndex: \"sender\",\n      key: \"sender\",\n      ...getColumnSearchProps({\n        dataIndex: \"sender\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (sender) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n      {sender?.full_name}\n        </span>\n      ),\n\n    },\n\n    {\n      title: \"body\",\n      dataIndex: \"body\",\n      key: \"body\",\n      render: (body) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {body && body?.substring(0, 80)}{\" \"}\n          {body && body?.length >= 80 && \"...\"}{\" \"}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      ...getColumnSearchProps({\n        dataIndex: \"created_at\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(created_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default RiderChatTable;\n","import React from 'react'\nimport { Tabs } from 'antd'\nimport { useSelector } from 'react-redux'\nimport OrderTable from '../Orders/OrderTable'\nimport RiderDocuments from './RiderDocuments'\nimport MoreDetails from './MoreDetails'\nimport RiderID from './RiderID'\nimport RiderChatTable from './RiderChatTable'\n\nconst { TabPane } = Tabs\n\nconst RiderInfoTabs = ({ rider, orders }) => {\n\n  return (\n    <div>\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Assigned Orders' key='1'>\n          <OrderTable data={orders}/>\n        </TabPane>\n        <TabPane tab='ID' key='2'>\n          <RiderID id={rider?.rider_detail}/>\n        </TabPane>\n        <TabPane tab='Profile Details' key='3'>\n          <MoreDetails details = {rider?.rider_detail} />\n        </TabPane>\n        <TabPane tab='Uploaded Documents' key='4'>\n          <RiderDocuments doc={rider?.rider_documents}/>\n        </TabPane>\n        <TabPane tab='Chat Histories' key='5'>\n          <RiderChatTable data={rider?.rider_chats_histories} />\n\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default RiderInfoTabs\n","import moment from \"moment\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar, Button, Card, Typography } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  blockRider,\n  approveRiderDoc,\n  declineRiderDoc,\n} from \"../../redux/riderSlice\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { notification } from \"antd\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\n\n\nconst RiderInfo = ({ singleData }) => {\n  const dispatch = useDispatch();\n\n  const [show, setShow] = useState(false);\n  const [reason, setReason] = useState('');\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const clearFormData = () => {\n    setReason('')\n  };\n\n  const handleBlock = (data) => {\n    dispatch(blockRider(data)).then((response) => {\n      console.log(response);\n      if (response.type === \"rider/blockRider/fulfilled\") {\n        notification.success({\n          message:\n            response?.payload?.is_blocked === true\n              ? \"rider blocked\"\n              : \"rider unblocked\",\n        });\n      } else if (response.type === \"rider/blockRider/rejected\") {\n        notification.error({\n          message: response?.payload?.message,\n        });\n      }\n    });\n  };\n  const handleApprove = (data) => {\n    dispatch(approveRiderDoc(data)).then((response) => {\n      if (response.type === \"rider/approveRiderDoc/fulfilled\") {\n        notification.success({\n          message: \"rider documents approved\",\n        });\n      } else if (response.type === \"rider/approveRiderDoc/rejected\") {\n        notification.error({\n          message: response?.payload?.message,\n        });\n      }\n    });\n  };\n  const handleDecline = (e) => {\n    e.preventDefault();\n    var formData = {\n      reason_for_rejection: reason,\n      rider_id: singleData?.id,\n    };\n\n    console.log(formData);\n\n    setConfirmLoading(true);\n\n    dispatch(declineRiderDoc(formData)).then((response) => {\n      setConfirmLoading(false);\n\n      if (response.type === \"rider/declineRiderDoc/fulfilled\") {\n        handleClose();\n        clearFormData();\n        notification.success({\n          message: \"rider documents declined\",\n        });\n      } else if (response.type === \"rider/declineRiderDoc/rejected\") {\n        notification.error({\n          message: response?.payload?.message,\n        });\n      }\n    });\n  };\n\n  return (\n    <StyledContainer>\n      <div className=\"flex flex-col content\">\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Email:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.email}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Phone Number:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.phone_number}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Accepting Pickups:{\" \"}\n          <span style={{ paddingLeft: \"10px\" }}>\n            {singleData?.rider_detail?.accepting_pickups === 1 ? \"Yes\" : \"No\"}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Earnings:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.rider_earnings}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Status:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.status}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Is Blocked:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.is_blocked === true ? \"Yes\" : \"No\"}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Assigned Orders Count:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.rider_orders?.length}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Address:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.address}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Latitude:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.latitude}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Longitude:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.longitude}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontWeight: \"bold\" }}>\n          Created At:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {moment(singleData?.created_at).format(\"DD MMM YYYY\")}\n          </span>\n        </div>\n        <div style={{ paddingBottom: \"20px\", fontWeight: \"bold\" }}>\n          Documents Status:{\" \"}\n          <span style={{ paddingLeft: \"10px\", fontWeight: \"normal\" }}>\n            {singleData?.rider_documents === null\n              ? \"N/A\"\n              : singleData?.rider_documents?.status}\n          </span>\n        </div>\n        <div>\n          <Button\n            style={{ marginRight: \"5px\" }}\n            onClick={() => handleApprove(singleData?.id)}\n          >\n            Approve Documents\n          </Button>\n\n          <Button\n            danger\n            style={{ color: \"#ff0303\", marginRight: \"5px\" }}\n            onClick={handleShow}\n          >\n            Decline Documents\n          </Button>\n          <Button danger onClick={() => handleBlock(singleData?.id)}>\n            {singleData?.is_blocked === true ? \"Unblock Rider\" : \"Block Rider\"}\n          </Button>\n        </div>\n      </div>\n      <Modal show={show} onHide={handleClose} size=\"md\">\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Reason for rejection</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicAddress\">\n              <Form.Label>\n                Reason for rejection <span style={{ color: \"red\" }}>*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"reason_for_rejection\"\n                placeholder=\"Enter reason\"\n                required\n                value={reason}\n                onChange={(e)=> setReason(e.target.value)}\n              />\n            </Form.Group>\n\n            <Button onClick={handleDecline}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </StyledContainer>\n  );\n};\n\nexport default RiderInfo;\n\nconst StyledContainer = styled.div`\n  .content {\n    color: #000;\n    padding-top: 20px;\n  }\n  .divider {\n    width: 100%;\n    border-color: white;\n    opacity: 0.08;\n  }\n`;\n","import { Avatar, Button, Card, Typography } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport { getOneRider } from \"../../redux/riderSlice\";\nimport UserInfoTabs from \"./RiderInfoTabs\";\nimport RiderInfo from \"./RiderInfo\";\nimport RiderInfoTabs from \"./RiderInfoTabs\";\n\nconst RiderDetails = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.rider);\n\n  useEffect(() => {\n    dispatch(getOneRider(id));\n  }, [id]);\n\nconsole.log(singleData)\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className=\"userInfo\">\n          <Card loading={loading} className=\"userInfo__card\" title=\"Rider Details\">\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to=\"#\" className=\"userInfo__back\">\n                <Button\n                  icon={<BsArrowLeft />}\n                  type=\"link\"\n                  className=\"hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300\"\n                  style={{ color: \"#FF0303\" }}\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              avatar={\n                <Avatar\n                  size={100}\n                  src={\n                    singleData?.profile_picture ||\n                    \"https://joeschmoe.io/api/v1/random\"\n                  }\n                />\n              }\n              title={\n                <Typography.Title level={2} className=\"text-3xl m-0 w-full\">{`${singleData?.full_name || \"\"}`}</Typography.Title>\n              }\n              \n            />\n\n            <RiderInfo singleData={singleData}/>\n          </Card>\n          <RiderInfoTabs rider={singleData} orders={singleData?.rider_orders} />\n        </div>\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default RiderDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n      color: #ff0303;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n`;\n","import React, { useState, useEffect } from 'react'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { notification } from 'antd'\nimport { createPickup, getAllPickup } from '../../redux/pickupchargeSlice'\n\nconst initialFormState = {\n  from: '',\n  to: '',\n  price: ''\n}\n\nfunction CreatePickupCharge() {\n  const [show, setShow] = useState(false)\n  const [pickupFormData, setpickupFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n  const [selected, setSelected] = useState([])\n\n  const handleClose = () => {\n    setShow(false)\n    setSelected([])\n  }\n  const handleShow = () => {\n    setShow(true)\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setpickupFormData({\n      ...pickupFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setpickupFormData({\n      from: '',\n      to: '',\n      price: ''\n    })\n  }\n\n  const handleCreateNotification = (e) => {\n    e.preventDefault()\n\n    const data = {\n      from: pickupFormData.from,\n      to: pickupFormData.to,\n      price: pickupFormData.price,\n    }\n\n    setConfirmLoading(true)\n    dispatch(createPickup(data))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'pickupcharge/create/fulfilled') {\n          dispatch(getAllPickup())\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'pickupcharge created successfully',\n          })\n        } else if (response.type === 'pickupcharge/create/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notification', 'Error creating pickupcharge, please try again')\n      })\n  }\n\n\n  return (\n    <>\n      <span onClick={handleShow}>Create pickup charge</span>\n\n      <Modal show={show} onHide={handleClose} size='md'>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create pickup charge</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateNotification}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Min (kg)</Form.Label>\n              <Form.Control\n                type='text'\n                name='from'\n                placeholder='Enter min value'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Max (kg)</Form.Label>\n              <Form.Control\n                type='text'\n                name='to'\n                placeholder='Enter max value'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='text'\n                name='price'\n                placeholder='Enter price'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n    \n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreatePickupCharge\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { useEffect } from 'react'\nimport { notification } from 'antd'\nimport {getAllPickup, editPickup} from '../../redux/pickupchargeSlice'\n\nconst initialFormState = {\n  from: '',\n  to: '',\n  price: ''\n}\n\nfunction UpdatePickupCharge({ pickup }) {\n  const [show, setShow] = useState(false)\n  const [pickupFormData, setpickupFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setpickupFormData({\n      ...pickupFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setpickupFormData({\n      from: pickup?.from || '',\n      to: pickup?.to || '',\n      price: pickup?.price || '',\n\n    });\n\n  }, [pickup]);\n  \n  const clearFormData = () => {\n    setpickupFormData({\n      from: '',\n      to: '',\n      price: ''\n    })\n  }\n\n  const handleEditpickup = (e) => {\n    e.preventDefault()\n    const data = {\n      from: pickupFormData?.from,\n      to: pickupFormData?.to,\n      price: pickupFormData?.price,\n      pickup_charge_id: pickup?.id,\n    };\n\n\n    setConfirmLoading(true)\n    dispatch(editPickup(data))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'pickupcharge/edit/fulfilled') {\n          dispatch(getAllPickup())\n          handleClose()\n            clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'pickup updated successfully',\n          })\n        } else if (response.type === 'pickupcharge/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n          console.log('error notification', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notification', 'Error updating pickup, please try again', error)\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit pickup charge</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditpickup}>\n          <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Min (kg)</Form.Label>\n              <Form.Control\n                type='text'\n                name='from'\n                defaultValue={pickupFormData.from}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Max (kg)</Form.Label>\n              <Form.Control\n                type='text'\n                name='to'\n                defaultValue={pickupFormData.to}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='text'\n                name='price'\n                defaultValue={pickupFormData.price}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdatePickupCharge\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdatePickupCharge from './UpdatePickupCharge'\n\nconst PickupChargeTable = ({ data, loading, handleDelete, handleEdit }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Min (kg)',\n      dataIndex: 'from',\n      key: 'from',\n      ...getColumnSearchProps({\n        dataIndex: 'from',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n  \n\n    {\n      title: 'Max (kg)',\n      dataIndex: 'to',\n      key: 'to',\n      ...getColumnSearchProps({\n        dataIndex: 'to',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      ...getColumnSearchProps({\n        dataIndex: 'price',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n          <Button style={{ marginRight: '5px' }} title='Edit Pricing Parameter'>\n              <UpdatePickupCharge pickup={singleData} />\n            </Button>\n            <Button\n              danger\n              onClick={() => handleDelete(singleData)}\n              title='Permanently delete charge'\n            >\n              delete\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default PickupChargeTable\n","import React, { useEffect } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deletePickup, getAllPickup } from \"../../redux/pickupchargeSlice\";\nimport CreatePickupCharge from \"./CreatePickupCharge\";\nimport PickupChargeTable from \"./PickupChargeTable\";\n\nconst ListPickupCharges = () => {\n  const { pickup } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllPickup());\n  }, []);\n\n  console.log(pickup);\n\n\n  const handleDelete = ({ id }) => {\n    if (\n      !window.confirm(\n        \"Do You want to permanently delete the selected pickup charge?\"\n      )\n    ) {\n      return;\n    }\n\n    dispatch(deletePickup(id))\n      .then((response) => {\n        if (response.type === \"pickupcharge/delete/fulfilled\") {\n          dispatch(getAllPickup());\n          notification.success({\n            message: \" charge deleted successfully\",\n          });\n        } else if (response.type === \"pickupcharge/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting charge, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting charge, please try again later\",\n        });\n      });\n  };\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          <Button key=\"CreateAdmin\">\n            <CreatePickupCharge />\n          </Button>,\n        ]}\n        title=\"Pickup Charges\"\n      />\n      <PickupChargeTable\n        data={pickup?.data}\n        loading={pickup.loading}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default ListPickupCharges;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { notification } from \"antd\";\nimport { createLocation, getAllLocations } from \"../../redux/locationSlice\";\n\nimport \"./location.css\";\n\nconst CreateLocation = () => {\n  const initialFormState = {\n    name: \"\",\n  };\n\n\n  const [show, setShow] = useState(false);\n  const [locationFormData, setlocationFormData] = useState(initialFormState);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setShow(false);\n    resetForm();\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n\n  const resetForm = () => {\n    setlocationFormData({\n      name: \"\"\n    });\n\n  };\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setlocationFormData({\n      ...locationFormData,\n      [name]: value,\n    });\n  };\n\n\n  const handleCreateLocation = (e) => {\n    e.preventDefault();\n\n\n    var formData = new FormData();\n    formData.append(\"name\", locationFormData.name);\n\n    setConfirmLoading(true);\n\n    dispatch(createLocation(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"location/create/fulfilled\") {\n          dispatch(getAllLocations());\n          handleClose();\n          resetForm();\n          notification.success({\n            message: \"location created successfully\",\n          });\n        } else if (response.type === \"location/create/rejected\") {\n          notification.error({\n            message: \"Error creating location\",\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create Location</span>\n\n      <Modal show={show} onHide={handleClose} size=\"md\">\n        <Modal.Header closeButton onClick={resetForm}>\n          <Modal.Title>Create location</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateLocation}>\n              \n          <Form.Group className=\"mb-3\" controlId=\"formBasicAddress\">\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"name\"\nplaceholder=\"Enter location\"                      onChange={(evt) => handleInputChange(evt)}\n                    />\n                  </Form.Group>\n \n\n            <Button variant=\"primary\" type=\"submit\" disabled={confirmLoading} style={{background: '#ff0303', border: '1px solid #ff0303'}}>\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default CreateLocation;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch } from \"react-redux\";\nimport Messages from \"../../ToastMessages/Messages\";\nimport { useEffect } from \"react\";\nimport { notification } from \"antd\";\nimport { getAllLocations, editLocation } from \"../../redux/locationSlice\";\n\nimport \"./location.css\";\n\nconst initialFormState = {\n  name: \"\",\n};\n\nfunction UpdateHubLocation({ location }) {\n  const [show, setShow] = useState(false);\n  const [locationFormData, setlocationFormData] = useState(initialFormState);\n\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setlocationFormData({\n      ...locationFormData,\n      [name]: value,\n    });\n  };\n\n\n  useEffect(() => {\n    setlocationFormData({\n      name: location?.name || \"\",\n    });\n  }, [location?.name]);\n\n  const clearFormData = () => {\n    setlocationFormData({\n      name: \"\",\n    });\n  };\n\n  const handleEditlocation = (e) => {\n    e.preventDefault();\n\n    var formData = new FormData();\n\n\n    formData.append(\"name\", locationFormData.name);\n\n    setConfirmLoading(true);\n    dispatch(editLocation(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"location/edit/fulfilled\") {\n          dispatch(getAllLocations());\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"location updated successfully\",\n          });\n        } else if (response.type === \"location/edit/rejected\") {\n          notification.error({\n            message: response?.error?.message,\n          });\n          console.log(\"error notification\", response?.error?.message);\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error updating location, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit Location</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditlocation}>\n\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicAddress\">\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"name\"\n                      defaultValue={locationFormData?.name}\n                      onChange={(evt) => handleInputChange(evt)}\n                    />\n                  </Form.Group>\n  \n\n            <Button style={{background: '#ff0303', border: '1px solid #ff0303'}}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default UpdateHubLocation;\n","import { Avatar, Button, Table, Switch } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateHubLocation from './UpdateLocation'\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst LocationTable = ({ data, loading, hideShowLocation }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const { admin } = ExpirySession.get(\"user\");\n\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps({\n        dataIndex: 'name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Hide/Unhide',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n\n        {(admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ) ? ( <div>\n          {/* <Button style={{ marginRight: '5px' }} title='Edit Location'>\n              <UpdateHubLocation location={singleData} />\n            </Button> */}\n\n  \n\n\n            <Switch style={{backgroundColor: '#ff0303', marginLeft: '10px'}}\n            \n            checked={singleData?.hidden === 0}\n            onChange={() => hideShowLocation(singleData?.id)}\n          />\n         \n          </div>) : 'N/a'}\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default LocationTable\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hideShowLocation, getAllLocations } from \"../../redux/locationSlice\";\nimport CreateLocation from \"./CreateLocation\";\nimport LocationTable from \"./LocationTable\";\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst ListLocations = () => {\n  const { location } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllLocations());\n  }, []);\n\n\nconst [isChecked, setIsChecked] = useState();\n\n\n  const handleHideShowLocation = (id) => {\n  \n    dispatch(hideShowLocation(id))\n    .then((response)=> {\n      if (response.type === \"location/hideShowLocation/fulfilled\") {\n        setIsChecked(!isChecked)\n        dispatch(getAllLocations());\n              notification.success({\n                message: \" location updated successfully\",\n              });\n            } else if (response.type === \"location/hideShowLocation/rejected\") {\n              notification.error({\n                message:\n                  response?.payload?.message ||\n                  \"Error updating location, please try again\",\n              });\n            }\n            \n    })\n    .catch((error) => {\n          notification.error({\n            message: \"Error deleting location, please try again later\",\n          });\n        });\n    \n    \n      };\n\n      const { admin } = ExpirySession.get(\"user\");\n\n\n  return (\n    <div>\n            {admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? ( <PageHeader\n        extra={[\n          <Button key=\"CreateLocations\" style={{color: '#ff0303', border: '1px solid #ff0303'}}>\n            <CreateLocation />\n          </Button>,\n        ]}\n        title=\"Locations\"\n      />) :  <PageHeader\n      extra={[\n   \n      ]}\n      title=\"Locations\"\n    />}\n\n     \n\n      {location?.data && (  <LocationTable\n        data={location?.data}\n        loading={location.loading}\n        hideShowLocation={handleHideShowLocation}\n      />)}\n    \n    </div>\n  );\n};\n\nexport default ListLocations;\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { useEffect } from 'react'\nimport { notification } from 'antd'\nimport {getAllPricingParameters, editPricingParameter} from '../../redux/pricingparameterSlice'\n\nconst initialFormState = {\n  value: '',\n  status: '',\n}\n\nfunction UpdatePricingParameter({ pricing }) {\n  const [show, setShow] = useState(false)\n  const [pricingFormData, setpricingFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setpricingFormData({\n      ...pricingFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setpricingFormData({\n      value: pricing?.value || '',\n      status: pricing?.status || 'enabled',\n    });\n\n  }, [pricing]);\n  \n  const clearFormData = () => {\n    setpricingFormData({\n      value: '',\n      status: '',\n    })\n  }\n\n  const handleEditPricing = (e) => {\n    e.preventDefault()\n    const data = {\n      label: pricing.label,\n      value: pricingFormData.value,\n      status: pricingFormData.status,\n      option: pricing.option,\n      pricing_parameter_id: pricing?.id,\n    };\n\n\n    setConfirmLoading(true)\n    dispatch(editPricingParameter(data))\n      .then((response) => {\n        console.log(response)\n        setConfirmLoading(false)\n        if (response.type === 'pricingparameter/edit/fulfilled') {\n          dispatch(getAllPricingParameters())\n          handleClose()\n            clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'Pricing parameter updated successfully',\n          })\n        } else if (response.type === 'pricingparameter/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n          console.log('error notification', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notification', 'Error updating Pricing parameter, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit Pricing Parameter</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditPricing}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>VAT(%)</Form.Label>\n              <Form.Control\n                type='text'\n                name='value'\n                defaultValue={pricingFormData.value}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicStatus'>\n          <Form.Label>Status</Form.Label>\n          <Form.Select\n            name='status'\n            onChange={(evt) => handleInputChange(evt)}\n            aria-label='Default select example'\n            required\n            value={pricingFormData.status}\n          >\n            <option value=''>Select status</option>\n            <option value='Enabled'>Enabled</option>\n            <option value='Disabled'>Disabled</option>\n          </Form.Select>\n        </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdatePricingParameter\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdatePricingParameter from './UpdatePricingParameter'\n\nconst PricingParametersTable = ({ data, loading, handleDelete, handleEdit }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Label',\n      dataIndex: 'label',\n      key: 'label',\n      ...getColumnSearchProps({\n        dataIndex: 'label',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Value',\n      dataIndex: 'value',\n      key: 'value',\n      ...getColumnSearchProps({\n        dataIndex: 'value',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      ...getColumnSearchProps({\n        dataIndex: 'status',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n          <Button style={{ marginRight: '5px' }} title='Edit Pricing Parameter'>\n              <UpdatePricingParameter pricing={singleData} />\n            </Button>\n\n          </div>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default PricingParametersTable\n","import React, { useEffect } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllPricingParameters } from \"../../redux/pricingparameterSlice\";\nimport PricingParametersTable from \"./PricingParametersTable\";\n\nconst ListPricingParameters = () => {\n  const { pricing } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllPricingParameters());\n  }, []);\n\n  console.log(pricing);\n\n  const handleEdit = ({ id }) => {\n \n  }\n\n  return (\n    <div>\n      <PageHeader\n        extra={[\n          // <Button key=\"CreateHub\">\n          //   <CreatePricingParameters />\n          // </Button>\n        ]}\n        title=\"Pricing Parameter\"\n      />\n      <PricingParametersTable\n        data={pricing?.data}\n        loading={pricing.loading}\n        handleEdit={handleEdit}\n      />\n    </div>\n  );\n};\n\nexport default ListPricingParameters;\n","import { Button, Table, Avatar } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\n\nconst ChatTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [\n    {\n      title: \"Profile picture\",\n      key: \"id\",\n      dataIndex: \"profile_picture\",\n      align: \"center\",\n      render: (profile_picture) => (\n        <Link to={`${profile_picture}`}>\n          {profile_picture ? (\n            <img\n              style={{\n                width: \"60px\",\n                height: \"60px\",\n                borderRadius: \"50%\",\n                objectFit: \"cover\",\n              }}\n              src={profile_picture}\n              height={60}\n              width={60}\n              alt=\"avatar\"\n            />\n          ) : (\n            <Avatar\n              style={{ backgroundColor: \"#3f8bcaa1\" }}\n              icon={<UserOutlined />}\n              size={50}\n            />\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: \"Full Name\",\n      dataIndex: \"full_name\",\n      key: \"full_name\",\n      ...getColumnSearchProps({\n        dataIndex: \"full_name\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: \"Last message\",\n      dataIndex: \"last_message\",\n      key: \"last_message\",\n      render: (last_message) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {last_message.body && last_message.body?.substring(0, 80)}{\" \"}\n          {last_message.body && last_message.body?.length >= 80 && \"...\"}{\" \"}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      ...getColumnSearchProps({\n        dataIndex: \"created_at\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(created_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default ChatTable;\n","import { notification, PageHeader } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport ChatTable from './ChatTable'\nimport {\n  getAllChats,\n} from '../../redux/chatSlice'\n\nconst Chats = () => {\n  const { chat } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    dispatch(getAllChats())\n  }, [])\n\n  console.log(chat)\n\n  return (\n    <div>\n      <PageHeader title='Chats' />\n      <ChatTable\n        data={chat?.data}\n        loading={chat?.loading}\n        \n      />\n    </div>\n  )\n}\n\nexport default Chats\n","import { Avatar, Button, Card, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport { getOneNotification } from '../../redux/notificationSlice'\nimport CardGroup from 'react-bootstrap/CardGroup'\n\nconst NotificationDetails = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { singleData, loading } = useSelector((state) => state.notifications)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getOneNotification(id))\n  }, [id])\n\n  console.log('single notification', singleData)\n\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card\n            loading={loading}\n            className='userInfo__card'\n            title='Banner Details'\n            hoverable\n            // style={{ width: 240 }}\n            // cover={<img alt='example' src={singleData.banner} />}\n          >\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  style={{ color: \"#FF0303\" }}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              description={\n                <div className='metaDescription'>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Email type:</strong>\n                    &nbsp;\n                    {singleData?.type || 'N/A'}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Title:</strong>\n                    &nbsp;\n                    {singleData?.message_title || 'N/A'}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Message Content:</strong>\n                    &nbsp;\n                    {singleData?.message_content || 'N/A'}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default NotificationDetails\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`\n","import { Avatar, Button, Card, Typography, notification } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { getOneCategory } from \"../../redux/categorySlice\";\n\nconst CategoryDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.categories);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOneCategory(id));\n  }, [id]);\n\n  console.log(\"single category\", singleData);\n\n \n\n  return (\n    <StyledContainer>\n      <div>\n        <div className=\"userInfo\">\n        <Card loading={loading} className='userInfo__card' title='Company Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  style={{color: '#ff0303'}}\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${\n                  `${singleData?.name}` || ''\n                } `}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n                  {\n                    <Avatar\n                      size={100}\n                      src={singleData?.thumbnail || 'https://joeschmoe.io/api/v1/random'}\n                    />\n                  }\n                \n            \n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail mt-5'>\n                    <strong>Delivery:</strong> {singleData?.delivery_option === 1 ? 'Yes': 'No'}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Discount Option:</strong> {singleData?.discount_option === 1 ? 'Yes': 'No'}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Discount Type:</strong> {singleData?.discount_type}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Discount Value:</strong> {singleData?.discount_value}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Band name:</strong> {singleData?.band?.name}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Band description:</strong> {singleData?.band?.description}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Bulk discount percentage:</strong> {singleData?.band?.bulk_discount_percentage}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Bulk discount amount:</strong> ₦{singleData?.band?.bulk_discount_amount}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default CategoryDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch } from \"react-redux\";\nimport { createBand, getAllBands } from \"../../redux/bandSlice\";\nimport { notification, Avatar } from \"antd\";\n\nfunction CreateBand() {\n  const initialFormState = {\n    name: \"\",\n    description: \"\",\n    minimum: \"\",\n    discount_enabled: \"\",\n    bulk_discount_amount: \"\",\n    bulk_discount_percentage: \"\",\n    general_discount: \"\",\n    free_delivery_threshold: \"\"\n  };\n\n  const [show, setShow] = useState(false);\n\n  const [bandFormData, setbandFormData] = useState(initialFormState);\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setbandFormData({\n      ...bandFormData,\n      [name]: value,\n    });\n  };\n\n  const clearFormData = () => {\n    setbandFormData({\n      name: \"\",\n      description: \"\",\n      minimum: \"\",\n      discount_enabled: \"\",\n      bulk_discount_amount: \"\",\n      bulk_discount_percentage: \"\",\n      general_discount: \"\",\n      free_delivery_threshold:\"\"\n    });\n  };\n\n  const handleCreateBand = (e) => {\n    e.preventDefault();\n    const formData = {\n      name: bandFormData.name,\n      description: bandFormData.description,\n      minimum: bandFormData.minimum,\n      discount_enabled: bandFormData.discount_enabled,\n      bulk_discount_amount: bandFormData.bulk_discount_amount,\n      bulk_discount_percentage: bandFormData.bulk_discount_percentage,\n      general_discount: bandFormData.general_discount,\n      free_delivery_threshold: bandFormData.free_delivery_threshold\n    };\n\n    setConfirmLoading(true);\n    dispatch(createBand(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"band/create/fulfilled\") {\n          dispatch(getAllBands());\n          handleClose();\n          clearFormData();\n          console.log(\"response act\", response);\n          notification.success({\n            message: \"Band created successfully\",\n          });\n        } else if (response.type === \"band/create/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notificatom\",\n          \"Error creating band, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create band</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create band</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateBand}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter band name\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>description </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Description\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Minimum spend</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"minimum\"\n                placeholder=\"Minimum spend\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Bulk discount amount </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"bulk_discount_amount\"\n                placeholder=\"Bulk discount amount\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Bulk discount percentage </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"bulk_discount_percentage\"\n                placeholder=\"Bulk discount percentage\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> General discount </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"general_discount\"\n                placeholder=\"General discount\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Discount enabled </Form.Label>\n              <Form.Select\n                name=\"discount_enabled\"\n                onChange={(evt) =>\n                  setbandFormData({\n                    ...bandFormData,\n                    discount_enabled: evt.target.value,\n                  })\n                }\n                aria-label=\"Default select example\"\n                value={bandFormData.discount_enabled}\n              >\n                <option>Select option to enable discount</option>\n\n                <option value=\"1\">Yes</option>\n                <option value=\"0\">No</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Free delivery threshold</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"free_delivery_threshold\"\n                placeholder=\"Free delivery threshold\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Button\n              style={{\n                marginTop: \"10px\",\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default CreateBand;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { editBand, getAllBands } from \"../../redux/bandSlice\";\nimport { notification } from \"antd\";\n\nconst initialFormState = {\n  name: \"\",\n  description: \"\",\n  minimum: \"\",\n  discount_enabled: \"\",\n  bulk_discount_amount: \"\",\n  bulk_discount_percentage: \"\",\n  general_discount: \"\",\n  free_delivery_threshold: \"\",\n};\n\nfunction UpdateBand({ band }) {\n  const [show, setShow] = useState(false);\n  const [bandFormData, setbandFormData] = useState(initialFormState);\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setbandFormData({\n      ...bandFormData,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    setbandFormData({\n      name: band.name,\n      description: band.description,\n      minimum: band.minimum,\n      discount_enabled: band.discount_enabled,\n      bulk_discount_amount: band.bulk_discount_amount,\n      bulk_discount_percentage: band.bulk_discount_percentage,\n      general_discount: band.general_discount,\n      free_delivery_threshold: band.free_delivery_threshold,\n    });\n  }, [band]);\n\n  const clearFormData = () => {\n    setbandFormData({\n      name: \"\",\n      description: \"\",\n      minimum: \"\",\n      discount_enabled: \"\",\n      bulk_discount_amount: \"\",\n      bulk_discount_percentage: \"\",\n      general_discount: \"\",\n      free_delivery_threshold: \"\",\n    });\n  };\n\n  const handleEditCategory = (e) => {\n    e.preventDefault();\n    const data = {\n      name: bandFormData.name,\n      description: bandFormData.description,\n      minimum: bandFormData.minimum,\n      discount_enabled:\n        bandFormData.discount_enabled === \"\"\n          ? bandFormData.discount_enabled\n          : \"0\",\n      bulk_discount_amount: bandFormData.bulk_discount_amount,\n      bulk_discount_percentage: bandFormData.bulk_discount_percentage,\n      general_discount: bandFormData.general_discount,\n      free_delivery_threshold: bandFormData.free_delivery_threshold,\n      band_id: band?.id,\n    };\n\n    setConfirmLoading(true);\n    dispatch(editBand(data))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"band/edit/fulfilled\") {\n          dispatch(getAllBands());\n          handleClose();\n          //   clearFormData()\n          notification.success({\n            message: \"band updated successfully\",\n          });\n        } else if (response.type === \"band/edit/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n          console.log(\"error notification\", response?.payload?.message);\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error updating band, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit band</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditCategory}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter band name\"\n                defaultValue={bandFormData.name}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>description </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Description\"\n                defaultValue={bandFormData.description}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label> Minimum </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"minimum\"\n                placeholder=\"Minimum\"\n                defaultValue={bandFormData.minimum}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label> Bulk discount amount </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"bulk_discount_amount\"\n                placeholder=\"Bulk discount amount\"\n                defaultValue={bandFormData.bulk_discount_amount}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label> Bulk discount percentage </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"bulk_discount_percentage\"\n                placeholder=\"Bulk discount percentage\"\n                defaultValue={bandFormData.bulk_discount_percentage}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label> General discount </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"general_discount\"\n                placeholder=\"General discount\"\n                defaultValue={bandFormData.general_discount}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Discount Enabled</Form.Label>\n              <Form.Select\n                name=\"discount_enabled\"\n                onChange={(evt) =>\n                  setbandFormData({\n                    ...bandFormData,\n                    discount_enabled: evt.target.value,\n                  })\n                }\n                aria-label=\"Default select example\"\n                value={bandFormData.discount_enabled}\n              >\n                <option value=\"1\">Yes</option>\n                <option value=\"0\">No</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Free delivery threshold</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"free_delivery_threshold\"\n                placeholder=\"Free delivery threshold\"\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={bandFormData.free_delivery_threshold}\n              />\n            </Form.Group>\n\n            <Button\n              style={{\n                marginTop: \"10px\",\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default UpdateBand;\n","import { Avatar, Button, Table, Switch } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\nimport UpdateBand from \"./UpdateBand\";\nimport { NumericFormat } from \"react-number-format\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst BandTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      ...getColumnSearchProps({\n        dataIndex: \"name\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\",\n      render: (description) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {description && description?.substring(0, 80)}{\" \"}\n          {description && description?.length >= 80 && \"...\"}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Discount enabled\",\n      dataIndex: \"discount_enabled\",\n      key: \"discount_enabled\",\n      ...getColumnSearchProps({\n        dataIndex: \"discount_enabled\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (discount_enabled) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {discount_enabled === 1 ? \"Yes\" : \"No\"}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Minimum\",\n      dataIndex: \"minimum\",\n      key: \"minimum\",\n      ...getColumnSearchProps({\n        dataIndex: \"minimum\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: \"Free delivery threshold\",\n      dataIndex: \"free_delivery_threshold\",\n      key: \"free_delivery_threshold\",\n      render: (free_delivery_threshold) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          <NumericFormat\n            value={free_delivery_threshold}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"₦\"}\n          />\n        </span>\n      ),\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      ...getColumnSearchProps({\n        dataIndex: \"created_at\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(created_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Actions\",\n      key: \"id\",\n      align: \"center\",\n      render: (singleData) => (\n        <>\n          {(admin?.level === 0 || admin?.level === 1) && (\n            <div>\n              {\" \"}\n              <Button\n                style={{ marginRight: \"5px\" }}\n                title=\"View category details\"\n              >\n                <Link to={`/bands/details/${singleData?.id}`}>{\"View\"}</Link>\n              </Button>\n              <Button style={{ marginRight: \"5px\" }} title=\"Edit band\">\n                <UpdateBand band={singleData} />\n              </Button>\n            </div>\n          )}\n\n          {(admin?.level === 2 || admin?.level === 3) && (\n            <div>\n              {\" \"}\n              <Button\n                style={{ marginRight: \"5px\" }}\n                title=\"View band details\"\n              >\n                <Link to={`/bands/details/${singleData?.id}`}>{\"View\"}</Link>\n              </Button>\n            </div>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default BandTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getAllBands } from \"../../redux/bandSlice\";\nimport CreateBand from \"./CreateBand\";\nimport BandTable from \"./BandTable\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst Bands = () => {\n  const { band } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAllBands());\n  }, []);\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  return (\n    <div>\n      {admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? (\n        <PageHeader\n          extra={[\n            <Button\n              key=\"Createband\"\n              style={{ color: \"#ff0303\", border: \"1px solid #ff0303\" }}\n            >\n              <CreateBand />\n            </Button>,\n          ]}\n          title=\"Bands\"\n        />\n      ) : (\n        <PageHeader extra={[]} title=\"Bands\" />\n      )}\n\n      <BandTable data={band.data} loading={band.loading} />\n    </div>\n  );\n};\n\nexport default Bands;\n","import { Avatar, Button, Card, Typography, notification } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { getOneBand } from \"../../redux/bandSlice\";\n\nconst BandDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.band);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOneBand(id));\n  }, [id]);\n\n \n\n  return (\n    <StyledContainer>\n      <div>\n        <div className=\"userInfo\">\n        <Card loading={loading} className='userInfo__card' title='Band Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  style={{color: '#ff0303'}}\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${\n                  `${singleData?.name}` || ''\n                } `}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n          \n                \n            \n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail mt-5'>\n                   <strong>{singleData?.description}</strong>\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Discount Enabled:</strong> {singleData?.discount_enabled === 1 ? 'Yes': 'No'}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>General Discount:</strong> {singleData?.general_discount || \"N/A\"}\n                  </div>\n\n                \n                 \n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Bulk discount percentage:</strong> {singleData?.bulk_discount_percentage || \"N/A\"}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Minimum :</strong> {singleData?.minimum}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default BandDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch } from \"react-redux\";\nimport { createCoupon, getAllCoupons } from \"../../redux/couponSlice\";\nimport { notification, Avatar } from \"antd\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, Col } from \"react-bootstrap\";\n\nfunction CreateCoupon() {\n  const initialFormState = {\n    code: \"\",\n    type: \"\",\n    value: \"\",\n    start_date: \"\",\n    end_date: \"\",\n  };\n\n  const [show, setShow] = useState(false);\n\n  const [couponFormData, setCouponFormData] = useState(initialFormState);\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\n  const [selectedEndDate, setSelectedEndDate] = useState(null);\n\n  const handleStartDateChange = (date) => {\n    setSelectedStartDate(date);\n  };\n\n  const handleEndDateChange = (date) => {\n    setSelectedEndDate(date);\n  };\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setCouponFormData({\n      ...couponFormData,\n      [name]: value,\n    });\n  };\n\n  const clearFormData = () => {\n    setCouponFormData({\n      code: \"\",\n      type: \"\",\n      value: \"\",\n      start_date: \"\",\n      end_date: \"\",\n    });\n  };\n\n  const handleCreateCoupon = (e) => {\n    e.preventDefault();\n\n    const formatDate = (date) => {\n      const isoString = date.toISOString();\n      return isoString.slice(0, 10);\n    };\n  \n\n    const formData = {\n      code: couponFormData.code,\n      type: couponFormData.type === \"1\" ? \"percentage\" : \"amount\",\n      value: couponFormData.value,\n      start_date: formatDate(selectedStartDate),\n      end_date: formatDate(selectedEndDate),\n    };\n\n    setConfirmLoading(true);\n    dispatch(createCoupon(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"coupon/create/fulfilled\") {\n          dispatch(getAllCoupons());\n          handleClose();\n          clearFormData();\n          console.log(\"response act\", response);\n          notification.success({\n            message: \"coupon created successfully\",\n          });\n        } else if (response.type === \"coupon/create/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error creating coupon, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create coupon</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create coupon</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateCoupon}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Code</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"code\"\n                placeholder=\"Enter code\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Value </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"value\"\n                placeholder=\"Enter value\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Type </Form.Label>\n              <Form.Select\n                name=\"type\"\n                onChange={(evt) =>\n                  setCouponFormData({\n                    ...couponFormData,\n                    type: evt.target.value,\n                  })\n                }\n                aria-label=\"Default select example\"\n                value={couponFormData.type}\n              >\n                <option>Select type</option>\n\n                <option value=\"1\">Percentage</option>\n                <option value=\"0\">Amount</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Select start date</Form.Label>\n                  <Col sm=\"10\">\n                    <DatePicker\n                      selected={selectedStartDate}\n                      onChange={handleStartDateChange}\n                      dateFormat=\"yyyy/MM/dd\"\n                      className=\"form-control\"\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Select end date</Form.Label>\n                  <Col sm=\"10\">\n                    <DatePicker\n                      selected={selectedEndDate}\n                      onChange={handleEndDateChange}\n                      dateFormat=\"yyyy/MM/dd\"\n                      className=\"form-control\"\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Button\n              style={{\n                marginTop: \"10px\",\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default CreateCoupon;\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { editCoupon, getAllCoupons } from '../../redux/couponSlice'\nimport { notification } from 'antd'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst initialFormState = {\n  code: \"\",\n  type: \"\",\n  value: \"\",\n  start_date: \"\",\n  end_date: \"\",\n}\n\nfunction UpdateCoupon({ coupon }) {\n  const [show, setShow] = useState(false)\n  const [couponFormData, setCouponFormData] = useState(initialFormState)\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\n  const [selectedEndDate, setSelectedEndDate] = useState(null);\n\n  const handleStartDateChange = (date) => {\n    setSelectedStartDate(date);\n  };\n\n  const handleEndDateChange = (date) => {\n    setSelectedEndDate(date);\n  };\n\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setCouponFormData({\n      ...couponFormData,\n      [name]: value,\n    })\n  }\n\n\n  useEffect(() => {\n    setCouponFormData({\n      code: coupon.code,\n      type: coupon.type === \"percentage\" ? \"1\" : \"0\",\n      value: coupon.value,\n      start_date: coupon.start_date,\n      end_date: coupon.end_date,\n   \n    })\n  }, [coupon])\n\n  const clearFormData = () => {\n    setCouponFormData({\n      code: \"\",\n      type: \"\",\n      value: \"\",\n      start_date: \"\",\n      end_date: \"\",\n    });\n  };\n\n  const formatDate = (date) => {\n    const isoString = date.toISOString();\n    return isoString.slice(0, 10);\n  };\n\n  const handleEditCoupon = (e) => {\n    e.preventDefault()\n    const data = {\n      code: couponFormData.code,\n      type: couponFormData.type === \"1\" ? \"percentage\" : \"amount\",\n      value: couponFormData.value,\n      start_date: formatDate(selectedStartDate),\n      end_date: formatDate(selectedEndDate),\n      coupon_id: coupon?.id\n    };\n\n\n    setConfirmLoading(true)\n    dispatch(editCoupon(data))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'coupon/edit/fulfilled') {\n          dispatch(getAllCoupons())\n          handleClose()\n          //   clearFormData()\n          notification.success({\n            message: 'coupon updated successfully',\n          })\n        } else if (response.type === 'coupon/edit/rejected') {\n          notification.error({\n            message: response?.payload?.message,\n          })\n          console.log('error notification', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notification', 'Error updating coupon, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit coupon</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form onSubmit={handleEditCoupon}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Code</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"code\"\n                placeholder=\"Enter code\"\n                defaultValue={couponFormData?.code}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Value </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"value\"\n                placeholder=\"Enter value\"\n                defaultValue={couponFormData?.value}\n\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Type </Form.Label>\n              <Form.Select\n                name=\"type\"\n                onChange={(evt) =>\n                  setCouponFormData({\n                    ...couponFormData,\n                    type: evt.target.value,\n                  })\n                }\n                aria-label=\"Default select example\"\n                value={couponFormData.type}\n              >\n                <option>Select type</option>\n\n                <option value=\"1\">Percentage</option>\n                <option value=\"0\">Amount</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Select start date</Form.Label>\n                  <Col sm=\"10\">\n                    <DatePicker\n                      selected={selectedStartDate}\n                      onChange={handleStartDateChange}\n                      dateFormat=\"yyyy/MM/dd\"\n                      className=\"form-control\"\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Select end date</Form.Label>\n                  <Col sm=\"10\">\n                    <DatePicker\n                      selected={selectedEndDate}\n                      onChange={handleEndDateChange}\n                      dateFormat=\"yyyy/MM/dd\"\n                      className=\"form-control\"\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Button\n              style={{\n                marginTop: \"10px\",\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateCoupon\n","import { Avatar, Button, Table, Switch } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\nimport UpdateCoupon from \"./UpdateCoupon\";\nimport { NumericFormat } from \"react-number-format\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst CouponTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  const columns = [\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      key: \"code\",\n      ...getColumnSearchProps({\n        dataIndex: \"code\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: \"Value\",\n      dataIndex: \"value\",\n      key: \"value\",\n      render: (value) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {/* <NumericFormat\n            value={value}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /> */}\n\n          {value}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n      ...getColumnSearchProps({\n        dataIndex: \"type\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: \"Start date\",\n      dataIndex: \"start_date\",\n      key: \"start_date\",\n      ...getColumnSearchProps({\n        dataIndex: \"start_date\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (start_date) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(start_date).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n    {\n      title: \"End date\",\n      dataIndex: \"end_date\",\n      key: \"end_date\",\n      ...getColumnSearchProps({\n        dataIndex: \"end_date\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (end_date) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(end_date).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      ...getColumnSearchProps({\n        dataIndex: \"created_at\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(created_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Actions\",\n      key: \"id\",\n      align: \"center\",\n      render: (singleData) => (\n        <>\n\n{admin?.level === 0 && ( <div>\n\n<Button\n  style={{ marginRight: \"5px\" }}\n  title=\"View category details\"\n>\n  <Link to={`/coupons/details/${singleData?.id}`}>{\"View\"}</Link>\n</Button>\n\n<Button style={{ marginRight: \"5px\" }} title=\"Edit timeslot\">\n  <UpdateCoupon coupon={singleData} />\n</Button>\n\n<Button\n  style={{ marginRight: \"5px\" }}\n  danger\n  onClick={() => handleDelete(singleData)}\n  title=\"delete coupon\"\n>\n  delete\n</Button>\n</div>)}\n\n{admin?.level === 1 && ( <div>\n\n<Button\n  style={{ marginRight: \"5px\" }}\n  title=\"View category details\"\n>\n  <Link to={`/coupons/details/${singleData?.id}`}>{\"View\"}</Link>\n</Button>\n\n<Button style={{ marginRight: \"5px\" }} title=\"Edit timeslot\">\n  <UpdateCoupon coupon={singleData} />\n</Button>\n\n</div>)}\n\n{(admin?.level === 2 || admin?.level === 3) && ( <div>\n\n<Button\n  style={{ marginRight: \"5px\" }}\n  title=\"View category details\"\n>\n  <Link to={`/coupons/details/${singleData?.id}`}>{\"View\"}</Link>\n</Button>\n\n\n</div>)}\n\n         \n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default CouponTable;\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteCoupon, getAllCoupons } from '../../redux/couponSlice'\nimport CreateCoupon from './CreateCoupon'\nimport CouponTable from './CouponTable'\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst Coupons = () => {\n  const { coupon } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    dispatch(getAllCoupons())\n  }, [])\n\n  const handleDeleteCoupon = ({ id }) => {\n\n    if (\n      !window.confirm(\"Do You want to permanently delete the selected coupon?\")\n    ) {\n      return;\n    }\n\n    dispatch(deleteCoupon(id))\n      .then((response) => {\n        if (response.type === \"coupon/delete/fulfilled\") {\n          dispatch(getAllCoupons());\n          notification.success({\n            message: \" coupon deleted successfully\",\n          });\n        } else if (response.type === \"coupon/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting coupon, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting coupon, please try again later\",\n        });\n      });\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n\n  return (\n    <div>\n      {admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? ( <PageHeader\n        extra={[\n          <Button key='Createcoupon' style={{color: '#ff0303', border: '1px solid #ff0303'}}>\n            <CreateCoupon />\n          </Button>,\n        ]}\n        title='Coupons'\n      />) :  <PageHeader\n      extra={[\n      \n      ]}\n      title='Coupons'\n    />}\n\n\n     \n\n      {coupon?.data?.coupons && ( <CouponTable\n        data={coupon?.data?.coupons}\n        loading={coupon?.loading}\n        handleDelete={handleDeleteCoupon}\n      />)}\n     \n    </div>\n  )\n}\n\nexport default Coupons","import { Avatar, Button, Card, Typography, notification } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { getOneCoupon } from \"../../redux/couponSlice\";\nimport { NumericFormat } from 'react-number-format'\n\n\nconst CouponDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.coupon);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOneCoupon(id));\n  }, [id]);\n\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className=\"userInfo\">\n      {singleData?.coupon && (  <Card loading={loading} className='userInfo__card' title='Band Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  style={{color: '#ff0303'}}\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${\n                  `${singleData?.coupon.code}` || ''\n                } `}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n    \n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Amount:</strong>\n                    &nbsp;\n                    <NumericFormat\n                      value={singleData?.coupon.value}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'₦'}\n                    />\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Type:</strong> {singleData?.coupon.type || \"N/A\"}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Start date:</strong>{' '}\n                    {moment(singleData.coupon.start_date).format('DD MMM YYYY') || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>End date:</strong>{' '}\n                    {moment(singleData.coupon.end_date).format('DD MMM YYYY') || ''}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>)}\n        </div>\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default CouponDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createDeliveryLocation, getAllDeliveryLocations } from \"../../redux/deliveryLocationSlice\";\nimport { notification, Avatar } from \"antd\";\nimport { getAllBands } from \"../../redux/bandSlice\";\nimport { getAllLocations } from \"../../redux/locationSlice\";\n\nimport { Switch } from 'antd'\n\n\nfunction CreateDeliveryLocation() {\n  const initialFormState = {\n    location: \"\",\n    price: \"\",\n    band_id: \"\",\n    hidden: \"\",\n  };\n\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState(false);\n\n  const { band, location } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllBands());\n  }, []);\n\n  const [deliveryLocationFormData, setDeliveryLocationFormData] = useState(initialFormState);\n\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setDeliveryLocationFormData({\n      ...deliveryLocationFormData,\n      [name]: value,\n    });\n  };\n\n  const band_list =\n  band &&\n  band?.data?.map((band, key) => {\n    return (\n      <option value={band?.id} key={key}>\n        {band?.name}\n      </option>\n    );\n  });\n\n  const location_list =\n  location &&\n  location?.data?.map((location, key) => {\n    return (\n      <option value={location?.name} key={key}>\n        {location?.name}\n      </option>\n    );\n  });\n\n  const handleBandChange = (event) => {\n    const selectedValue = event.target.value;\n    setDeliveryLocationFormData({\n      ...deliveryLocationFormData,\n      band_id: selectedValue,\n    });\n  };\n\n  const handleLocationChange = (event) => {\n    const selectedValue = event.target.value;\n    setDeliveryLocationFormData({\n      ...deliveryLocationFormData,\n      location: selectedValue,\n    });\n  };\n\n\n  const clearFormData = () => {\n    setDeliveryLocationFormData({\n      location: \"\",\n      price: \"\",\n      band_id: \"\",\n      hidden: \"\",\n    });\n  };\n\n  const handleCreatedeliveryLocation = (e) => {\n    e.preventDefault();\n\n \n\n    const formData = {\n      location: deliveryLocationFormData.location,\n      hidden: checked === false ? \"1\" : \"0\",\n      price: deliveryLocationFormData.price,\n     band_id: deliveryLocationFormData.band_id\n    };\n\n    setConfirmLoading(true);\n    dispatch(createDeliveryLocation(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"deliveryLocation/create/fulfilled\") {\n          dispatch(getAllDeliveryLocations());\n          handleClose();\n          clearFormData();\n          console.log(\"response act\", response);\n          notification.success({\n            message: \"deliveryLocation created successfully\",\n          });\n        } else if (response.type === \"deliveryLocation/create/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error creating delivery location, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create delivery location</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create delivery location</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreatedeliveryLocation}>\n          <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select location</Form.Label>\n              <Form.Select\n                name=\"band_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleLocationChange}\n                value={deliveryLocationFormData.location}\n              >\n                <option>Select location</option>\n                {location_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Price </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"price\"\n                placeholder=\"Enter price\"\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select band</Form.Label>\n              <Form.Select\n                name=\"band_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleBandChange}\n                value={deliveryLocationFormData.band_id}\n              >\n                <option>Select band</option>\n                {band_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group  className=\"mt-4\" controlId=\"exampleForm.ControlSelect1\"\n            >\n            <Form.Label>Show location</Form.Label>\n            <Switch style={{backgroundColor: '#ff0303', marginLeft: '10px'}}\n            \n            checked={checked}\n            onChange={() => setChecked(!checked)}\n          />\n            </Form.Group>\n\n           \n            \n\n            <Button\n              style={{\n                marginTop: \"10px\",\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default CreateDeliveryLocation;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  editDeliveryLocation,\n  getAllDeliveryLocations,\n} from \"../../redux/deliveryLocationSlice\";\nimport { notification } from \"antd\";\nimport { getAllBands } from \"../../redux/bandSlice\";\nimport { getAllLocations } from \"../../redux/locationSlice\";\n\nimport { Switch } from \"antd\";\n\nconst initialFormState = {\n  location: \"\",\n  price: \"\",\n  band_id: \"\",\n  hidden: \"\",\n};\n\nfunction UpdateDeliveryLocation({ deliveryLocation }) {\n  const [show, setShow] = useState(false);\n  const [deliveryLocationFormData, setDeliveryLocationFormData] =\n    useState(initialFormState);\n\n  const { band, location } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllBands());\n  }, []);\n\n  const band_list =\n    band &&\n    band?.data?.map((band, key) => {\n      return (\n        <option value={band?.id} key={key}>\n          {band?.name}\n        </option>\n      );\n    });\n\n    const location_list =\n    location &&\n    location?.data?.map((location, key) => {\n      return (\n        <option value={location?.name} key={key}>\n          {location?.name}\n        </option>\n      );\n    });\n\n  const handleBandChange = (event) => {\n    const selectedValue = event.target.value;\n    setDeliveryLocationFormData({\n      ...deliveryLocationFormData,\n      band_id: selectedValue,\n    });\n  };\n\n  const handleLocationChange = (event) => {\n    const selectedValue = event.target.value;\n    setDeliveryLocationFormData({\n      ...deliveryLocationFormData,\n      location: selectedValue,\n    });\n  };\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setDeliveryLocationFormData({\n      ...deliveryLocationFormData,\n      [name]: value,\n    });\n  };\n\n  const [checked, setChecked] = useState(null);\n\n  useEffect(() => {\n    setDeliveryLocationFormData({\n      location: deliveryLocation.location,\n      price: deliveryLocation.price,\n      band_id: deliveryLocation.band_id,\n    });\n\n    deliveryLocation.hidden === 0 ? setChecked(true) : setChecked(false);\n  }, [deliveryLocation]);\n\n  const clearFormData = () => {\n    setDeliveryLocationFormData({\n      location: \"\",\n      price: \"\",\n      band_id: \"\",\n      hidden: \"\",\n    });\n  };\n\n  const handleEditdeliveryLocation = (e) => {\n    e.preventDefault();\n    const data = {\n      location: deliveryLocationFormData.location,\n      hidden: checked === false ? \"1\" : \"0\",\n      price: deliveryLocationFormData.price,\n      band_id: deliveryLocationFormData.band_id,\n      delivery_id: deliveryLocation.id\n    };\n\n    setConfirmLoading(true);\n    dispatch(editDeliveryLocation(data))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"deliveryLocation/edit/fulfilled\") {\n          dispatch(getAllDeliveryLocations());\n          handleClose();\n          //   clearFormData()\n          notification.success({\n            message: \"deliveryLocation updated successfully\",\n          });\n        } else if (response.type === \"deliveryLocation/edit/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n          console.log(\"error notification\", response?.payload?.message);\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error updating deliveryLocation, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit delivery location</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditdeliveryLocation}>\n          <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select location</Form.Label>\n              <Form.Select\n                name=\"band_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleLocationChange}\n                defaultValue={deliveryLocationFormData.location}\n\n                value={deliveryLocationFormData.location}\n              >\n                <option>Select location</option>\n                {location_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Price </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"price\"\n                placeholder=\"Enter price\"\n                defaultValue={deliveryLocationFormData.price}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select band</Form.Label>\n              <Form.Select\n                name=\"band_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleBandChange}\n                value={deliveryLocationFormData.band_id}\n                defaultValue={deliveryLocationFormData.band_id}\n              >\n                <option>Select band</option>\n                {band_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mt-4\" controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Show location</Form.Label>\n              <Switch\n                style={{ backgroundColor: \"#ff0303\", marginLeft: \"10px\" }}\n                checked={checked}\n                onChange={() => setChecked(!checked)}\n              />\n            </Form.Group>\n\n            <Button\n              style={{\n                marginTop: \"10px\",\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default UpdateDeliveryLocation;\n","import { Avatar, Button, Table, Switch } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\nimport UpdateDeliveryLocation from \"./UpdateDeliveryLocation\";\nimport { NumericFormat } from \"react-number-format\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst DeliveryLocationTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  const columns = [\n    {\n      title: \"Location\",\n      dataIndex: \"location\",\n      key: \"location\",\n      ...getColumnSearchProps({\n        dataIndex: \"location\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\",\n      render: (price) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          <NumericFormat\n            value={price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"₦\"}\n          />\n        </span>\n      ),\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      ...getColumnSearchProps({\n        dataIndex: \"created_at\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(created_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Actions\",\n      key: \"id\",\n      align: \"center\",\n      render: (singleData) => (\n        <>\n          {admin?.level === 0 && (\n            <div>\n              <Button\n                style={{ marginRight: \"5px\" }}\n                title=\"View category details\"\n              >\n                <Link to={`/delivery/details/${singleData?.id}`}>{\"View\"}</Link>\n              </Button>\n\n              <Button\n                style={{ marginRight: \"5px\" }}\n                title=\"Edit delivery location\"\n              >\n                <UpdateDeliveryLocation deliveryLocation={singleData} />\n              </Button>\n\n              <Button\n                danger\n                onClick={() => handleDelete(singleData)}\n                title=\"delete delivery location\"\n              >\n                delete\n              </Button>\n            </div>\n          )}\n\n          {admin?.level === 1 && (\n            <div>\n              <Button\n                style={{ marginRight: \"5px\" }}\n                title=\"View category details\"\n              >\n                <Link to={`/delivery/details/${singleData?.id}`}>{\"View\"}</Link>\n              </Button>\n\n              <Button\n                style={{ marginRight: \"5px\" }}\n                title=\"Edit delivery location\"\n              >\n                <UpdateDeliveryLocation deliveryLocation={singleData} />\n              </Button>\n            </div>\n          )}\n\n          {(admin?.level === 2 || admin?.level === 3) && (\n            <div>\n              <Button\n                style={{ marginRight: \"5px\" }}\n                title=\"View category details\"\n              >\n                <Link to={`/delivery/details/${singleData?.id}`}>{\"View\"}</Link>\n              </Button>\n            </div>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default DeliveryLocationTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteDeliveryLocation,\n  getAllDeliveryLocations,\n} from \"../../redux/deliveryLocationSlice\";\nimport CreateDeliveryLocation from \"./CreateDeliveryLocation\";\nimport DeliveryLocationTable from \"./DeliveryLocationTable\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst DeliveryLocations = () => {\n  const { deliveryLocation } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllDeliveryLocations());\n  }, []);\n\n  const handleDelete = ({ id }) => {\n    if (\n      !window.confirm(\n        \"Do You want to permanently delete the selected delivery location?\"\n      )\n    ) {\n      return;\n    }\n\n    dispatch(deleteDeliveryLocation(id))\n      .then((response) => {\n        if (response.type === \"deliveryLocation/delete/fulfilled\") {\n          dispatch(getAllDeliveryLocations());\n          notification.success({\n            message: \" Delivery Location deleted successfully\",\n          });\n        } else if (response.type === \"deliveryLocation/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting delivery Location, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting delivery location, please try again later\",\n        });\n      });\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  return (\n    <div>\n      {admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? (\n        <PageHeader\n          extra={[\n            <Button\n              key=\"Createcoupon\"\n              style={{ color: \"#ff0303\", border: \"1px solid #ff0303\" }}\n            >\n              <CreateDeliveryLocation />\n            </Button>,\n          ]}\n          title=\"Delivery location\"\n        />\n      ) : (\n        <PageHeader extra={[]} title=\"Delivery location\" />\n      )}\n\n      {deliveryLocation?.data?.locations && (\n        <DeliveryLocationTable\n          data={deliveryLocation?.data?.locations}\n          loading={deliveryLocation?.loading}\n          handleDelete={handleDelete}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DeliveryLocations;\n","import { Avatar, Button, Card, Typography, notification } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { getOneDeliveryLocation } from \"../../redux/deliveryLocationSlice\";\nimport { NumericFormat } from 'react-number-format'\nimport { getAllBands } from \"../../redux/bandSlice\";\n\n\n\nconst DeliveryLocationDetails = () => {\n\n\n  const { band } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllBands());\n  }, []);\n\n\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.deliveryLocation);\n  const dispatch = useDispatch();\n\n\n\n  useEffect(() => {\n    dispatch(getOneDeliveryLocation(id));\n  }, [id]);\n\n  const bandName = band?.data?.filter((b)=> b.id === singleData?.location?.band_id)\n\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className=\"userInfo\">\n      {singleData?.location && (  <Card loading={loading} className='userInfo__card' title='Delivery location Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  style={{color: '#ff0303'}}\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${\n                  `${singleData?.location.location}` || ''\n                } `}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n    \n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Price:</strong>\n                    &nbsp;\n                    <NumericFormat\n                      value={singleData?.location.price}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'₦'}\n                    />\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Band:</strong> {bandName[0]?.name}\n                  </div>\n               \n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>)}\n        </div>\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default DeliveryLocationDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`;\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport { NumericFormat } from 'react-number-format'\n\nconst SpecialRequestTable = ({ data, loading, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Request',\n      dataIndex: 'request',\n      key: 'request',\n      ...getColumnSearchProps({\n        dataIndex: 'request',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: \"Comment\",\n      dataIndex: \"comment\",\n      key: \"comment\",\n      render: (comment) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {comment && comment?.substring(0, 80)}{\" \"}\n          {comment && comment?.length >= 80 && \"...\"}\n        </span>\n      ),\n    },\n    \n\n   \n  \n\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n          <div>\n            <Button style={{ marginRight: '5px' }} title='View product details'>\n              <Link to={`/special-requests/details/${singleData?.id}`}>{'View'}</Link>\n            </Button>\n            <Button\n            danger\n            onClick={() => handleDelete(singleData)}\n            title='delete product'\n          >\n            delete\n          </Button>\n          </div>\n\n       \n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default SpecialRequestTable\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getAllSpecialRequests, deleteSpecialRequest } from \"../../redux/specialRequestSlice\";\nimport SpecialRequestTable from \"./SpecialRequestTable\";\n\nconst ListSpecialRequests = () => {\n  const { special_requests } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllSpecialRequests());\n  }, []);\n\n  const handledeleteSpecialRequest = ({ id }) => {\n\n    if (\n      !window.confirm(\"Do You want to permanently delete the selected special request?\")\n    ) {\n      return;\n    }\n\n    dispatch(deleteSpecialRequest(id))\n      .then((response) => {\n        if (response.type === \"specialRequest/delete/fulfilled\") {\n          dispatch(getAllSpecialRequests());\n          notification.success({\n            message: \" special request deleted successfully\",\n          });\n        } else if (response.type === \"specialRequest/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting special request, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting special request, please try again later\",\n        });\n      });\n  };\n\n  return (\n    <div>\n      <PageHeader extra={[]} title=\"Special requests\" />\n      {special_requests?.data?.requests && (\n        <SpecialRequestTable data={special_requests?.data?.requests} loading={special_requests.loading} handleDelete={handledeleteSpecialRequest} />\n      )}\n    </div>\n  );\n};\n\nexport default ListSpecialRequests;\n","import { Avatar, Button, Card, Typography } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Form from \"react-bootstrap/Form\";\nimport { NumericFormat } from \"react-number-format\";\nimport { getOneSpecialRequest } from \"../../redux/specialRequestSlice\";\nimport { notification } from \"antd\";\nimport { updateStatus } from \"../../redux/orderSlice\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SpecialRequestDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector(\n    (state) => state.special_requests\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOneSpecialRequest(id));\n  }, [id]);\n\n  console.log(singleData);\n\n  return (\n    <StyledContainer>\n      {singleData?.request && (\n        <div>\n          <div className=\"userInfo\">\n            <Card\n              loading={loading}\n              className=\"userInfo__card\"\n              title=\"Special request Details\"\n            >\n              <div\n                className={` flex, justify-end`}\n                onClick={() => navigate(-1)}\n              >\n                <div to=\"#\" className=\"userInfo__back\">\n                  <Button\n                    style={{ color: \"#FF0303\" }}\n                    icon={<BsArrowLeft />}\n                    type=\"link\"\n                    className=\"hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300\"\n                  >\n                    Back\n                  </Button>\n                </div>\n              </div>\n\n              <Meta\n                title={\n                  <Typography.Title\n                    level={2}\n                    className=\"text-3xl m-0 w-full\"\n                  >{`${\n                    `${singleData?.request?.request}` || \"\"\n                  } `}</Typography.Title>\n                }\n                description={\n                  <div className=\"metaDescription\">\n                    <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                      <strong> {singleData?.request?.comment || \"\"}</strong>\n                    </div>\n\n                    <div className=\"flex align-middle items-center gap-4 flex-wrap insuranceprice\">\n                      <strong>Created At:</strong>{\" \"}\n                      {moment(singleData.created_at).format(\"DD MMM YYYY\") ||\n                        \"\"}\n                    </div>\n                  </div>\n                }\n              />\n            </Card>\n          </div>\n        </div>\n      )}\n      <ToastContainer />\n    </StyledContainer>\n  );\n};\n\nexport default SpecialRequestDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .insuranceprice {\n    margin-top: 5px;\n  }\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTimeSlot, getAllTimeSlots } from \"../../redux/timeSlotSlice\";\nimport { notification, Avatar } from \"antd\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getAllBands } from \"../../redux/bandSlice\";\n\n\nconst initialFormState = {\n  start_time: \"\",\n  end_time: \"\",\n  is_available: \"\",\n  band_id: \"\",\n\n\n};\n\nfunction CreateTimeSlot() {\n\n  const [selectedStartTime, setSelectedStartTime] = useState(null);\n  const [selectedEndTime, setSelectedEndTime] = useState(null);\n\n  const { band } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllBands());\n  }, []);\n\n  const band_list =\n    band &&\n    band?.data?.map((band, key) => {\n      return (\n        <option value={band?.id} key={key}>\n          {band?.name}\n        </option>\n      );\n    });\n\n  const handleStartTimeChange = (time) => {\n    setSelectedStartTime(time);\n  };\n\n  const handleEndTimeChange = (time) => {\n    setSelectedEndTime(time);\n  };\n\n\n\n  \n\n  const [show, setShow] = useState(false);\n\n  const [timeSlotFormData, setTimeSlotFormData] = useState(initialFormState);\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  const clearFormData = () => {\n    setTimeSlotFormData({\n      start_time: \"\",\n      end_time: \"\",\n      is_available: \"\",\n      band_id: \"\"\n    });\n  };\n\n\n  const handleBandChange = (event) => {\n    const selectedValue = event.target.value;\n    setTimeSlotFormData({\n      ...timeSlotFormData,\n      band_id: selectedValue,\n    });\n  };\n\n  const handlecreateTimeSlot = (e) => {\n\n \n\n    e.preventDefault();\n    const formData = {\n      start_time:  selectedStartTime.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      }),\n      end_time:selectedEndTime.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      }),\n      is_available: timeSlotFormData.is_available,\n      band_id: timeSlotFormData.band_id\n \n    };\n\n    setConfirmLoading(true);\n    dispatch(createTimeSlot(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"timeSlot/create/fulfilled\") {\n          dispatch(getAllTimeSlots());\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"timeSlot created successfully\",\n          });\n        } else if (response.type === \"timeSlot/create/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error creating time slot, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create Time slot</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Time slot</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handlecreateTimeSlot}>\n            \n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Select start time</Form.Label>\n                  <Col sm=\"10\">\n                    <DatePicker\n                      selected={selectedStartTime}\n                      onChange={handleStartTimeChange}\n                      showTimeSelect\n                      showTimeSelectOnly\n                      timeIntervals={15}\n                      timeCaption=\"Time\"\n                      dateFormat=\"h:mm\"\n                      className=\"form-control\"\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Select end time</Form.Label>\n                  <Col sm=\"10\">\n                    <DatePicker\n                      selected={selectedEndTime}\n                      onChange={handleEndTimeChange}\n                      showTimeSelect\n                      showTimeSelectOnly\n                      timeIntervals={15}\n                      timeCaption=\"Time\"\n                      dateFormat=\"h:mm\"\n                      className=\"form-control\"\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Available </Form.Label>\n              <Form.Select\n                name=\"discount_enabled\"\n                onChange={(evt) =>\n                  setTimeSlotFormData({\n                    ...timeSlotFormData,\n                    is_available: evt.target.value,\n                  })\n                }\n                aria-label=\"Default select example\"\n                value={timeSlotFormData.discount_enabled}\n              >\n                <option>Select option to set availability</option>\n\n                <option value=\"1\">Yes</option>\n                <option value=\"0\">No</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select band</Form.Label>\n              <Form.Select\n                name=\"band_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleBandChange}\n                value={timeSlotFormData.band_id}\n              >\n                <option>Select band</option>\n                {band_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Button\n              style={{\n                marginTop: \"10px\",\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default CreateTimeSlot;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editTimeSlot, getAllTimeSlots } from \"../../redux/timeSlotSlice\";\nimport { notification, Avatar } from \"antd\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getAllBands } from \"../../redux/bandSlice\";\n\nconst initialFormState = {\n  start_time: \"\",\n  end_time: \"\",\n  is_available: \"\",\n  band_id: \"\"\n  \n\n};\n\n\nfunction UpdateTimeSlot({timeslot}) {\n\n  const [selectedStartTime, setSelectedStartTime] = useState(null);\n  const [selectedEndTime, setSelectedEndTime] = useState(null);\n\n  const handleStartTimeChange = (time) => {\n    setSelectedStartTime(time);\n  };\n\n  const handleEndTimeChange = (time) => {\n    setSelectedEndTime(time);\n  };\n\n  const { band } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllBands());\n  }, []);\n\n  const band_list =\n  band &&\n  band?.data?.map((band, key) => {\n    return (\n      <option value={band?.id} key={key}>\n        {band?.name}\n      </option>\n    );\n  });\n\n  const [show, setShow] = useState(false);\n\n  const [timeSlotFormData, setTimeSlotFormData] = useState(initialFormState);\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  const clearFormData = () => {\n    setTimeSlotFormData({\n      start_time: \"\",\n      end_time: \"\",\n      is_available: \"\",\n      band_id: \"\"\n\n    });\n  };\n\n  const handleBandChange = (event) => {\n    const selectedValue = event.target.value;\n    setTimeSlotFormData({\n      ...timeSlotFormData,\n      band_id: selectedValue,\n    });\n  };\n\n\n  useEffect(() => {\n    setTimeSlotFormData({\n      type: timeslot.is_available === \"yes\" ? \"1\" : \"0\",\n      start_date: timeslot.start_date,\n      end_date: timeslot.end_date,\n   \n    })\n  }, [timeslot])\n\n  const handleEditTimeSlot = (e) => {\n\n \n\n    e.preventDefault();\n    const formData = {\n      start_time:  selectedStartTime.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      }),\n      end_time:selectedEndTime.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n      }),\n      is_available: timeSlotFormData.is_available,\n      band_id: timeSlotFormData.band_id,\n      timeslot_id: timeslot.id\n \n    };\n\n    setConfirmLoading(true);\n    dispatch(editTimeSlot(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"timeslot/edit/fulfilled\") {\n          dispatch(getAllTimeSlots());\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"timeslot updated successfully\",\n          });\n        } else if (response.type === \"timeslot/edit/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error updating time slot, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit Time slot</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditTimeSlot}>\n            \n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Select start time</Form.Label>\n                  <Col sm=\"10\">\n                    <DatePicker\n                      selected={selectedStartTime}\n                      onChange={handleStartTimeChange}\n                      showTimeSelect\n                      showTimeSelectOnly\n                      timeIntervals={15}\n                      timeCaption=\"Time\"\n                      dateFormat=\"h:mm\"\n                      className=\"form-control\"\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Select end time</Form.Label>\n                  <Col sm=\"10\">\n                    <DatePicker\n                      selected={selectedEndTime}\n                      onChange={handleEndTimeChange}\n                      showTimeSelect\n                      showTimeSelectOnly\n                      timeIntervals={15}\n                      timeCaption=\"Time\"\n                      dateFormat=\"h:mm\"\n                      className=\"form-control\"\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label> Available </Form.Label>\n              <Form.Select\n                name=\"discount_enabled\"\n                onChange={(evt) =>\n                  setTimeSlotFormData({\n                    ...timeSlotFormData,\n                    is_available: evt.target.value,\n                  })\n                }\n                aria-label=\"Default select example\"\n                value={timeSlotFormData.discount_enabled}\n                defaultValue={timeslot?.is_available}\n\n              >\n                <option>Select option to set availability</option>\n\n                <option value=\"1\">Yes</option>\n                <option value=\"0\">No</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"exampleForm.ControlSelect1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Select band</Form.Label>\n              <Form.Select\n                name=\"band_id\" // Add the \"name\" attribute\n                aria-label=\"Default select example\"\n                required\n                onChange={handleBandChange}\n                value={timeSlotFormData.band_id}\n                defaultValue={timeslot.band_id}\n              >\n                <option>Select band</option>\n                {band_list}\n              </Form.Select>\n            </Form.Group>\n\n            <Button\n              style={{\n                marginTop: \"10px\",\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default UpdateTimeSlot;\n","import { Avatar, Button, Table, Switch } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport UpdateTimeSlot from './UpdateTimeSlot'\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst TimeSlotTable = ({ data, loading, showTimeSlot, hideTimeSlot, handleDelete }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n  \n  const { admin } = ExpirySession.get(\"user\");\n\n\n  const columns = [\n    {\n      title: 'Start time',\n      dataIndex: 'start_time',\n      key: 'start_time',\n      ...getColumnSearchProps({\n        dataIndex: 'delivery_time',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'End time',\n      dataIndex: 'end_time',\n      key: 'end_time',\n      ...getColumnSearchProps({\n        dataIndex: 'delivery_time',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n\n    {\n      title: 'Available',\n      dataIndex: 'is_available',\n      key: 'is_available',\n      ...getColumnSearchProps({\n        dataIndex: 'is_available',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (is_available) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {is_available === 1 ? \"Yes\" : \"No\"}</span>\n      ),\n    },\n\n    \n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...getColumnSearchProps({\n        dataIndex: 'created_at',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'id',\n      align: 'center',\n      render: (singleData) => (\n        <>\n\n        {admin?.level === 0 && ( <div>\n\n\n<Button style={{ marginRight: '5px' }} title='Edit timeslot'>\n  <UpdateTimeSlot timeslot={singleData} />\n</Button>\n\n<Button style={{ marginRight: '5px' }}\ndanger\nonClick={() => handleDelete(singleData)}\ntitle='delete time slot'\n>\ndelete\n</Button>\n\n<Switch style={{backgroundColor: '#ff0303', marginLeft: '10px'}}\n\n  checked={singleData?.is_available === 1}\n  onChange={singleData?.is_available === 0 ? () => showTimeSlot(singleData?.id) : () => hideTimeSlot(singleData?.id)}\n/>\n\n\n\n</div>)}\n\n{admin?.level === 1 && ( <div>\n\n\n<Button style={{ marginRight: '5px' }} title='Edit timeslot'>\n  <UpdateTimeSlot timeslot={singleData} />\n</Button>\n\n\n<Switch style={{backgroundColor: '#ff0303', marginLeft: '10px'}}\n\n  checked={singleData?.is_available === 1}\n  onChange={singleData?.is_available === 0 ? () => showTimeSlot(singleData?.id) : () => hideTimeSlot(singleData?.id)}\n/>\n\n\n\n</div>)}\n\n{admin?.level === 2 && ( <div>\n\n\n\n<Switch style={{backgroundColor: '#ff0303', marginLeft: '10px'}}\n\n  checked={singleData?.is_available === 1}\n  onChange={singleData?.is_available === 0 ? () => showTimeSlot(singleData?.id) : () => hideTimeSlot(singleData?.id)}\n/>\n\n\n\n</div>)}\n\n{admin?.level === 3 && ( <div>\n\nN/a\n\n\n\n</div>)}\n\n         \n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default TimeSlotTable\n","import React, { useEffect, useState } from 'react'\nimport { Button, notification, PageHeader } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { getAllTimeSlots, showTimeSlot, hideTimeSlot, deleteTimeSlot } from '../../redux/timeSlotSlice'\nimport CreateTimeSlot from './CreateTimeSlot'\nimport TimeSlotTable from './TimeSlotTable'\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst TimeSlots = () => {\n  const { timeslot } = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  useEffect(() => {\n    dispatch(getAllTimeSlots())\n  }, [])\n\n\n  const [checked, setIsChecked] =useState(null)\n\n  const handleShowTimeSlot = (id) => {\n  \n    dispatch(showTimeSlot(id))\n    .then((response)=> {\n      if (response.type === \"timeSlot/showTimeSlot/fulfilled\") {\n        setIsChecked(true)\n        dispatch(getAllTimeSlots());\n              notification.success({\n                message: \" timeSlot shown successfully\",\n              });\n            } else if (response.type === \"timeSlot/showTimeSlot/rejected\") {\n              notification.error({\n                message:\n                  response?.payload?.message ||\n                  \"Error showing time slot, please try again\",\n              });\n            }\n            \n    })\n    .catch((error) => {\n          notification.error({\n            message: \"Error hiding timeSlot, please try again later\",\n          });\n        });\n    \n    \n      };\n\n      const handleHideTimeSlot = (id) => {\n  \n        dispatch(hideTimeSlot(id))\n        .then((response)=> {\n          console.log(response)\n          if (response.type === \"timeSlot/hideTimeSlot/fulfilled\") {\n            setIsChecked(false)\n            dispatch(getAllTimeSlots());\n                  notification.success({\n                    message: \" time slot hidden successfully\",\n                  });\n                } else if (response.type === \"timeSlot/hideTimeSlot/rejected\") {\n                  notification.error({\n                    message:\n                      response?.payload?.message ||\n                      \"Error hiding timeSlot, please try again\",\n                  });\n                }\n                \n        })\n        .catch((error) => {\n              notification.error({\n                message: \"Error hiding timeSlot, please try again later\",\n              });\n            });\n        \n        \n          };\n\n          const handleDeleteTimeSlot = ({ id }) => {\n\n            if (\n              !window.confirm(\"Do You want to permanently delete the selected timeslot?\")\n            ) {\n              return;\n            }\n        \n            dispatch(deleteTimeSlot(id))\n              .then((response) => {\n                if (response.type === \"timeSlot/delete/fulfilled\") {\n                  dispatch(getAllTimeSlots());\n                  notification.success({\n                    message: \" time slot deleted successfully\",\n                  });\n                } else if (response.type === \"timeSlot/delete/rejected\") {\n                  notification.error({\n                    message:\n                      response?.payload?.message ||\n                      \"Error deleting time slot, please try again\",\n                  });\n                }\n              })\n              .catch((error) => {\n                notification.error({\n                  message: \"Error deleting time slot, please try again later\",\n                });\n              });\n          };\n\n          const { admin } = ExpirySession.get(\"user\");\n\n\n  return (\n    <div>\n\n      {(admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ) ?  ( <PageHeader\n        extra={[\n          <Button key='Create time slot' style={{color: '#ff0303', border: '1px solid #ff0303'}}>\n            <CreateTimeSlot />\n          </Button>,\n        ]}\n        title='Time slots'\n      />) :  <PageHeader\n      extra={[\n      \n      ]}\n      title='Time slots'\n    />}\n     \n\n{timeslot?.data?.timeSlots && (<TimeSlotTable\n        data={timeslot?.data?.timeSlots}\n        loading={timeslot.loading}\n        showTimeSlot={handleShowTimeSlot}\n        hideTimeSlot={handleHideTimeSlot}\n        handleDelete={handleDeleteTimeSlot}\n      />)}\n\n      \n    </div>\n  )\n}\n\nexport default TimeSlots\n","import { Avatar, Button, Card, Typography, notification } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { getOneBand } from \"../../redux/bandSlice\";\n\nconst TimeSlotDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { singleData, loading } = useSelector((state) => state.band);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getOneBand(id));\n  }, [id]);\n\n \n\n  return (\n    <StyledContainer>\n      <div>\n        <div className=\"userInfo\">\n        <Card loading={loading} className='userInfo__card' title='Band Details'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button\n                  icon={<BsArrowLeft />}\n                  type='link'\n                  style={{color: '#ff0303'}}\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{`${\n                  `${singleData?.name}` || ''\n                } `}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n          \n                \n            \n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail mt-5'>\n                   <strong>{singleData?.description}</strong>\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Discount Enabled:</strong> {singleData?.discount_enabled === 1 ? 'Yes': 'No'}\n                  </div>\n\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>General Discount:</strong> {singleData?.general_discount || \"N/A\"}\n                  </div>\n\n                \n                 \n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Bulk discount percentage:</strong> {singleData?.bulk_discount_percentage || \"N/A\"}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Minimum :</strong> {singleData?.minimum}\n                  </div>\n                  <div className='flex align-middle items-center gap-4 flex-wrap company-detail'>\n                    <strong>Created At:</strong>{' '}\n                    {moment(singleData.created_at).format('DD MMM YYYY') || ''}\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default TimeSlotDetails;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .company-detail {\n    margin-top: 5px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { editSiteData, getAllSiteData } from \"../../redux/siteDataSlice\";\nimport { notification } from \"antd\";\n\nconst initialFormState = {\n  faq: \"\",\n  terms_and_conditions: \"\",\n  privacy_policy: \"\",\n  contact_data: \"\",\n};\n\nfunction UpdateSiteData({ sitedata }) {\n  const [show, setShow] = useState(false);\n  const [sitedataFormData, setsitedataFormData] = useState(initialFormState);\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setsitedataFormData({\n      ...sitedataFormData,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    setsitedataFormData({\n      faq: sitedata?.data?.faq,\n      terms_and_conditions: sitedata?.data?.terms_and_conditions,\n      privacy_policy: sitedata?.data?.privacy_policy,\n      contact_data: sitedata?.data?.contact_data,\n    });\n  }, [sitedata]);\n\n  const clearFormData = () => {\n    setsitedataFormData({\n      faq: \"\",\n      terms_and_conditions: \"\",\n      privacy_policy: \"\",\n      contact_data: \"\",\n    });\n  };\n\n  const handleEditSiteData = (e) => {\n    e.preventDefault();\n\n    const data = {\n        faq: sitedataFormData?.faq,\n        terms_and_conditions: sitedataFormData?.terms_and_conditions,\n        privacy_policy: sitedataFormData?.privacy_policy,\n        contact_data: sitedataFormData?.contact_data,\n    }\n\n\n    setConfirmLoading(true);\n    dispatch(editSiteData(data))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"siteData/edit/fulfilled\") {\n          dispatch(getAllSiteData());\n          handleClose();\n          notification.success({\n            message: \"sitedata updated successfully\",\n          });\n        } else if (response.type === \"siteData/edit/rejected\") {\n          notification.error({\n            message: response?.payload?.message,\n          });\n          console.log(\"Error notification\", response?.payload?.message);\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"Error notification\",\n          \"Error updating sitedata, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit Site Data</span>\n\n      <Modal show={show} onHide={handleClose} size=\"lg\">\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit Site data</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditSiteData}>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>FAQ </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                style={{ height: \"200px\" }}\n                name=\"faq\"\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={sitedataFormData.faq}\n              />\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Terms and conditions </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                style={{ height: \"200px\" }}\n                name=\"terms_and_conditions\"\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={sitedataFormData.terms_and_conditions}\n              />\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Privacy policy </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                style={{ height: \"200px\" }}\n                name=\"privacy_policy\"\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={sitedataFormData.privacy_policy}\n              />\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <Form.Label>Contact data </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"sitedata content here\"\n                style={{ height: \"200px\" }}\n                name=\"contact_data\"\n                onChange={(evt) => handleInputChange(evt)}\n                defaultValue={sitedataFormData.contact_data}\n              />\n            </Form.Group>\n            <Button\n              style={{\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default UpdateSiteData;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editSiteData, getAllSiteData } from \"../../redux/siteDataSlice\";\nimport UpdateSiteData from \"./UpdateSiteData\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { BsPhone, BsArrowLeft, BsEnvelope } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { Avatar, Card, Typography } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst SiteData = () => {\n  const { sitedata } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllSiteData());\n  }, []);\n\n  const { admin } = ExpirySession.get(\"user\");\n\n\n  return (\n    <div>\n{(admin?.level === 0 || admin?.level === 1 ) ? ( <PageHeader\n        extra={[\n          <Button\n            key=\"editSiteData\"\n            style={{ color: \"#ff0303\", border: \"1px solid #ff0303\" }}\n          >\n            <UpdateSiteData sitedata={sitedata} />\n          </Button>,\n        ]}\n        title=\"Site Data\"\n      />) :  <PageHeader\n      extra={[\n  \n      ]}\n      title=\"Site Data\"\n    /> }\n     \n\n      <StyledContainer>\n        <div>\n          <div className=\"userInfo\">\n            <Card className=\"userInfo__card\">\n              <Meta\n                description={\n                  <div className=\"metaDescription\">\n                    <div className=\"flex align-middle items-center gap-4 flex-wrap article-detail\">\n                      <h2>FAQ</h2>\n                      <strong>{sitedata?.data?.faq}</strong>\n                    </div>\n                  </div>\n                }\n              />\n            </Card>\n            <Card className=\"userInfo__card\">\n              <Meta\n                description={\n                  <div className=\"metaDescription\">\n                    <div className=\"flex align-middle items-center gap-4 flex-wrap article-detail\">\n                      <h2>Terms and Conditions</h2>\n                      <strong>{sitedata?.data?.terms_and_conditions}</strong>\n                    </div>\n                  </div>\n                }\n              />\n            </Card>\n            <Card className=\"userInfo__card\">\n              <Meta\n                description={\n                  <div className=\"metaDescription\">\n                    <div className=\"flex align-middle items-center gap-4 flex-wrap article-detail\">\n                      <h2>Privacy Policy</h2>\n                      <strong>{sitedata?.data?.privacy_policy}</strong>\n                    </div>\n                  </div>\n                }\n              />\n            </Card>\n            <Card className=\"userInfo__card\">\n              <Meta\n                description={\n                  <div className=\"metaDescription\">\n                    <div className=\"flex align-middle items-center gap-4 flex-wrap article-detail\">\n                      <h2>Contact Data</h2>\n                      <strong>{sitedata?.data?.contact_data}</strong>\n                    </div>\n                  </div>\n                }\n              />\n            </Card>\n          </div>\n        </div>\n      </StyledContainer>\n    </div>\n  );\n};\n\nexport default SiteData;\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .userInfo__card {\n    margin-bottom: 1rem;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n  .article-detail {\n    margin-top: 5px;\n  }\n`;\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { createQuickGuide, getAllQuickGuides } from '../../redux/quickGuideSlice'\nimport { notification } from 'antd'\n\nconst initialFormState = {\n  title: '',\n  body: '',\n  image: '',\n}\n\nfunction CreateQuickGuide() {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [quickGuideFormData, setQuickGuideFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setQuickGuideFormData({\n      ...quickGuideFormData,\n      [name]: value,\n    })\n  }\n\n  const clearFormData = () => {\n    setQuickGuideFormData({\n      title: '',\n      body: '',\n      image: '',\n    })\n    setImage('')\n  }\n\n  const handleCreateQuickGuide = (e) => {\n    e.preventDefault()\n    var formData = new FormData()\n    formData.append('title', quickGuideFormData.title)\n    formData.append('image', image)\n    formData.append('body', quickGuideFormData.body)\n\n    setConfirmLoading(true)\n    dispatch(createQuickGuide(formData))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'quickGuide/create/fulfilled') {\n          dispatch(getAllQuickGuides())\n          handleClose()\n          clearFormData()\n          console.log('response act', response)\n          notification.success({\n            message: 'quick guide created successfully',\n          })\n        } else if (response.type === 'quickGuide/create/rejected') {\n          notification.error({\n            message: response?.payload?.message || 'Error created quick guide, please try again',\n          })\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notification', 'Error creating  quick guide, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Create Quick Guide</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Create Quick Guide</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreateQuickGuide}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type='text'\n                name='title'\n                placeholder='Enter title'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Body </Form.Label>\n              <Form.Control\n                type='text'\n                name='body'\n                placeholder='body'\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n            </Form.Group>\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false}  style={{\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default CreateQuickGuide\n","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport Messages from '../../ToastMessages/Messages'\nimport { useEffect } from 'react'\nimport { editQuickGuide, getAllQuickGuides } from '../../redux/quickGuideSlice'\n\nconst initialFormState = {\n  title: '',\n  body: '',\n  image: '',\n}\n\nfunction UpdateQuickGuide({ quickGuide }) {\n  const [show, setShow] = useState(false)\n  const [image, setImage] = useState('')\n  const [quickGuideFormData, setQuickGuideFormData] = useState(initialFormState)\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    setQuickGuideFormData({\n      ...quickGuideFormData,\n      [name]: value,\n    })\n  }\n\n  useEffect(() => {\n    setQuickGuideFormData({\n      title: quickGuide.title,\n      image: quickGuide.image,\n      body: quickGuide.body,\n    })\n  }, [quickGuide])\n\n  const clearFormData = () => {\n    setQuickGuideFormData({\n      title: '',\n      body: '',\n      image: '',\n    })\n    setImage('')\n  }\n\n  const handleEditQuickGuide = (e) => {\n    e.preventDefault()\n\n    const data = {\n      title: quickGuideFormData.title,\n      body: quickGuideFormData.body,\n      id: quickGuide.id\n    }\n\n    setConfirmLoading(true)\n    dispatch(editQuickGuide(data))\n      .then((response) => {\n        setConfirmLoading(false)\n        if (response.type === 'quickGuide/edit/fulfilled') {\n          dispatch(getAllQuickGuides())\n          handleClose()\n          //   clearFormData()\n          console.log('response act', response)\n          Messages.successMessage('quickGuide updated successfully', 'top-right')\n        } else if (response.type === 'quickGuide/edit/rejected') {\n          Messages.errorMessage(response?.payload?.message, 'top-right')\n          console.log('error notification', response?.payload?.message)\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false)\n        console.log('error notificatom', 'Error updating quick Guide, please try again')\n      })\n  }\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit quick guide</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleEditQuickGuide}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type='text'\n                name='title'\n                placeholder='Enter QuickGuide title'\n                defaultValue={quickGuideFormData.title}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Body </Form.Label>\n              <Form.Control\n                type='text'\n                name='body'\n                placeholder='body'\n                defaultValue={quickGuideFormData.body}\n                onChange={(evt) => handleInputChange(evt)}\n              />\n            </Form.Group>\n\n            {/* <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label> Image</Form.Label>\n              <Form.Control type='file' onChange={(evnt) => onChangeImage(evnt)} />\n              <span>\n                <img src={quickGuide?.image} alt='image' style={{ with: '70px', height: '70px' }} />\n              </span>\n            </Form.Group> */}\n\n            <Button variant='primary' type='submit' disabled={confirmLoading ? true : false} style={{\n                background: \"#ff0303\",\n                color: \"#fff\",\n                border: \"none\",\n              }}>\n              {confirmLoading ? 'Please wait...' : 'Submit'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default UpdateQuickGuide\n","import { Avatar, Button, Table, Switch } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\nimport UpdateQuickGuide from \"./UpdateQuickGuide\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst QuickGuideTable = ({\n  data,\n  loading,\n  hideShowQuickGuide,\n  handleDelete,\n}) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n  const { admin } = ExpirySession.get(\"user\");\n\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\",\n      ...getColumnSearchProps({\n        dataIndex: \"title\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: \"Body\",\n      dataIndex: \"body\",\n      key: \"body\",\n      ...getColumnSearchProps({\n        dataIndex: \"body\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n\n      render: (body) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {body && body?.substring(0, 60)} {body && body?.length >= 60 && \"...\"}\n        </span>\n      ),\n    },\n    {\n      title: \"Image\",\n      key: \"id\",\n      dataIndex: \"image_path\",\n      align: \"center\",\n      render: (image_path) => (\n        <div>\n          {image_path ? (\n            <img\n              style={{\n                width: \"60px\",\n                height: \"60px\",\n                borderRadius: \"50%\",\n                objectFit: \"cover\",\n              }}\n              src={image_path}\n              height={60}\n              width={60}\n              alt=\"avatar\"\n            />\n          ) : (\n            <Avatar\n              style={{ backgroundColor: \"#3f8bcaa1\" }}\n              icon={<UserOutlined />}\n              size={50}\n            />\n          )}\n        </div>\n      ),\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      ...getColumnSearchProps({\n        dataIndex: \"created_at\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n      render: (created_at) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {\" \"}\n          {moment(created_at).format(\"DD MMM YYYY\")}\n        </span>\n      ),\n    },\n\n    {\n      title: \"Actions\",\n      key: \"id\",\n      align: \"center\",\n      render: (singleData) => (\n        <>\n          {admin?.level === 0 && (\n            <div>\n              <Button style={{ marginRight: \"5px\" }} title=\"Edit QuickGuide\">\n                <UpdateQuickGuide quickGuide={singleData} />\n              </Button>\n              <Button\n                style={{ marginRight: \"5px\" }}\n                danger\n                onClick={() => handleDelete(singleData)}\n                title=\"delete quick guide\"\n              >\n                delete\n              </Button>\n              <Switch\n                style={{ backgroundColor: \"#ff0303\", marginLeft: \"10px\" }}\n                checked={singleData?.is_hidden === 0}\n                onChange={() => hideShowQuickGuide(singleData?.id)}\n              />\n            </div>\n          )}\n          {admin?.level === 1 && (\n            <div>\n              <Button style={{ marginRight: \"5px\" }} title=\"Edit QuickGuide\">\n                <UpdateQuickGuide quickGuide={singleData} />\n              </Button>\n\n              <Switch\n                style={{ backgroundColor: \"#ff0303\", marginLeft: \"10px\" }}\n                checked={singleData?.is_hidden === 0}\n                onChange={() => hideShowQuickGuide(singleData?.id)}\n              />\n            </div>\n          )}\n\n          {admin?.level === 2 && (\n            <div>\n              <Switch\n                style={{ backgroundColor: \"#ff0303\", marginLeft: \"10px\" }}\n                checked={singleData?.is_hidden === 0}\n                onChange={() => hideShowQuickGuide(singleData?.id)}\n              />\n            </div>\n          )}\n          {admin?.level === 3 && <div>N/a</div>}\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default QuickGuideTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  deleteQuickGuide,\n  getAllQuickGuides,\n  hideShowQuickGuide,\n} from \"../../redux/quickGuideSlice\";\nimport CreateQuickGuide from \"./CreateQuickGuide\";\nimport QuickGuideTable from \"./QuickGuideTable\";\nimport ExpirySession from \"../../utils/expirySession\";\n\n\nconst QuickGuides = () => {\n  const { quickGuide } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllQuickGuides());\n  }, []);\n\n  const [isChecked, setIsChecked] = useState();\n\n  const handleHideShowQuickGuide = (id) => {\n    dispatch(hideShowQuickGuide(id))\n      .then((response) => {\n        if (response.type === \"quickGuide/hideShowQuickGuide/fulfilled\") {\n          setIsChecked(!isChecked);\n          dispatch(getAllQuickGuides());\n          notification.success({\n            message: \" quick guide updated successfully\",\n          });\n        } else if (response.type === \"quickGuide/hideShowQuickGuide/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error updating quick guide, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting quick guide, please try again later\",\n        });\n      });\n  };\n\n  const handleDeleteQuickGuide = ({ id }) => {\n    if (\n      !window.confirm(\n        \"Do You want to permanently delete the selected quick guide?\"\n      )\n    ) {\n      return;\n    }\n\n    dispatch(deleteQuickGuide(id))\n      .then((response) => {\n        if (response.type === \"quickGuide/delete/fulfilled\") {\n          dispatch(getAllQuickGuides());\n          notification.success({\n            message: \" quick guide deleted successfully\",\n          });\n        } else if (response.type === \"quickGuide/delete/rejected\") {\n          notification.error({\n            message:\n              response?.payload?.message ||\n              \"Error deleting quick guide, please try again\",\n          });\n        }\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error deleting quick guide, please try again later\",\n        });\n      });\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n\n  return (\n    <div>\n\n{admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? ( <PageHeader\n            extra={[\n              <Button\n                key=\"CreateQuickGuide\"\n                style={{ color: \"#ff0303\", border: \"1px solid #ff0303\" }}\n              >\n                <CreateQuickGuide />\n              </Button>,\n            ]}\n            title=\"Quick Guides\"\n          />) :  <PageHeader\n          extra={[\n           \n          ]}\n          title=\"Quick Guides\"\n        /> }\n\n     \n\n      {quickGuide?.data && (\n        <QuickGuideTable\n          data={quickGuide.data}\n          loading={quickGuide.loading}\n          hideShowQuickGuide={handleHideShowQuickGuide}\n          handleDelete={handleDeleteQuickGuide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default QuickGuides;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { notification } from \"antd\";\nimport { createSettings, getAllSettings } from \"../../redux/settingsSlice\";\n\n\nconst CreateSetting = () => {\n  const initialFormState = {\n    key: \"\",\n    value: \"\"\n  };\n\n\n  const [show, setShow] = useState(false);\n  const [settingsFormData, setsettingsFormData] = useState(initialFormState);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setShow(false);\n    resetForm();\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n\n  const resetForm = () => {\n    setsettingsFormData({\n      key: \"\",\n      value: \"\"\n    });\n\n  };\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setsettingsFormData({\n      ...settingsFormData,\n      [name]: value,\n    });\n  };\n\n\n  const handleCreatesettings = (e) => {\n    e.preventDefault();\n\n\n    var formData = new FormData();\n    formData.append(\"key\", settingsFormData.key);\n    formData.append(\"value\", settingsFormData.value);\n\n    setConfirmLoading(true);\n\n    dispatch(createSettings(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"settings/create/fulfilled\") {\n          dispatch(getAllSettings());\n          handleClose();\n          resetForm();\n          notification.success({\n            message: \"settings created successfully\",\n          });\n        } else if (response.type === \"settings/create/rejected\") {\n          notification.error({\n            message: \"Error creating settings\",\n          });\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Create settings</span>\n\n      <Modal show={show} onHide={handleClose} size=\"md\">\n        <Modal.Header closeButton onClick={resetForm}>\n          <Modal.Title>Create settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleCreatesettings}>\n              \n          <Form.Group className=\"mb-3\" controlId=\"formBasicAddress\">\n                    <Form.Label>Key</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"key\"\n                      placeholder=\"Enter key\"\n                      onChange={(evt) => handleInputChange(evt)}\n                    />\n                  </Form.Group>\n \n                  <Form.Group className=\"mb-3\" controlId=\"formBasicAddress\">\n                    <Form.Label>Value</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"value\"\n                      placeholder=\"Enter value\"\n                      onChange={(evt) => handleInputChange(evt)}\n                    />\n                  </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" disabled={confirmLoading} style={{background: '#ff0303', border: '1px solid #ff0303'}}>\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default CreateSetting;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { notification } from \"antd\";\nimport { getAllSettings, editSettings } from \"../../redux/settingsSlice\";\n\n\nconst initialFormState = {\n  key: \"\",\n};\n\nfunction UpdateSettings({ settings }) {\n  const [show, setShow] = useState(false);\n  const [settingsFormData, setsettingsFormData] = useState(initialFormState);\n\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setsettingsFormData({\n      ...settingsFormData,\n      [name]: value,\n    });\n  };\n\n\n  useEffect(() => {\n    setsettingsFormData({\n      value: settings?.value,\n    });\n  }, [settings]);\n\n  const clearFormData = () => {\n    setsettingsFormData({\n      key: \"\",\n         });\n  };\n\n  const handleeditSettings = (e) => {\n    e.preventDefault();\n\n    var formData =  {\n      value: settingsFormData.value,\n      key: settings.key\n    };\n\n\n    setConfirmLoading(true);\n    dispatch(editSettings(formData))\n      .then((response) => {\n        setConfirmLoading(false);\n        if (response.type === \"settings/edit/fulfilled\") {\n          dispatch(getAllSettings());\n          handleClose();\n          clearFormData();\n          notification.success({\n            message: \"settings updated successfully\",\n          });\n        } else if (response.type === \"settings/edit/rejected\") {\n          notification.error({\n            message: response?.error?.message,\n          });\n          console.log(\"error notification\", response?.error?.message);\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        console.log(\n          \"error notification\",\n          \"Error updating settings, please try again\"\n        );\n      });\n  };\n\n  return (\n    <>\n      <span onClick={handleShow}>Edit</span>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton onClick={clearFormData}>\n          <Modal.Title>Edit settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleeditSettings}>\n\n            \n\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicAddress\">\n                    <Form.Label>Value</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"value\"\n                      defaultValue={settingsFormData?.value}\n                      onChange={(evt) => handleInputChange(evt)}\n                    />\n                  </Form.Group>\n  \n\n            <Button style={{background: '#ff0303', border: '1px solid #ff0303'}}\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={confirmLoading ? true : false}\n            >\n              {confirmLoading ? \"Please wait...\" : \"Submit\"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default UpdateSettings;\n","import { Button, Table, Switch } from \"antd\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport { getColumnSearchProps } from \"../../utils/tableColSearch\";\nimport UpdateSettings from \"./UpdateSettings\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst SettingsTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  const columns = [\n    {\n      title: \"Key\",\n      dataIndex: \"key\",\n      key: \"key\",\n      ...getColumnSearchProps({\n        dataIndex: \"key\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: \"Value\",\n      dataIndex: \"value\",\n      key: \"value\",\n      ...getColumnSearchProps({\n        dataIndex: \"value\",\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: \"Actions\",\n      key: \"id\",\n      align: \"center\",\n      render: (singleData) => (\n        <>\n          {(admin?.level === 0 || admin?.level === 1) && (\n            <div>\n              <Button style={{ marginRight: \"5px\" }} title=\"Edit Location\">\n                <UpdateSettings settings={singleData} />\n              </Button>\n            </div>\n          )}\n\n          {(admin?.level === 2 || admin?.level === 3) && <div>N/a</div>}\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey=\"id\"\n        scroll={{ x: \"max-content\" }}\n      />\n    </div>\n  );\n};\n\nexport default SettingsTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, notification, PageHeader } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllSettings } from \"../../redux/settingsSlice\";\nimport CreateSetting from \"./CreateSetting\";\nimport SettingsTable from \"./SettingsTable\";\nimport ExpirySession from \"../../utils/expirySession\";\n\nconst Setting = () => {\n  const { settings } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllSettings());\n  }, []);\n\n  const { admin } = ExpirySession.get(\"user\");\n\n  return (\n    <div>\n      {admin?.level === 0 || admin?.level === 1 || admin?.level === 2 ? (\n        <PageHeader\n          extra={[\n            <Button\n              key=\"Createsettings\"\n              style={{ color: \"#ff0303\", border: \"1px solid #ff0303\" }}\n            >\n              <CreateSetting />\n            </Button>,\n          ]}\n          title=\"Settings\"\n        />\n      ) : (\n        <PageHeader extra={[]} title=\"Settings\" />\n      )}\n\n      {settings?.data?.settings && (\n        <SettingsTable\n          data={settings?.data?.settings}\n          loading={settings.loading}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Setting;\n","import \"antd/dist/antd.variable.min.css\";\nimport \"./App.css\";\nimport { lazy, Suspense, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { Spin } from \"antd\";\n\nimport ProtectedRoutes from \"./routes/ProtectedRoutes\";\nimport AuthRoutes from \"./routes/AuthRoutes\";\n\nimport NotFoundPage from \"./pages/ErrorPages/NotFoundPage\";\nimport Theme from \"./theme\";\nimport ForgotPassword from \"./pages/Auth/ForgotPassword\";\nimport ResetPassword from \"./pages/Auth/ResetPassword\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Bookings, { BookingInfo } from \"./pages/Bookings\";\nimport Clients, { ClientInfo } from \"./pages/Clients\";\nimport ServiceProviders, {\n  ServiceProviderInfo,\n} from \"./pages/ServiceProviders\";\nimport PaymentMethods from \"./pages/PaymentMethods\";\nimport Transactions from \"./pages/Transactions\";\nimport Settings from \"./pages/Settings\";\nimport ProductCategories from \"./pages/ServiceCategory/ProductCategories\";\nimport Products from \"./pages/Product/Products\";\nimport CreateProduct from \"./pages/Product/CreateProduct\";\nimport ProductDetails from \"./pages/Product/ProductDetails\";\nimport EditProduct from \"./pages/Product/EditProduct\";\nimport VarietyBoxes from \"./pages/VarietyBox/VarietyBoxes\";\nimport CreateVarietyBox from \"./pages/VarietyBox/CreateVarietyBox\";\nimport VarietyBoxDetails from \"./pages/VarietyBox/VarietyBoxDetails\";\nimport EditVarietyBox from \"./pages/VarietyBox/EditVarietyBox\";\nimport CountdownTimer from \"./pages/Groups/CountdownTimer\";\nimport Groups from \"./pages/Groups/Groups\";\nimport GroupDetail from \"./pages/Groups/GroupDetail\";\nimport Customers from \"./pages/Customers/Customers\";\nimport CustomerDetail from \"./pages/Customers/CustomerDetail\";\n\nimport Activities from \"./pages/Activity/Activities\";\nimport CreateGlobalActivity from \"./pages/Activity/CreateGlobalActivity\";\nimport ActivityDetails from \"./pages/Activity/ActivityDetails\";\nimport Subjects from \"./pages/Subjects/Subjects\";\nimport Learnerclasses from \"./pages/Learnerclasses/Learnerclasses\";\nimport LearnerAges from \"./pages/LearnerAges/LearnerAges\";\nimport Courses from \"./pages/course/Courses\";\nimport CreateCourse from \"./pages/course/CreateCourse\";\nimport CourseDetail from \"./pages/course/CourseDetail\";\nimport Categories from \"./pages/Category/Categories\";\nimport Companies from \"./pages/Company/Companies\";\nimport Insurances from \"./pages/Insurance/Insurances\";\nimport InsuranceDetail from \"./pages/Insurance/InsuranceDetail\";\nimport CompanyDetails from \"./pages/Company/CompanyDetails\";\nimport Lessons from \"./pages/Lesson/Lessons\";\nimport LessonDetails from \"./pages/Lesson/LessonDetails\";\nimport Claims from \"./pages/Claim/Claims\";\nimport ClaimDetails from \"./pages/Claim/ClaimDetails\";\nimport Users from \"./pages/Users/ListUsers\";\nimport UserDetails from \"./pages/Users/UserDetails\";\nimport ListUsers from \"./pages/Users/ListUsers\";\nimport ListOrders from \"./pages/Orders/ListOrders\";\nimport OrderDetails from \"./pages/Orders/OrderDetails\";\nimport ListPayments from \"./pages/Payments/ListPayments\";\nimport PaymentDetails from \"./pages/Payments/PaymentDetails\";\nimport ListContacts from \"./pages/ContactSupport/ListContacts\";\nimport Notifications from \"./pages/Notification/Notifications\";\n\nimport SupportDetails from \"./pages/ContactSupport/SupportDetails\";\nimport ListTopup from \"./pages/TopUp/ListTopup\";\nimport TopupDetails from \"./pages/TopUp/TopupDetails\";\nimport Jobs from \"./pages/Jobs/Jobs\";\nimport JobDetails from \"./pages/Jobs/JobDetails\";\nimport Wallet from \"./pages/Wallet\";\nimport WalletDetails from \"./pages/Wallet/WalletDetails\";\nimport Admins from \"./pages/SubAdmin/Admins\";\nimport ListRiders from \"./pages/Riders/ListRiders\";\nimport RiderDetails from \"./pages/Riders/RiderDetails\";\nimport ListPickupCharges from \"./pages/PickupCharges.js/ListPickupCharges\";\nimport ListHubLocations from \"./pages/Locations/ListLocations\";\nimport ListPricingParameters from \"./pages/PricingParameters/ListPricingParameters\";\nimport Chats from \"./pages/Chats/Chats\";\nimport NotificationDetails from \"./pages/Notification/NotficationDetails\";\nimport CategoryDetails from \"./pages/Category/CategoryDetails\";\nimport Bands from \"./pages/Bands/Bands\";\nimport BandDetails from \"./pages/Bands/BandDetails\";\nimport Coupons from \"./pages/Coupons/Coupons\";\nimport CouponDetails from \"./pages/Coupons/CouponDetails\";\nimport DeliveryLocations from \"./pages/DeliveryLocation/DeliveryLocations\";\nimport DeliveryLocationDetails from \"./pages/DeliveryLocation/DeliveryLocationDetails\";\nimport ListLocations from \"./pages/Locations/ListLocations\";\nimport ListSpecialRequests from \"./pages/SpecialRequests/ListSpecialRequests\";\nimport SpecialRequestDetails from \"./pages/SpecialRequests/SpecialRequestDetails\";\nimport TimeSlots from \"./pages/TimeSlot/TimeSlots\";\nimport TimeSlotDetails from \"./pages/TimeSlot/TimeSlotDetails\";\nimport SiteData from \"./pages/SiteData/SiteData\";\nimport QuickGuides from \"./pages/QuickGuide/QuickGuides\";\nimport Setting from \"./pages/Setting/Setting\";\n// import Settings from \"./pages/Settings\";\n\nconst Login = lazy(() => import(\"./pages/Auth/Login\"));\nconst Signup = lazy(() => import(\"./pages/Auth/Signup\"));\n\nconst Loading = () => {\n  return (\n    <div className=\"spin\">\n      <Spin />\n    </div>\n  );\n};\n\nTheme();\n\nfunction App() {\n  return (\n    <Suspense fallback={<Loading />}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/create-account\" element={<Signup />} />\n\n          {/* Auth routes */}\n          <Route path=\"/\" element={<AuthRoutes />}>\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/reset-password\" element={<ForgotPassword />} />\n            <Route path=\"/reset-confirmation\" element={<ResetPassword />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Route>\n\n          {/* Private routes  */}\n          <Route path=\"/\" element={<ProtectedRoutes />}>\n            {/* Other protected pages */}\n            <Route\n              //\n              path=\"/dashboard\"\n              element={<Dashboard />}\n            />\n            <Route\n              //\n              path=\"/bookings\"\n              element={<Bookings />}\n            />\n            {/* <Route\n              //\n              path='/bookings/:id'\n              element={<BookingInfo />}\n            /> */}\n            <Route\n              //\n              path=\"/clients\"\n              element={<Clients />}\n            />\n            <Route\n              //\n              path=\"/clients/:id\"\n              element={<ClientInfo />}\n            />\n            <Route\n              //\n              path=\"/product-categories\"\n              element={<ProductCategories />}\n            />\n            <Route\n              //\n              path=\"/service-provider/:id\"\n              element={<ServiceProviderInfo />}\n            />\n            <Route\n              //\n              path=\"/service-provider\"\n              element={<ServiceProviders />}\n            />\n            <Route\n              //\n              path=\"/payment-method\"\n              element={<PaymentMethods />}\n            />\n            <Route\n              //\n              path=\"/transactions\"\n              element={<Transactions />}\n            />\n            <Route\n              //\n              path=\"/wallet\"\n              element={<Wallet />}\n            />\n\n            <Route\n              //\n              path=\"/wallet/details/:id\"\n              element={<WalletDetails />}\n            />\n            <Route\n              //\n              path=\"/settings\"\n              element={<Settings />}\n            />\n            <Route path=\"products\" element={<Products />} />\n            <Route path=\"product/create\" element={<CreateProduct />} />\n            <Route\n              //\n              path=\"/product/details/:id/:refkey\"\n              element={<ProductDetails />}\n            />\n            <Route\n              //\n              path=\"/product/edit/:id/:refkey\"\n              element={<EditProduct />}\n            />\n            {/* VarietyBoxes */}\n            <Route path=\"variety-Boxes\" element={<VarietyBoxes />} />\n            <Route path=\"variety-Box/create\" element={<CreateVarietyBox />} />\n            <Route\n              //\n              path=\"/variety-box/details/:id/:refkey\"\n              element={<VarietyBoxDetails />}\n            />\n            <Route\n              //\n              path=\"/variety-box/edit/:id/:refkey\"\n              element={<EditVarietyBox />}\n            />\n            <Route\n              //\n              path=\"/timer-countdown\"\n              element={<CountdownTimer />}\n            />\n            <Route path=\"groups\" element={<Groups />} />\n            <Route\n              //\n              path=\"/group/details/:id\"\n              element={<GroupDetail />}\n            />\n\n            <Route\n              //\n              path=\"/customers\"\n              element={<Customers />}\n            />\n            <Route\n              //\n              path=\"/customer/details/:id/:email\"\n              element={<CustomerDetail />}\n            />\n\n            <Route path=\"activities\" element={<Activities />} />\n            <Route\n              path=\"activity/global/create\"\n              element={<CreateGlobalActivity />}\n            />\n            <Route\n              //\n              path=\"/activity/details/:id\"\n              element={<ActivityDetails />}\n            />\n            <Route\n              //\n              path=\"/product/edit/:id/:refkey\"\n              element={<EditProduct />}\n            />\n            {/* subject */}\n            <Route path=\"subjects\" element={<Subjects />} />\n            <Route path=\"learner-classes\" element={<Learnerclasses />} />\n            <Route path=\"learner-ages\" element={<LearnerAges />} />\n            <Route path=\"courses\" element={<Courses />} />\n            <Route path=\"course/create\" element={<CreateCourse />} />\n            <Route\n              path=\"/course/details/:id/:title_slug\"\n              element={<CourseDetail />}\n            />\n            <Route path=\"/categories\" element={<Categories />} />\n            <Route path=\"/categories/details/:id\" element={<CategoryDetails />} />\n\n            <Route path=\"/sitedata\" element={<SiteData />} />\n\n\n            <Route path=\"/bands\" element={<Bands/>} />\n            <Route path=\"/bands/details/:id\" element={<BandDetails />} />\n\n            <Route path=\"/time-slots\" element={<TimeSlots/>} />\n            <Route path=\"/time-slots/details/:id\" element={<TimeSlotDetails />} />\n\n            <Route path=\"/delivery\" element={<DeliveryLocations/>} />\n            <Route path=\"/delivery/details/:id\" element={<DeliveryLocationDetails />} />\n\n            <Route path=\"/coupons\" element={<Coupons/>} />\n            <Route path=\"/coupons/details/:id\" element={<CouponDetails />} />\n\n            <Route path=\"/companies\" element={<Companies />} />\n            <Route\n              path=\"/company/details/:id/:slug\"\n              element={<CompanyDetails />}\n            />\n\n            <Route path=\"/jobs\" element={<Jobs />} />\n            <Route path=\"/job/details/:id/:slug\" element={<JobDetails />} />\n\n            <Route path=\"insurances\" element={<Insurances />} />\n            <Route\n              path=\"/insurance/details/:id/:slug\"\n              element={<InsuranceDetail />}\n            />\n            <Route path=\"products\" element={<Products />} />\n            <Route\n              path=\"/product/details/:id/:slug\"\n              element={<ProductDetails />}\n            />\n            <Route path=\"lessons\" element={<Lessons />} />\n            <Route\n              path=\"/lesson/details/:id/:slug\"\n              element={<LessonDetails />}\n            />\n\n            <Route path=\"claims\" element={<Claims />} />\n            <Route path=\"/claim/details/:id/:slug\" element={<ClaimDetails />} />\n\n            <Route path=\"chats\" element={<Chats />} />\n\n            <Route path=\"orders\" element={<ListOrders />} />\n            <Route path=\"/order/details/:id\" element={<OrderDetails />} />\n\n            <Route path=\"special-requests\" element={<ListSpecialRequests />} />\n            <Route path=\"/special-requests/details/:id\" element={<SpecialRequestDetails />} />\n\n            <Route path=\"users\" element={<ListUsers />} />\n            <Route path=\"/user/details/:id/:email\" element={<UserDetails />} />\n\n            <Route path=\"riders\" element={<ListRiders />} />\n            <Route path=\"/rider/details/:id\" element={<RiderDetails />} />\n            <Route path=\"topup\" element={<ListTopup />} />\n            <Route path=\"/topup/details/:id/\" element={<TopupDetails />} />\n            <Route path=\"payments\" element={<ListPayments />} />\n            <Route\n              path=\"/payment/details/:id/:ref\"\n              element={<PaymentDetails />}\n            />\n            <Route path=\"contacts\" element={<ListContacts />} />\n            <Route path=\"/contacts/details/:id\" element={<SupportDetails />} />\n\n            <Route path=\"notifications\" element={<Notifications />} />\n            <Route\n              path=\"/notification/details/:id\"\n              element={<NotificationDetails />}\n            />\n\n            <Route path=\"quickguide\" element={<QuickGuides />} />\n            <Route path=\"/pickupcharge\" element={<ListPickupCharges />} />\n            <Route path=\"/locations\" element={<ListLocations />} />\n            <Route path=\"/setting\" element={<Setting />} />\n\n            <Route\n              path=\"/pricing-parameters\"\n              element={<ListPricingParameters />}\n            />\n\n            <Route path=\"admins\" element={<Admins />} />\n          </Route>\n\n          {/* Catch all routes -> push to not found page */}\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </BrowserRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { Col, Row } from 'antd'\n\nexport function RowDetails({ label, value = 'value' }) {\n  return (\n    <>\n      <Row style={{ gap: '1rem' }} className='rows py-2'>\n        <Col sm={8} md={6}>\n          <p className='m-0 pl-2'>{label}</p>\n        </Col>\n        <Col sm={12} md={12}>\n          <p className='m-0'>{value}</p>\n        </Col>\n      </Row>\n      <hr className='w-100 divider' />\n    </>\n  )\n}\n","import { Button, Input, Space } from \"antd\";\nimport { BsSearch } from \"react-icons/bs\";\nimport Highlighter from \"react-highlight-words\";\n\nexport const getColumnSearchProps = ({\n  dataIndex,\n  searchInput,\n  handleSearch,\n  handleReset,\n  setSearchedColumn,\n  setSearchText,\n  searchText,\n  searchedColumn,\n}) => ({\n  filterDropdown: ({\n    setSelectedKeys,\n    selectedKeys,\n    confirm,\n    clearFilters,\n  }) => (\n    <div\n      style={{\n        padding: \"1rem\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"0.5rem\",\n      }}\n    >\n      <Input\n        ref={searchInput}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={(e) =>\n          setSelectedKeys(e.target.value ? [e.target.value] : [])\n        }\n        onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n        style={{\n          marginBottom: 8,\n          display: \"block\",\n        }}\n      />\n      <Space>\n        <Button\n          type=\"primary\"\n          onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          icon={<BsSearch size={12} />}\n          size=\"small\"\n          style={{\n            width: 90,\n            display: \"flex\",\n            gap: \"0.3rem\",\n            alignItems: \"center\",\n          }}\n        >\n          Search\n        </Button>\n        <Button\n          onClick={() => clearFilters && handleReset(clearFilters)}\n          size=\"small\"\n          style={{\n            width: 90,\n          }}\n        >\n          Reset\n        </Button>\n      </Space>\n    </div>\n  ),\n  filterIcon: (filtered) => (\n    <BsSearch\n      style={{\n        color: filtered ? \"#1890ff\" : undefined,\n      }}\n    />\n  ),\n  onFilter: (value, record) =>\n    record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n  onFilterDropdownVisibleChange: (visible) => {\n    if (visible) {\n      setTimeout(() => searchInput.current?.select(), 100);\n    }\n  },\n  render: (text) =>\n    searchedColumn === dataIndex ? (\n      <Highlighter\n        highlightStyle={{\n          backgroundColor: \"#ffc069\",\n          padding: 0,\n        }}\n        searchWords={[searchText]}\n        autoEscape\n        textToHighlight={text ? text.toString() : \"\"}\n      />\n    ) : (\n      text\n    ),\n});\n"],"names":["dispatch","useDispatch","useState","window","innerWidth","deviceWidth","setDeviceWidth","useSelector","state","app","siderHidden","siderCollapsed","useEffect","handleResize","addEventListener","removeEventListener","adminInfo","localStorage","getItem","adminName","JSON","parse","toggleSiderHidden","toggleCollapseSider","useNavigate","className","style","display","padding","alignItems","justifyContent","value","admin","name","color","backgroundColor","marginRight","border","to","NotificationOutlined","size","onClick","logout","navigate","location","useLocation","currentPage","setCurrentPage","items","reduce","acc","curr","pathname","includes","key","label","icon","children","DashboardOutlined","BarcodeOutlined","UnorderedListOutlined","StyledLogo","width","height","src","Logosmall","alt","theme","mode","selectedKeys","fontFamily","values","map","item","borderRight","position","bottom","left","gap","transform","fill","block","styled","Header","Layout","Sider","Content","props","collapsed","ContentStyle","Loading","auth","isLoggedIn","Suspense","fallback","replace","from","FullPageContainer","ConfigProvider","primaryColor","Form","form","loading","setLoading","LoginContainer","Logo192","textAlign","level","requiredMark","onFinish","sendOTP","then","response","type","setItem","payload","notification","message","layout","autoComplete","rules","required","placeholder","htmlType","strong","error","setError","resetPassword","onFieldsChange","pattern","fontSize","margin","cursor","e","preventDefault","email","resendOTP","getFieldValue","validator","_","Promise","reject","Error","resolve","lazy","Clients","ClientInfo","ServiceProviders","ServiceProviderInfo","Messages","displayPosition","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","initialFormState","description","show","setShow","image","setImage","categoryFormData","setCategoryFormData","confirmLoading","setConfirmLoading","handleClose","handleInputChange","event","target","clearFormData","variant","onHide","closeButton","onSubmit","formData","FormData","append","console","log","createServiceCategory","getAllServiceCategory","catch","controlId","onChange","evt","evnt","files","disabled","category","serviceCategory","id","editServiceCategory","defaultValue","with","categories","handleDelete","$","document","ready","DataTable","listCategories","moment","created_at","format","danger","extra","title","data","confirm","deleteServiceCategory","category_id","price","thumbnail","unit_of_measurement","productFormData","setProductFormData","getAllCategories","categories_list","createProduct","getAllProducts","marginBottom","selectedValue","marginTop","editProduct","hideShowProduct","minPrice","setMinPrice","maxPrice","setMaxPrice","filteredData","setFilteredData","shouldRenderTable","setShouldRenderTable","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","useRef","handleSearch","dataIndex","handleReset","clearFilters","ExpirySession","columns","getColumnSearchProps","render","availability","filterIcon","FilterOutlined","filterDropdown","filteredResults","filter","parseFloat","isNaN","handlePriceFilter","whiteSpace","displayType","thousandSeparator","prefix","align","singleData","thumbnail_url","borderRadius","objectFit","UserOutlined","updated_at","marginLeft","checked","pagination","length","dataSource","rowKey","scroll","x","products","fetchData","isChecked","setIsChecked","linkArray","links","slice","deleteProduct","StyledDiv","link","i","handleGetProducts","background","ProductImages","images","productImages","image_url","product_Images","Tabs","defaultActiveKey","Tab","eventKey","ProductDetails","useParams","refkey","relatedproducts","related_products","prod","product","getOneProduct","Card","sku","Row","Col","Table","striped","bordered","hover","individual_price","group_price","quantity_instock","product_size","featured_image","Number","toLocaleString","varietyBoxes","getAllVarietyBoxes","variety_box_size","relatedProducts","product_id","quantity","varietyBoxItem","setVarietyBoxItem","validated","setValidated","variety_box_category","setVarietyBoxCategory","showVarietyboxCategory","getVarietyBoxCategory","related_products_list","handleChange","newvarietyBoxItem","noValidate","currentTarget","checkValidity","stopPropagation","createVarietyBox","varietyBoxdata","variety_box_id","addItemsToVarietyBox","getElementById","reset","as","element","index","InputGroup","splice","removeFormFields","alert","VarietyBoxDetails","varietyboxproducts","variety_products","getOneVarietyBox","varietyBoxId","vb","setVb","refreshVB","varietyBoxService","editVarietyBox","enddate","calculateTimeLeft","year","Date","getFullYear","difference","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","start_date","end_date","Groups","groups","getAllGroups","Members","members","member","first_name","last_name","member_type","product_quantity","total","GroupDetail","getOneGroup","group_name","status","phone_number","textDecoration","href","profile_photo_url","orders","customers","getAllCustomers","total_price","delivery_fee","customer","StyledContainer","RowDetails","wallet","full_name","address","is_blocked","is_online","TabPane","tab","AboutHolder","getOneCustomer","activities","activity","pivot","Meta","avatar","activity_date","activityFormData","setActivityFormData","editGlobalActivity","getAllActivities","activity_type","createGlobalActivity","deleteOneActivity","ActivityDetails","subject_name","logo","subject","subjectFormData","setSubjectFormData","editSubject","getAllSubjects","courses","createSubject","subjects","deleteSubject","class_name","learnerClassFormData","setLearnerClassFormData","createLearnerclass","getAllLearnerclasses","learnerclass","editLearnerclass","learnerClasses","deleteLearnerClass","learnerAgeFormData","setLearnerAgeFormData","createLearnerAge","getAllLearnerAges","learnerage","editLearnerAge","learnerAges","deleteLearnerAge","course_fee","total_course_fee","quizzes","title_slug","getAllCourses","deleteCourse","subject_id","learner_class_id","learner_age_id","course_title","percentage_discount","read_duration","content_source_url","course_contents","course_content_url","CourseFormData","setCourseFormData","allsubjects","alllearnerclasses","alllearnerages","CourseContent","setCourseContent","subjects_list","learnerclasses_list","learneraga_list","createCourse","courseContentData","course_id","addCourseContent","newCourseContent","CourseDetail","course_content","getOneCourse","course_discount","autoPlay","muted","loop","band","getAllBands","tax","delivery_option","discount_option","discount_type","discount_value","band_id","order","setcategoryFormData","band_list","createCategory","editCategory","hideShowCategory","hidden","deleteCategory","website","companyFormData","setcompanyFormData","createCompany","getAllCompanies","company","editCompany","substring","insurances","slug","companies","deleteCompany","banner","company_id","terms_condition","discount","insurance_policy","insurance_policy_percentage_value","insuranceFormData","setinsuranceFormData","category_list","company_list","backdrop","createInsurance","getAllInsurances","insurance","selected","editInsurance","discounted_price","motos","shops","travels","homes","discounted","popular","deleteInsurance","motoInsurances","setMotoInsurances","travelInsurances","settravelInsurances","shopInsurances","setshopInsurances","homeInsurances","sethomeInsurances","discountedInsurances","setdiscountedInsurances","popularInsurances","setpopularInsurances","listMotoInsurances","listTravelInsurances","listShopInsurances","listHomeInsurances","listDiscountedInsurances","listPopularInsurances","is_discounted","InsuranceService","res","err","insurance_id","lesson","lessonFormData","setlessonFormData","insurance_list","editLesson","getAllLessons","ratings","users","getOneUser","rating_list","rating","user","profile_picture","StarOutlined","star_rating_count","CommentOutlined","comment","lessons","deleteLesson","getOneInsurance","rating_count","getOneCompany","createLesson","getOneLesson","Commons","getClaimStatus","policy_number","claims","paidClaims","pendingClaims","declinedClaims","paidclaims","setPaidclaims","pendingclaims","setpendingclaims","declinedclaims","setdeclinedclaims","getAllClaims","listPaidClaims","listPendingClaims","listDeclinedClaims","claim","Proofs","proof_list","proof","CardGroup","claim_id","handleUpdateClaimStatus","claimFormData","setclaimFormData","getOneClaim","incident_date","incident_description","claim_image","updateClaimStatus","dateSliceLength","orderKey","amountKey","priceKey","discountKey","userKey","categoryKey","companyKey","filename","insuranceKey","convertToCSV","array","join","obj","Array","isArray","stringify","getPropertyValueLength","amount","csv","blob","Blob","url","URL","createObjectURL","createElement","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","getAllUsers","verified","loyalty_points","email_verified_at","getAllOrders","deleteOrder","ItemTable","getOneOrder","statusData","setStatusData","order_id","delivery_info","delivery_time_slot","payment_type","recipient_name","recipient_email","recipient_phone","updateStatus","payments","getAllPayments","getOnePayment","reference","track_no","contacts","getAllSupports","client_list","client","notificationFormData","setnotificationFormData","user_id","sendToOneUser","user_ids","setSelected","user_list","paddingBottom","val","sendToMultipleUsers","sendToAllUsers","notifications","getAllNotifications","paddingTop","SupportDetails","getOneSupport","topup","getAllTopups","getOneTopup","headline_slug","jobs","featuredJobs","getAllJobs","getAllFeatured","getOneJob","featureJob","handleFeature","is_featured","headline","experience_level","delivery_timeline","project_status","job_images","wrap","getOneWallet","cashout_account","account_name","account_number","bank_name","transaction_type","password","password_confirmation","adminFormData","setadminFormData","passwordsMatch","setPasswordsMatch","createAdmin","getAllAdmin","admins","CreateAdmin","deleteAdmin","rider_orders","riderFormData","setriderFormData","setAddress","latitude","setLatitude","longitude","setLongitude","createRider","getAllRiders","googleMapsApiKey","libraries","onLoad","searchBox","addListener","places","getPlaces","place","geometry","lat","lng","formatted_address","zIndex","rider","doc","flexWrap","vehicle_license","hackney_permit","mot","road_worthiness","details","fontWeight","paddingLeft","rider_emergency_contact_name","rider_emergency_contact_phone_number","vehicle_registration_number","vehicle_type","means_of_id_type","means_of_id","rider_card","sender","rider_detail","rider_documents","rider_chats_histories","reason","setReason","accepting_pickups","rider_earnings","approveRiderDoc","blockRider","reason_for_rejection","rider_id","declineRiderDoc","getOneRider","pickupFormData","setpickupFormData","createPickup","getAllPickup","pickup","pickup_charge_id","editPickup","handleEdit","deletePickup","locationFormData","setlocationFormData","resetForm","createLocation","getAllLocations","hideShowLocation","pricing","pricingFormData","setpricingFormData","option","pricing_parameter_id","editPricingParameter","getAllPricingParameters","last_message","chat","getAllChats","getOneNotification","hoverable","message_title","message_content","getOneCategory","bulk_discount_percentage","bulk_discount_amount","minimum","discount_enabled","general_discount","free_delivery_threshold","bandFormData","setbandFormData","createBand","editBand","getOneBand","code","couponFormData","setCouponFormData","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","formatDate","date","toISOString","createCoupon","getAllCoupons","sm","dateFormat","coupon","coupon_id","editCoupon","coupons","deleteCoupon","getOneCoupon","setChecked","deliveryLocationFormData","setDeliveryLocationFormData","location_list","createDeliveryLocation","getAllDeliveryLocations","deliveryLocation","delivery_id","editDeliveryLocation","locations","deleteDeliveryLocation","getOneDeliveryLocation","bandName","b","special_requests","getAllSpecialRequests","requests","deleteSpecialRequest","getOneSpecialRequest","request","start_time","end_time","is_available","selectedStartTime","setSelectedStartTime","selectedEndTime","setSelectedEndTime","timeSlotFormData","setTimeSlotFormData","toLocaleTimeString","hour","minute","hour12","createTimeSlot","getAllTimeSlots","time","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","timeslot","timeslot_id","editTimeSlot","showTimeSlot","hideTimeSlot","timeSlots","deleteTimeSlot","faq","terms_and_conditions","privacy_policy","contact_data","sitedata","sitedataFormData","setsitedataFormData","editSiteData","getAllSiteData","quickGuideFormData","setQuickGuideFormData","createQuickGuide","getAllQuickGuides","quickGuide","editQuickGuide","hideShowQuickGuide","image_path","is_hidden","deleteQuickGuide","settingsFormData","setsettingsFormData","createSettings","getAllSettings","settings","editSettings","Login","Signup","Theme","path","Admins","md","setSelectedKeys","flexDirection","ref","onPressEnter","filtered","onFilter","record","toString","toLowerCase","onFilterDropdownVisibleChange","visible","current","select","text","highlightStyle","searchWords","autoEscape","textToHighlight"],"sourceRoot":""}