{"version":3,"file":"static/js/418.8829281b.chunk.js","mappings":"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","sources":["services/dashboardService.js","pages/Dashboard/TopSellingTable.js","pages/Dashboard/TopSellingLocationTable.js","pages/Dashboard/TotalSalesTable.js","pages/Dashboard/Dashboard.js"],"sourcesContent":["import AuthAPI from './authInstance'\n\nconst getDashboardStats = async () => {\n  const response = await AuthAPI.get(`/admin/dashboard/stats`)\n  return response\n}\n\nconst getAnalytics = async () => {\n  const response = await AuthAPI.get(`/admin/dashboard/analytics`)\n  return response\n}\n\nconst getOne = async (data) => {\n  const response = await AuthAPI.get(`/admin/user/show/${data}`)\n  return response.data\n}\n\nexport const dashboardService = {\n  getDashboardStats,\n  getOne,\n  getAnalytics\n}\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst TopSellingTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Product name',\n      dataIndex: 'product_name',\n      key: 'product_name',\n    },\n\n    {\n        title: 'Total',\n        dataIndex: 'total',\n        key: 'total',\n      },\n\n\n  ]\n\n  return (\n    <div style={{marginBottom: '30px'}}>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default TopSellingTable\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst TopSellingLocationTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Delivery Info',\n      dataIndex: 'delivery_info',\n      key: 'delivery_info',\n    },\n\n    {\n        title: 'Total',\n        dataIndex: 'total',\n        key: 'total',\n      },\n\n\n  ]\n\n  return (\n    <div style={{marginBottom: '30px'}}>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default TopSellingLocationTable\n","import { Avatar, Button, Table } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\nimport { NumericFormat } from 'react-number-format'\n\n\nconst TotalSalesTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Product name',\n      dataIndex: 'product_name',\n      key: 'product_name',\n    },\n\n    {\n        title: 'Total Sold',\n        dataIndex: 'total_sold',\n        key: 'total_sold',\n      },\n      {\n        title: 'Total amount',\n        dataIndex: 'total_amount',\n        key: 'total_amount',\n        render: (total_amount) => (\n          <span style={{ whiteSpace: 'nowrap' }}>\n            <NumericFormat\n              value={total_amount}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={'₦'}\n            />\n          </span>\n        ),\n      },\n\n  ]\n\n  return (\n    <div style={{marginBottom: '30px'}}>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data?.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default TotalSalesTable\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport CardGroup from \"react-bootstrap/CardGroup\";\nimport { dashboardService } from \"../../services/dashboardService\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PageHeader } from \"antd\";\nimport styled from \"styled-components\";\nimport { NumericFormat } from 'react-number-format'\nimport TopSellingTable from \"./TopSellingTable\";\nimport TopSellingLocationTable from \"./TopSellingLocationTable\";\nimport TotalSalesTable from \"./TotalSalesTable\";\n\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n  const [dashboardStats, setdashboardStats] = useState();\n  const [analytics, setAnalytics] = useState();\n\n  useEffect(() => {\n    getStatistics();\n    getAnalytics()\n  }, []);\n\n\n  const getStatistics = () => {\n    dashboardService\n      .getDashboardStats()\n      .then((res) => {\n        setdashboardStats(res?.data);\n      })\n      .catch((error) => {\n      });\n  };\n\n  const getAnalytics = () => {\n    dashboardService\n      .getAnalytics()\n      .then((res) => {\n        setAnalytics(res?.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  console.log(\"analytics\", analytics);\n\n\n  return (\n    <div>\n      <PageHeader extra={[]} title=\"Dashboard\" />\n      <StyledContainer>\n        <CardGroup className=\"card-group\">\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <Link style={{ color: \"#FF0303\" }} to=\"/admins\">\n                  Admins\n                </Link>\n              </Card.Title>\n              <Card.Text>{dashboardStats?.admins}</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <Link style={{ color: \"#FF0303\" }} to=\"/bands\">\n                  Bands\n                </Link>\n              </Card.Title>\n              <Card.Text>{dashboardStats?.bands}</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <Link style={{ color: \"#FF0303\" }} to=\"/categories\">\n                  Categories\n                </Link>\n              </Card.Title>\n              <Card.Text>{dashboardStats?.categories}</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <Link style={{ color: \"#FF0303\" }} to=\"/orders\">\n                  Orders\n                </Link>\n              </Card.Title>\n              <Card.Text>{dashboardStats?.orders}</Card.Text>\n            </Card.Body>\n          </Card>\n        </CardGroup>\n        <CardGroup className=\"card-group\">\n          <Card>\n            <Card.Body>\n              <Card.Title className=\"card-title\">\n                <Link style={{ color: \"#FF0303\" }} to=\"/payments\">\n                  Payments\n                </Link>\n              </Card.Title>\n              <Card.Text>{dashboardStats?.payments}</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <Link style={{ color: \"#FF0303\" }} to=\"products\">\n                  <Link style={{ color: \"#FF0303\" }} to=\"/products\">\n                    Products\n                  </Link>\n                </Link>\n              </Card.Title>\n              <Card.Text>{dashboardStats?.products}</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <Link style={{ color: \"#FF0303\" }} to=\"/special-requests\">\n                  Special requests\n                </Link>\n              </Card.Title>\n              <Card.Text>{dashboardStats?.special_requests}</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <Link style={{ color: \"#FF0303\" }} to=\"/users\">\n                  Users\n                </Link>\n              </Card.Title>\n              <Card.Text>{dashboardStats?.users}</Card.Text>\n            </Card.Body>\n          </Card>\n        </CardGroup>\n      </StyledContainer>\n      <PageHeader extra={[]} title=\"Analytics\" />\n      <StyledContainer>\n        <CardGroup className=\"card-group\">\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <div style={{ color: \"#FF0303\" }}>\n                  Total revenue today\n                </div>\n              </Card.Title>\n              <Card.Text> <NumericFormat\n            value={analytics?.total_revenue_today}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /></Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <div style={{ color: \"#FF0303\" }}>\n                  Total revenue this week\n                </div>\n              </Card.Title>\n              <Card.Text> <NumericFormat\n            value={analytics?.total_revenue_this_week}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /></Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <div style={{ color: \"#FF0303\" }}>\n                  Total revenue this month\n                </div>\n              </Card.Title>\n              <Card.Text> <NumericFormat\n            value={analytics?.total_revenue_this_month}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /></Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <div style={{ color: \"#FF0303\" }}>\n                  Total revenue over the last 30 days\n                </div>\n              </Card.Title>\n              <Card.Text> <NumericFormat\n            value={analytics?.total_revenue_last_30_days}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /></Card.Text>\n            </Card.Body>\n          </Card>\n        </CardGroup>\n        <CardGroup className=\"card-group\">\n        <Card>\n            <Card.Body>\n              <Card.Title>\n                <div style={{ color: \"#FF0303\" }}>\n                  Total revenue over the last 90 days\n                </div>\n              </Card.Title>\n              <Card.Text> <NumericFormat\n            value={analytics?.total_revenue_last_90_days}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /></Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <div style={{ color: \"#FF0303\" }}>\n                  Total revenue (all time)\n                </div>\n              </Card.Title>\n              <Card.Text> <NumericFormat\n            value={analytics?.total_revenue_all_time}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /></Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <div style={{ color: \"#FF0303\" }}>\n                  Total revenue (this year)\n                </div>\n              </Card.Title>\n              <Card.Text> <NumericFormat\n            value={analytics?.total_revenue_this_year}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /></Card.Text>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>\n                <div style={{ color: \"#FF0303\" }}>\n                  Average order value\n                </div>\n              </Card.Title>\n              <Card.Text> <NumericFormat\n            value={analytics?.average_order_value}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₦'}\n          /></Card.Text>\n            </Card.Body>\n          </Card>\n        </CardGroup>\n\n        <PageHeader extra={[]} title=\"Top selling products\" />\n\n        <TopSellingTable\n        data={analytics?.top_selling_products}\n      />\n\n<PageHeader extra={[]} title=\"Top selling locations\" />\n\n<TopSellingLocationTable\ndata={analytics?.top_selling_locations}\n/>\n\n\n<PageHeader extra={[]} title=\"Total sales per product\" />\n\n<TotalSalesTable\ndata={analytics?.total_sales_per_product}\n/>\n      </StyledContainer>\n    </div>\n  );\n};\n\nexport default Dashboard;\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n  .card-group {\n    font-size: 14px;\n    font-family: Arial;\n    padding-bottom: 20px;\n  }\n  .card-title {\n    font-size: 14px;\n    font-family: Arial;\n  }\n`;\n"],"names":["getDashboardStats","AuthAPI","response","getAnalytics","getOne","data","dashboardService","loading","useState","useRef","style","marginBottom","columns","title","dataIndex","key","pagination","length","dataSource","rowKey","scroll","x","render","total_amount","whiteSpace","value","displayType","thousandSeparator","prefix","useDispatch","useNavigate","dashboardStats","setdashboardStats","analytics","setAnalytics","useEffect","getStatistics","then","res","catch","error","console","log","extra","StyledContainer","CardGroup","className","Card","color","to","admins","bands","categories","orders","payments","products","special_requests","users","total_revenue_today","total_revenue_this_week","total_revenue_this_month","total_revenue_last_30_days","total_revenue_last_90_days","total_revenue_all_time","total_revenue_this_year","average_order_value","top_selling_products","top_selling_locations","total_sales_per_product","styled"],"sourceRoot":""}