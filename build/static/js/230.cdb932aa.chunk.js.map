{"version":3,"file":"static/js/230.cdb932aa.chunk.js","mappings":"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","sources":["pages/Clients/ClientsTable.js","pages/Clients/Clients.js"],"sourcesContent":["import { Avatar, Table, Button } from 'antd'\nimport moment from 'moment'\nimport React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\nimport { getColumnSearchProps } from '../../utils/tableColSearch'\n\nconst ClientsTable = ({ data, loading }) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchedColumn, setSearchedColumn] = useState('')\n  const searchInput = useRef(null)\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    setSearchText(selectedKeys[0])\n    setSearchedColumn(dataIndex)\n  }\n\n  const handleReset = (clearFilters) => {\n    clearFilters()\n    setSearchText('')\n  }\n\n  const columns = [\n    {\n      title: 'Image',\n      key: 'client',\n      align: 'center',\n      render: (client) => (\n        <div>\n          {client?.profile_photo_url ? (\n            <img\n              style={{\n                width: '60px',\n                height: '60px',\n                borderRadius: '50%',\n                objectFit: 'cover',\n              }}\n              src={client?.profile_photo_url}\n              height={60}\n              width={60}\n              alt='avatar'\n            />\n          ) : (\n            <Avatar style={{ backgroundColor: '#3f8bcaa1' }} icon={<UserOutlined />} size={50} />\n          )}\n        </div>\n      ),\n    },\n    {\n      title: 'First Name',\n      dataIndex: 'first_name',\n      key: 'first_name',\n      ...getColumnSearchProps({\n        dataIndex: 'first_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Last Name',\n      dataIndex: 'last_name',\n      key: 'last_name',\n      ...getColumnSearchProps({\n        dataIndex: 'last_name',\n        handleReset,\n        searchInput,\n        handleSearch,\n        setSearchedColumn,\n        searchText,\n        setSearchText,\n        searchedColumn,\n      }),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      render: (email) => (\n        <a style={{ color: 'blue', textDecoration: 'none' }} href={`mailto:${email}`}>\n          {email}\n        </a>\n      ),\n    },\n    \n\n    {\n      title: 'Phone',\n      dataIndex: 'phone_number',\n      key: 'phone_number',\n      render: (phone_number) =>\n        phone_number ? (\n          <a style={{ color: 'blue', textDecoration: 'none' }} href={`tel:${phone_number}`}>\n            {phone_number}\n          </a>\n        ) : (\n          'Null'\n        ),\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      render: (address) => address || 'Null',\n    },\n    // {\n    //   title: 'Earnings',\n    //   dataIndex: 'earnings',\n    //   key: 'earnings',\n    //   render: (earnings) => `â‚¦${Number(earnings).toLocaleString()}` || 'Null',\n    // },\n    {\n      title: 'Client Type',\n      dataIndex: 'user_type',\n      key: 'user_type',\n    },\n    {\n      title: 'Stars',\n      dataIndex: 'star_rating_count',\n      key: 'star_rating_count',\n      render: (star_rating_count) => star_rating_count || 'Null',\n    },\n    // {\n    //   title: 'Bookings',\n    //   dataIndex: 'client_orders_count',\n    //   key: 'client_orders_count',\n    // },\n    {\n      title: 'Date Created',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (created_at) => (\n        <span style={{ whiteSpace: 'nowrap' }}> {moment(created_at).format('DD MMM YYYY')}</span>\n      ),\n    },\n\n    {\n      title: '',\n      key: 'view',\n      width: 200,\n      align: 'center',\n      render: (category) => (\n        <div>\n             <Button style={{ marginRight: '5px' }} title='View client details'>\n              <Link to={`/clients/${category?.id}`}>{'View'}</Link>\n            </Button>\n        </div>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={loading}\n        pagination={data.length > 10 ? true : false}\n        dataSource={data}\n        rowKey='id'\n        scroll={{ x: 'max-content' }}\n      />\n    </div>\n  )\n}\n\nexport default ClientsTable\n","import { PageHeader } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllClients } from '../../redux/clientSlice';\nimport ClientsTable from './ClientsTable';\n\nconst Patients = () => {\n  const dispatch = useDispatch()\n  const { clients } = useSelector((state) => state)\n\n  useEffect(() => {\n    dispatch(getAllClients())\n  }, [])\n\n  return (\n    <div>\n      <PageHeader title='Clients' />\n      <ClientsTable data={clients.data} loading={clients.loading} />\n    </div>\n  )\n}\n\nexport default Patients\n"],"names":["data","loading","useState","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","useRef","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","columns","title","key","align","render","client","profile_photo_url","style","width","height","borderRadius","objectFit","src","alt","backgroundColor","icon","UserOutlined","size","getColumnSearchProps","email","color","textDecoration","href","phone_number","address","star_rating_count","created_at","whiteSpace","moment","format","category","marginRight","to","id","pagination","length","dataSource","rowKey","scroll","x","dispatch","useDispatch","clients","useSelector","state","useEffect","getAllClients"],"sourceRoot":""}