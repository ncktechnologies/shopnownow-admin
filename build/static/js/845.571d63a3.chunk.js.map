{"version":3,"file":"static/js/845.571d63a3.chunk.js","mappings":"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","sources":["pages/Settings/ProfileInfo.js","pages/Settings/ChangePassword.js","pages/Settings/EditProfile.js","pages/Settings/SettingsTabs.js","pages/Settings/Settings.js"],"sourcesContent":["import { Avatar, Button, Card, notification, Typography } from 'antd'\nimport Meta from 'antd/lib/card/Meta'\nimport React, { useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { BsPhone, BsArrowLeft, BsEnvelope } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport { editProfilePicture } from '../../redux/profileSlice'\n\nconst ProfileInfo = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { singleData, loading } = useSelector((state) => state.profile)\n  const imageUploadRef = useRef()\n  const formData = new FormData()\n\n  console.log(singleData)\n\n  const handleImageUpload = (e) => {\n    formData.append('profile_picture', e?.target?.files[0])\n    dispatch(editProfilePicture(formData)).then((response) => {\n      if (response?.type === 'profile/editPicture/fulfilled') {\n        notification.success({ message: 'Profile picture updated successfully' })\n      } else {\n        console.log(response)\n        notification.error({ message: 'Error updating profile image, please try again later' })\n      }\n    })\n  }\n\n  return (\n    <StyledContainer>\n      <div>\n        <div className='userInfo'>\n          <Card loading={loading} className='userInfo__card'>\n            <div className={` flex, justify-end`} onClick={() => navigate(-1)}>\n              <div to='#' className='userInfo__back'>\n                <Button \n                  icon={<BsArrowLeft />}\n                  type='link'\n                  className='hover:text-blue-100 flex gap-1 items-center hover:gap-2 ease-in-out duration-300'\n                  style={{color: '#FF0303'}}\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n            <Meta\n              avatar={\n                <div onClick={() => imageUploadRef.current.click()} className='avatar_overlay'>\n                  <input\n                    onChange={(e) => handleImageUpload(e)}\n                    name='profile_picture'\n                    ref={imageUploadRef}\n                    accept='image/png, image/gif, image/jpeg'\n                    type='file'\n                  />\n                  <Avatar\n                    size={100}\n                    src={singleData?.profile_photo_url || 'https://joeschmoe.io/api/v1/random'}\n                  />\n                </div>\n              }\n              title={\n                <Typography.Title level={2} className='text-3xl m-0 w-full'>{` ${singleData?.full_name || ''}`}</Typography.Title>\n              }\n              description={\n                <div className='metaDescription'>\n                  {singleData?.phone_number && (\n                    <div className='flex align-middle items-center gap-3 flex-wrap'>\n                      <a className='text-sm' href={`tel:${singleData?.phone_number}`}>\n                        <BsPhone size={15} /> {singleData?.phone_number || 'no phone'}\n                      </a>\n                    </div>\n                  )}\n                  <div className='flex align-middle items-center gap-3 flex-wrap '>\n                    <a href={`mailto:${singleData?.email}`} className='text-sm'>\n                      <BsEnvelope size={15} /> {singleData?.email || ''}\n                    </a>\n                  </div>\n                </div>\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    </StyledContainer>\n  )\n}\n\nexport default ProfileInfo\n\nconst StyledContainer = styled.div`\n  .ant-card-meta {\n    align-items: center !important;\n  }\n\n  .metaDescription {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.3rem;\n      color: #FF0303\n    }\n  }\n\n  .avatar_overlay {\n    position: relative;\n\n    input[type='file'] {\n      display: none;\n    }\n\n    &:hover::after {\n      transition: all 0.5s;\n      opacity: 0.6;\n    }\n\n    &:hover::before {\n      transition: all 0.2s;\n      opacity: 1;\n    }\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n      background-color: black;\n      border-radius: 100%;\n      opacity: 0;\n      cursor: pointer;\n    }\n\n    &::before {\n      content: 'Edit';\n      z-index: 2;\n      color: white;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, 10%);\n      border: 1px solid white;\n      padding: 0.05rem 1rem;\n      border-radius: 20px;\n      font-size: 12px;\n      cursor: pointer;\n      opacity: 0;\n    }\n  }\n\n  .userInfo {\n    &__back {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        display: flex;\n        gap: 0.2rem;\n        align-items: center;\n        transition: all 0.3s;\n      }\n      button :hover {\n        gap: 0.5rem;\n      }\n    }\n  }\n\n  .infoTab {\n    margin-top: 1rem;\n    padding: 0 0.5rem;\n  }\n`\n","import { Button, Col, Form, Input, notification, Row, Space, Typography } from 'antd'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { changePassword } from '../../redux/authSlice'\n\nconst ChangePassword = () => {\n  const dispatch = useDispatch()\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [form] = Form.useForm()\n\n  const handleSubmit = async (values) => {\n    setLoading(true)\n    dispatch(changePassword(values)).then((response) => {\n      if (response.type === 'auth/changePassword/fulfilled') {\n        setLoading(false)\n        notification.success({ message: 'Password successfully changed' })\n        form.resetFields()\n      }\n      if (response.type === 'auth/changePassword/rejected') {\n        setLoading(false)\n        setError({ message: response?.payload?.message, errors: response?.payload?.errors })\n      }\n    })\n  }\n\n  return (\n    <Row>\n      <Col sm={24} md={12} lg={9}>\n        <Form\n          form={form}\n          onValuesChange={() => setError(null)}\n          onFinish={handleSubmit}\n          layout='vertical'\n        >\n          <Space size='middle' direction='vertical'>\n            {error && (\n              <Typography.Text type='danger'>\n                {error.message}\n                {/* {error.errors && Object.keys(error.errors).map((e) => error.errors[e].join(', '))} */}\n              </Typography.Text>\n            )}\n            <span />\n          </Space>\n          <Form.Item\n            label='Current Password'\n            name='old_password'\n            rules={[\n              {\n                type: 'password',\n                required: true,\n                message: 'Please enter your current password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('old_password') !== '') {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('Please enter your current password!'))\n                },\n              }),\n            ]}\n          >\n            <Input placeholder='current password' size='large' type='password' />\n          </Form.Item>\n          <Form.Item\n            label='New Password'\n            name='password'\n            rules={[\n              { required: true, message: 'Please input your new password!', type: 'password' },\n            ]}\n          >\n            <Input size='large' type='password' placeholder='new password' />\n          </Form.Item>\n          <Form.Item\n            label='Confirm New Password'\n            name='password_confirmation'\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(\n                    new Error('The two passwords that you entered do not match!'),\n                  )\n                },\n              }),\n            ]}\n          >\n            <Input size='large' type='password' placeholder='new password' />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              loading={loading}\n              className='btn-reset'\n              htmlType='submit'\n              style={{color: 'white', backgroundColor: '#FF0303'}}              size='large'\n            >\n              {loading ? 'Loading...' : 'Reset Password'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ChangePassword\n","import { Button, Col, Form, Input, notification, Row, Space, Typography } from 'antd'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editProfile, getProfile } from '../../redux/profileSlice'\n\nconst EditProfile = () => {\n  const dispatch = useDispatch()\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [form] = Form.useForm()\n  const { singleData } = useSelector((state) => state.profile)\n\n  const handleSubmit = async (values) => {\n    setLoading(true)\n    dispatch(editProfile(values)).then((response) => {\n      if (response.type === 'profile/editProfile/fulfilled') {\n        setLoading(false)\n        notification.success({ message: 'Profile updated successfully' })\n        dispatch(getProfile())\n        form.resetFields()\n      }\n      if (response.type === 'profile/editProfile/rejected') {\n        setLoading(false)\n        setError({ message: response?.payload?.message, errors: response?.payload?.errors })\n      }\n    })\n  }\n\n  return (\n    <Row>\n      <Col sm={24} md={12} lg={9}>\n        <Form\n          form={form}\n          onValuesChange={() => setError(null)}\n          onFinish={handleSubmit}\n          layout='vertical'\n        >\n          <Space size='middle' direction='vertical'>\n            {error && (\n              <Typography.Text type='danger'>\n                {error.message}\n                {/* {error.errors && Object.keys(error.errors).map((e) => error.errors[e].join(', '))} */}\n              </Typography.Text>\n            )}\n            <span />\n          </Space>\n          <Form.Item\n            label='First Name'\n            name='first_name'\n            rules={[\n              {\n                required: true,\n                message: 'Please enter your first name',\n              },\n            ]}\n          >\n            <Input placeholder='First name' size='large' />\n          </Form.Item>\n          <Form.Item\n            label='Last Name'\n            name='last_name'\n            rules={[\n              {\n                message: 'Please enter your last name',\n              },\n            ]}\n          >\n            <Input placeholder='Last name' size='large' />\n          </Form.Item>\n          <Form.Item\n            label='Phone number'\n            name='phone_number'\n            rules={[\n              {\n                required: true,\n                message: 'Please enter your phone number',\n              },\n              {\n                pattern: '^[0-9]+$',\n                message: 'Please enter a valid phone number',\n              },\n            ]}\n          >\n            <Input placeholder='Last name' size='large' />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              loading={loading}\n              className='btn-reset'\n              htmlType='submit'\n              style={{color: 'white', backgroundColor: '#FF0303'}}     \n              size='large'\n            >\n              {loading ? 'Loading...' : 'Submit'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  )\n}\n\nexport default EditProfile\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport ChangePassword from \"./ChangePassword\";\nimport EditProfile from \"./EditProfile\";\nimport styled from \"styled-components\";\n\nconst { TabPane } = Tabs;\n\nconst SettingsTabs = (props) => {\n  const { singleData } = useSelector((state) => state.clients);\n\n  return (\n    <StyledDiv {...props}>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Edit Profile\" key=\"1\">\n          <EditProfile singleData={singleData} />\n        </TabPane>\n        <TabPane tab=\"Change Password\" key=\"2\">\n          <ChangePassword />\n        </TabPane>\n        <TabPane tab=\"Referral Discount Settings\" key=\"3\">\n        </TabPane>\n      </Tabs>\n    </StyledDiv>\n  );\n};\n\nexport default SettingsTabs;\n\nconst StyledDiv = styled.div`\n  margin-top: 1rem;\n  padding: 0 0.5rem;\n`;\n","import { PageHeader } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getProfile } from '../../redux/profileSlice'\nimport ProfileInfo from './ProfileInfo'\nimport SettingsTabs from './SettingsTabs'\n\nconst Settings = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getProfile())\n  }, [])\n\n  return (\n    <div>\n      <PageHeader title='Settings' />\n      <ProfileInfo />\n      <SettingsTabs />\n    </div>\n  )\n}\n\nexport default Settings\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useSelector","state","profile","singleData","loading","imageUploadRef","useRef","formData","FormData","console","log","StyledContainer","className","onClick","to","icon","type","style","color","Meta","avatar","current","click","onChange","e","append","target","files","editProfilePicture","then","response","notification","message","handleImageUpload","name","ref","accept","size","src","profile_photo_url","title","level","full_name","description","phone_number","href","email","styled","useState","error","setError","setLoading","Form","form","handleSubmit","values","changePassword","resetFields","payload","errors","sm","md","lg","onValuesChange","onFinish","layout","direction","label","rules","required","getFieldValue","validator","_","value","Promise","reject","Error","resolve","placeholder","htmlType","backgroundColor","editProfile","getProfile","pattern","TabPane","Tabs","props","clients","StyledDiv","defaultActiveKey","tab","useEffect"],"sourceRoot":""}