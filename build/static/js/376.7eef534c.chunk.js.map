{"version":3,"file":"static/js/376.7eef534c.chunk.js","mappings":"yQA8FA,UArFc,WACZ,MAAeA,EAAAA,EAAAA,UAARC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOC,IAAlB,IAAxBH,QAER,GAA0BI,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,UAACC,EAAD,YACE,iBAAKC,UAAU,OAAf,WACE,8BACE,gBAAKC,MAAO,CAAEC,QAAS,MAAOC,MAAO,OAAQC,OAAQ,SAAWC,IAAKC,EAAMC,IAAI,aAEjF,SAAC,UAAD,CAAkBN,MAAO,CAAEO,UAAW,UAAYC,MAAO,KACzD,SAAC,UAAD,CAAkBA,MAAO,EAAGR,MAAO,CAAEO,UAAW,UAAhD,oBACA,sBAEF,UAAC,IAAD,CACEE,aAAa,WACbvB,KAAMA,EACNwB,SAxBW,SAACC,GAChBxB,GAASyB,EAAAA,EAAAA,IAAMD,IAAQE,MAAK,SAACC,GAEoB,IAAD,GAD9CC,QAAQC,IAAIF,GACW,yBAAX,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUG,OACZpB,EAAS,CAAED,OAAO,EAAMsB,QAAO,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUK,eAAZ,aAAE,EAAmBD,UACxB,0BAAX,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAUG,OACnB5B,EAAS,aAEZ,GACF,EAgBK+B,KAAK,aACLC,OAAO,WACPC,aAAa,QANf,WAQE,SAAC,SAAD,CACEC,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,mCAEX,CACED,KAAM,QACNC,QAAS,+BAGbO,MAAM,SACNL,KAAK,QAZP,UAcE,SAAC,IAAD,CAAOM,KAAK,QAAQC,YAAY,QAAQL,aAAc,WAExD,SAAC,SAAD,CACEC,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,+BAGbO,MAAM,YACNL,KAAK,WARP,UAUE,SAAC,IAAD,CAAOE,aAAa,MAAMI,KAAK,QAAQT,KAAK,gBAE9C,SAAC,SAAD,WACE,SAAC,IAAD,CAAQ1B,QAASA,EAASmC,KAAK,QAAQE,SAAS,SAAS5B,MAAO,CAAC6B,MAAO,OAAQC,gBAAgB,WAAYC,OAAK,EAAjH,2BAKE,OAALnC,QAAK,IAALA,OAAA,EAAAA,EAAOA,SAAS,SAAC,SAAD,CAAiBqB,KAAK,SAAtB,gBAAgCrB,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAOsB,WAExD,gBAAKnB,UAAU,aAAf,UACE,SAAC,SAAD,WACE,SAAC,KAAD,CAAMC,MAAO,CAAC6B,MAAO,WAAY9B,UAAU,kBAAkBiC,GAAG,kBAAhE,oCAQT,EAID,IAAMlC,EAAiBmC,EAAAA,GAAAA,IAAH,8uB","sources":["pages/Auth/Login.js"],"sourcesContent":["import { Form, Input, Button, Typography } from 'antd'\nimport React, { useState, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport Logo from '../../assets/logo.png'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login } from '../../redux/authSlice'\n\nconst Login = () => {\n  const [form] = Form.useForm()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { loading } = useSelector((state) => state?.auth)\n\n  const [error, setError] = useState(null)\n\n  const onFinish = (value) => {\n    dispatch(login(value)).then((response) => {\n      console.log(response)\n      if (response?.type === 'auth/login/rejected') {\n        setError({ error: true, message: response?.payload?.message })\n      } else if (response?.type === 'auth/login/fulfilled') {\n        navigate('/dashboard')\n      }\n    })\n  }\n\n  return (\n    <LoginContainer>\n      <div className='logo'>\n        <picture>       \n          <img style={{ padding: '5px', width: 'auto', height: '100px' }} src={Logo} alt='helpa' />\n        </picture>\n        <Typography.Title style={{ textAlign: 'center' }} level={2}></Typography.Title>\n        <Typography.Title level={2} style={{ textAlign: 'center' }}>Login</Typography.Title>\n        <br />\n      </div>\n      <Form\n        requiredMark='optional'\n        form={form}\n        onFinish={onFinish}\n        name='multi-form'\n        layout='vertical'\n        autoComplete='false'\n      >\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: 'Please enter your email address',\n            },\n            {\n              type: 'email',\n              message: 'Please enter a valid email',\n            },\n          ]}\n          label='Email '\n          name='email'\n        >\n          <Input size='large' placeholder='Email' autoComplete={'off'} />\n        </Form.Item>\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: 'Please enter your password',\n            },\n          ]}\n          label='Password '\n          name='password'\n        >\n          <Input autoComplete='off' size='large' type='password' />\n        </Form.Item>\n        <Form.Item>\n          <Button loading={loading} size='large' htmlType='submit' style={{color: '#fff', backgroundColor:'#FF0303'}} block>\n            Sign In\n          </Button>\n        </Form.Item>\n      </Form>\n      {error?.error && <Typography.Text type='danger'>{error?.message}</Typography.Text>}\n\n      <div className='no-account'>\n        <Typography.Text >\n          <Link style={{color: '#FF0303'}} className='forgot-password' to='/reset-password'>\n            Forgot password?\n          </Link>\n        </Typography.Text>\n       \n      </div>\n    </LoginContainer>\n  )\n}\n\nexport default Login\n\nconst LoginContainer = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n  padding: 2rem;\n  width: 100%;\nfont-family: 'Inter', sans-serif !important;\n  background-color: white;\n  border-radius: 0.5rem;\n\n  .logo img {\n    display: flex;\n    justify-content: center;\n    overflow: hidden;\n    width: 150px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: 600px) {\n    padding: 3rem;\n    width: 500px;\n  }\n\n  a .forgot-password {\n    color: red;\n    font-size: 0.75rem;\n  }\n\n  .no-account {\n    display: flex;\n    justify-content: center;\n    margin-top: 3rem;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.2rem;\n\n    a .create-account {\n      font-size: 1rem;\n      white-space: nowrap;\n    }\n  }\n`\n"],"names":["Form","form","dispatch","useDispatch","navigate","useNavigate","loading","useSelector","state","auth","useState","error","setError","LoginContainer","className","style","padding","width","height","src","Logo","alt","textAlign","level","requiredMark","onFinish","value","login","then","response","console","log","type","message","payload","name","layout","autoComplete","rules","required","label","size","placeholder","htmlType","color","backgroundColor","block","to","styled"],"sourceRoot":""}